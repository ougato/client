{"version":3,"sources":["assets/src/ui/scene/AccountScene.ts","assets/src/core/manager/animation/AnimationManager.ts","assets/src/define/AudioDefine.ts","assets/src/utils/AudioEffectUtil.ts","assets/src/core/manager/audio/AudioManager.ts","assets/src/core/manager/audio/Audio.ts","assets/src/ui/scene/BootScene.ts","assets/src/utils/CodeUtil.ts","assets/src/define/EventDefine.ts","assets/src/core/manager/event/EventManager.ts","assets/src/pattern/Factory.ts","assets/src/config/GameConfig.ts","assets/src/Game.ts","assets/src/core/Global.ts","assets/src/ui/scene/HomeScene.ts","assets/src/define/HttpDefine.ts","assets/src/core/http/HttpFetch.ts","assets/src/interface/HttpInterface.ts","assets/src/core/http/HttpRequest.ts","assets/src/core/http/HttpXmlRequest.ts","assets/src/define/LanguageDefine.ts","assets/src/define/LanguagePathDefine.ts","assets/src/utils/LanguageUtil.ts","assets/src/core/machine/Loader.ts","assets/src/ui/view/animation/LoadingClip.ts","assets/src/ui/view/persist/LoadingView.ts","assets/src/define/LocalStorageDefine.ts","assets/src/define/LocalizationDefine.ts","assets/src/i18n/Localization.ts","assets/src/ui/view/persist/LockTouchView.ts","assets/src/core/machine/Logger.ts","assets/src/ui/view/account/LoginView.ts","assets/src/ui/view/common/MaintainView.ts","assets/src/interface/ManagerInterface.ts","assets/src/core/manager/Manager.ts","assets/src/define/NetworkDefine.ts","assets/src/interface/NetworkInterface.ts","assets/src/core/manager/network/NetworkManager.ts","assets/src/core/manager/network/NetworkMessageTimer.ts","assets/src/utils/NetworkUtil.ts","assets/src/ui/view/common/NumKeyboardView.ts","assets/src/interface/PersistInterface.ts","assets/src/interface/PoolInterface.ts","assets/src/pattern/Pool.ts","assets/src/ui/view/common/PopupsView.ts","assets/src/ui/view/persist/ProgressView.ts","assets/src/protobuf/Proto.js","assets/src/ui/view/account/RegisterView.ts","assets/src/ui/view/common/RollNoticeView.ts","assets/src/ui/SceneBase.ts","assets/src/define/SceneDefine.ts","assets/src/interface/SceneInterface.ts","assets/src/config/ServerConfig.ts","assets/src/config/SystemConfig.ts","assets/src/ui/view/persist/TestView.ts","assets/src/utils/TimeUtil.ts","assets/src/ui/view/common/TipsView.ts","assets/src/utils/TweenUtil.ts","assets/src/ui/UIBase.ts","assets/src/interface/UIInterface.ts","assets/src/core/manager/ui/UIManager.ts","assets/src/config/UpdateConfig.ts","assets/src/define/UpdateDefine.ts","assets/src/interface/UpdateInterface.ts","assets/src/core/manager/update/UpdateManager.ts","assets/src/ui/view/update/UpdateView.ts","assets/src/utils/Util.ts","assets/src/ui/ViewBase.ts","assets/src/define/ViewDefine.ts","assets/src/interface/ViewInterface.ts","assets/src/define/ViewLayerDefine.ts","assets/src/define/ViewStyleDefine.ts","assets/src/config/WebAPIConfig.ts","assets/src/interface/WebAPIInterface.ts","assets/src/lib/md5.js","assets/src/lib/protobuf.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAOG;;;;;;;;;;;AAEH;AACA;AACA;AAEA;AAGA;AAAA;AAAA;;AAEI;AACQ;AAmDZ;AAjDc;AACN;AACA;AACA;AACJ;AAEU;AACN;AACI;AACH;AAAM;AACH;AACH;AACL;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACO;AACN;AACJ;AAEH;AAtDoB;AADpB;AACoB;AAsDrB;AAAC;AAtDoB;;;;;;;;;AChBrB;;;;;;;AAOG;;;;;AAEH;AAEA;AAAA;AAkBI;AACI;AAEJ;AAjBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAOA;;AAEG;AACI;AAEP;;AA1Be;AA4BnB;AAAC;AA9BoB;;;;;;;;;ACXrB;;;;;;;AAOG;;;AAEH;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AACI;AACJ;AAEA;;;;;;;;;ACnBA;;;;;;;AAOG;;AAEH;AAEI;;AAEG;AACI;AACH;AACA;AACA;AACK;AACA;AACG;AACI;AACH;AACL;AACC;AACT;AAEA;;AAEG;AACI;AACH;AACK;AACA;AACG;AACI;AACH;AACL;AACC;AACT;AAEH;AAhCD;;;;;;;;;ACTA;;;;;;;AAOG;;;;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAyBI;AACI;AAtBJ;AACQ;AACR;AACQ;AACR;AACQ;AAmBJ;AACA;AACA;AACJ;AApBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAUA;;;;AAIG;AACK;AACJ;AACA;AACI;AACH;AACD;AACJ;AAEA;;;;AAIG;AACI;AACH;AACI;AACI;AACH;AAED;AACI;AACA;AACA;AACA;AACI;AACA;AACJ;AACA;AACI;AACH;AAAM;AACH;AACH;AAED;AACJ;AAEA;AACA;AACI;AACI;AACI;AACA;AACJ;AACH;AAAM;AACH;AACA;AACH;AACJ;AAAM;AACH;AACH;AACL;AACJ;AAEA;;AAEG;AACI;AACH;AACI;AACA;AACH;AAED;AACJ;AAEA;;;AAGG;AACI;AACH;AACI;AACA;AACH;AAED;AACI;AACI;AACJ;AACH;AAAM;AACH;AACH;AAEL;AAEA;;AAEG;AACI;AACH;AACI;AACA;AACH;AAED;AACJ;AAEA;;;;;AAKG;AACI;AACH;AACI;AACA;AACI;AACH;AACJ;AAED;AACI;AACI;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACI;AACA;AACH;AACD;AACA;AACA;AACI;AACH;AACL;AACA;AACA;AACA;AACJ;AACJ;AAEA;;;AAGG;AACI;AACH;AACI;AACA;AACH;AAED;AACA;AACI;AACA;AACH;AAED;AACI;AACA;AACH;AAED;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACI;AACI;AACJ;AACH;AACL;AAEA;;;AAGG;AACI;AACH;AACI;AACA;AACH;AAED;AACA;AACI;AACA;AACH;AAED;AACI;AACA;AACH;AAED;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACI;AACI;AACJ;AACH;AACL;AAEA;;;AAGG;AACI;AACH;AACI;AACA;AACH;AAED;AACA;AACI;AACA;AACH;AAED;AACI;AACA;AACH;AAED;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACI;AACI;AACJ;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACJ;AAGA;;AAEG;AACK;AACJ;AACI;AACA;AACJ;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACA;AACA;AACA;AACA;AACJ;;AA/Te;AAiUnB;AAAC;AAnUoB;;;;;;;;;ACtBrB;;;;;;;AAOG;;AAEH;AAWI;AACI;AAVJ;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AAIR;AAEA;;;AAGG;AACI;AACH;AACJ;AAEA;;;AAGG;AACI;AACH;AACA;AACJ;AAEA;;;AAGG;AACI;AACH;AACJ;AAEA;;;AAGG;AACI;AACH;AACJ;AAEA;;AAEG;AACK;AACJ;AACI;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACI;AACI;AACI;AACH;AACL;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACI;AACA;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACA;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACA;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACA;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACA;AACA;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACA;AACA;AACJ;AAEA;;AAEG;AACI;AACH;AACJ;AAEH;AA7ID;;;;;;;;;ACTA;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;;AAGY;AAGA;AA4VZ;AA1Vc;AACN;AACA;AACA;AACA;AACJ;AAEU;AACN;AACJ;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACI;AAEP;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACK;AACJ;AACJ;AAEA;;AAEG;AACW;;AACV;AACA;AACA;AACA;AACJ;AAAC;AAED;;AAEG;AACW;;AACV;AACI;AACA;AACA;AACI;AACA;AACA;AACH;AAED;AAEA;AACI;AACI;AACA;AACI;AACJ;AACH;AAAM;AACH;AACH;AACD;AACJ;AACJ;AACI;AACA;AACJ;AACJ;AAAC;AAED;;AAEG;AACW;;AACV;AACA;AACI;AACI;AACA;AACA;AACA;AACH;AACD;AACI;AACI;AACA;AACI;AACJ;AACH;AAAM;AACH;AACI;AACA;AACA;AACA;AACA;AACJ;AACA;AACH;AACL;AACJ;AACI;AACJ;AACJ;AAAC;AAED;;AAEG;AACW;;AACV;AACI;AACI;AACA;AACA;AACH;AAAM;AACH;AACH;AACL;AACI;AACJ;AACI;AACJ;AACJ;AAAC;AAED;;AAEG;AACW;;AACV;AACI;AACJ;AACI;AACJ;AACJ;AAAC;AAED;;AAEG;AACW;;AACV;AACI;AACI;AACJ;AACJ;AACJ;AAAC;AAED;;AAEG;AACW;;AACV;AACI;AACH;AAED;AACI;;AAEG;AACH;AACI;AACA;AACJ;AAEA;;;AAGG;AACH;AACI;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACJ;AACI;AACP;AAED;AACI;AACI;AACA;AACI;AACJ;AACI;AACJ;AACH;AAED;AACA;AACI;AACH;AAED;AACI;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACP;AAEL;AACI;AACJ;AACJ;AAEA;;AAEG;AACH;AACI;AAEA;AACI;AACA;AACI;AACJ;AACI;AACJ;AACH;AAED;AAEA;AACA;AACI;AACH;AAED;AACI;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACP;AACL;AAEA;;AAEG;AACH;AACI;AAEA;AACI;AACA;AACI;AACJ;AACI;AACJ;AACH;AAED;AAEA;AACI;AACH;AAED;AACI;AACI;AACA;AACJ;AAAoC;AAChC;AACH;AACG;AACJ;AAAqC;AACjC;AACI;AACJ;AACI;AACJ;AACH;AACG;AACJ;AAAkC;AAC9B;AACA;AACA;AACH;AACG;AACJ;AAAoC;AAChC;AACA;AACI;AACA;AACJ;AACH;AACG;AACJ;AAAS;AACL;AACH;AACG;AACP;AACL;AAEA;AACJ;AACJ;AAAC;AAED;;AAEG;AACK;AACJ;AACJ;AAEU;AAEV;AACH;AA/VG;AADC;AACgC;AAGjC;AADC;AAC0C;AAN1B;AADpB;AACoB;AAkWrB;AAAC;AAlWoB;;;;;;;;;AC3BrB;;;;;;;AAOG;;;;;AAEH;AAEA;AAEI;;;;AAIG;AACI;AACH;;AAEG;AACH;AAEA;AACA;AACA;AACA;AACA;AAEA;AACI;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACJ;AACA;AACI;AACA;AACA;AACJ;AACI;AACA;AACA;AACA;AACP;AACJ;AAED;AACJ;AAGA;;;;AAIG;AACI;AACH;;AAEG;AACH;AAEA;AACA;AACA;AACA;AACA;AAEA;AACI;AACA;AACI;AACI;AACA;AACI;AACA;AACH;AACJ;AACD;AACI;AACH;AACJ;AAED;AACI;AACA;AACA;AACA;AACA;AACA;AACH;AAED;AACI;AACA;AACH;AAAM;AACH;AACH;AAAM;AACH;AACA;AACH;AAAM;AACH;AACA;AACA;AACH;AAAM;AACH;AACH;AAED;AACH;AAED;AACJ;AAEA;;;;AAIG;AACI;AACH;AACJ;AAEA;;;;AAIG;AACI;AACH;AACJ;AAEH;AAlID;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;AAOG;;;AAEH;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACJ;AAEA;AACA;AAAA;AACI;AACA;AACJ;AAEA;;;;;;;;;AC5CA;;;;;;;AAOG;;;;;AAEH;AACA;AACA;AAEA;AAAA;AAqBI;AACI;AAlBJ;AACQ;AAmBJ;AACJ;AAlBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAQA;;;;;AAKG;AACI;AACH;AACI;AACA;AACH;AAED;AAEA;AACI;AACA;AACH;AAED;AAEA;AACI;AACA;AACH;AAED;AACJ;AAEA;;;;AAIG;AACI;AACH;AACI;AACA;AACH;AAED;AACA;AACI;AACH;AAED;AACI;AACH;AACL;AAEA;;;;AAIG;AACI;AACH;AACI;AACA;AACH;AAED;AAEA;AACI;AACH;AAED;AACI;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACJ;;AA9Ge;AAgHnB;AAAC;AAlHoB;;;;;;;;;ACbrB;;;;;;;AAOG;;AAEH;AAEI;;;;AAIG;AACI;AACH;AACJ;AAEH;AAXD;;;;;;;;;ACTA;;;;;;;AAOG;;;;;;AAEH;AACA;AAEA;AACa;AACb;AACa;AACb;AACa;AACb;AACa;;;;;;;;;ACnBb;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA2BI;AAvBA;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AAiBJ;AACA;AACJ;AAjBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAOA;;AAEG;AACK;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AACA;;AAEG;AACK;AACJ;AAEA;AACJ;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACK;AACJ;AAEA;AACI;AACI;AACA;AACI;AACJ;AACA;AACJ;AACI;AACA;AACA;AACP;AACL;AAEA;;AAEG;AACK;AACJ;AACA;AACJ;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACA;AACI;AACH;AAAM;AACH;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACA;AACA;AACI;AACH;AAAM;AACH;AACH;AAEL;AAEA;AACI;AACJ;AAEA;AACI;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;AACI;AACJ;AAEA;AACI;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;AACI;AACJ;AAEA;AACI;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;AACI;AACJ;AAEA;AACI;AACI;AACH;AAAM;AACH;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACA;AACA;AACA;AACJ;;AA1Oe;AA2OnB;AAAC;AA7OoB;;;;;;;;;ACvBrB;;;;;;;AAOG;;;;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAkBI;AACI;AACJ;AAhBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAMA;;;AAGG;AACH;AACI;AACJ;AAEA;;;AAGG;AACH;AACI;AACJ;AAEA;;;AAGG;AACH;AACI;AACJ;AAEA;;;AAGG;AACH;AACI;AACJ;AAEA;;;AAGG;AACH;AACI;AACJ;AAEA;;;AAGG;AACH;AACI;AACJ;AAEA;;;AAGG;AACH;AACI;AACJ;AAEA;;;AAGG;AACH;AACI;AACJ;AAEA;;;AAGG;AACH;AACI;AACJ;AAEA;;;AAGG;AACH;AACI;AACJ;AAGO;AACH;AACJ;;AAvGe;AAwGnB;AAAC;AA1GoB;;;;;;;;;;;;;;;;;;;ACpBrB;;;;;;;AAOG;AACH;AAEA;AAGA;AAAA;AAEc;AACN;AACA;AACA;AACJ;AAEU;AAEV;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACO;AACN;AACJ;AAEH;AA/CoB;AADpB;AACoB;AA+CrB;AAAC;AA/CoB;;;;;;;;;ACbrB;;;;;;;AAOG;;;AAEH;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AAAA;AACI;AACA;AACJ;AAEA;AAAA;AACI;AACA;AACA;AACA;AACJ;AAEA;AAAA;AACI;AACA;AACA;AACA;AACA;AACJ;AAEA;AACa;;;;;;;;;AC5Cb;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AAEA;AAEA;AAaI;AAXA;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AAGJ;AACA;AACA;AACJ;AAEA;;;AAGG;AACO;AACN;AACA;AACA;AACA;AACI;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;;;;;;AAOG;AACU;;AACT;AACA;AACA;AACI;AACH;AAED;AACI;AACA;AACA;AACA;AACI;AACH;AAED;AACI;AACA;AACH;AAED;AACA;AACI;AACA;AACA;AACI;AACA;AACA;AACH;AAAM;AACH;AACA;AACH;AACD;AACJ;AACI;AACA;AACI;AACH;AAAM;AACH;AACH;AACD;AACA;AACJ;AACJ;AACJ;AAAC;AAED;;;;AAIG;AACW;;AACV;AACI;AACA;AACI;AACJ;AACI;AACJ;AACI;AACJ;AACI;AACJ;AACI;AACJ;AACI;AACP;AACL;AAAC;AAGD;;AAEG;AACK;AACJ;AACI;AACI;AACA;AACA;AACJ;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACI;AACA;AACH;AACL;AAEH;AA7ID;;;;;;;;;ACbA;;;;;;;AAOG;;;;;;;;;;ACPH;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGH;AACA;AAEA;AAEI;;;;AAIG;AACK;AACJ;AACA;AACI;AACH;AACD;AACJ;AAEA;;;;;;AAMG;AACI;;AACH;AACI;AACA;AACH;AAED;AACA;AACI;AACH;AAAM;AACH;AACH;AAED;AACJ;AAAC;AAED;;;;;;;AAOG;AACI;;AACH;AACI;AACA;AACH;AAED;AACA;AACI;AACH;AAAM;AACH;AACH;AACD;AACJ;AAAC;AACJ;AA5DD;;;;;;;;;ACbA;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AACA;AAEA;AACA;AAEA;AAaI;AAXA;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;;;;;;AAOG;AACU;;AACT;AACA;AACA;AACI;AACH;AACD;AACI;AACH;AAED;AACI;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACJ;AACI;AACA;AACJ;AACJ;AAAC;AAED;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACI;AACI;AACA;AACA;AACJ;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACI;AACA;AACA;AACH;AACL;AAEA;;;;AAIG;AACW;;AACV;AACI;AACA;AACI;AACJ;AACI;AACJ;AACI;AACJ;AACI;AACJ;AACI;AACJ;AACI;AACP;AACL;AAAC;AAED;;AAEG;AACK;AACJ;AACI;AACA;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACA;AACI;AACA;AACH;AACD;AACJ;AAEA;;;AAGG;AACK;AAER;AAEA;;AAEG;AACK;AACJ;AACI;AACA;AACH;AACL;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AACJ;AACA;AACI;AACA;AACH;AACD;AACJ;AAEA;;AAEG;AACK;AACJ;AACI;AACA;AACA;AAEI;AACA;AACI;AACA;AACH;AACD;AACA;AACI;AACH;AAEJ;AAAM;AACH;AACI;AACA;AACH;AACD;AACH;AAED;AACH;AACL;AACH;AAlND;;;;;;;;;ACfA;;;;;;;AAOG;;AAEH;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;;;;;;;;ACvMA;;;;;;;AAOG;;AAEH;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;;;;;;;;ACvMA;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AACA;AACA;AAEA;AAEI;;;;AAIG;AACI;AACH;AACA;AACI;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACJ;AACH;AAED;AACI;AACH;AACD;AACJ;AACH;AA7ED;;;;;;;;;ACbA;;;;;;;AAOG;;;;;AAEH;AACA;AAEA;AAAA;AAqBI;AACI;AACJ;AAhBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAMA;;;;AAIG;AACK;AACJ;AACA;AACI;AACH;AAAM;AACH;AACI;AACH;AACJ;AACD;AACJ;AAEA;;;;AAIG;AACK;AACJ;AACA;AACI;AACH;AACD;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACI;AACA;AACI;AACA;AACA;AACH;AACJ;AAAM;AACH;AACH;AACL;AAEA;;;;AAIG;AACI;AACH;AACJ;AAEA;;;;;AAKG;AACI;AACH;AACI;AACI;AACH;AACD;AACH;AAED;AACI;AACA;AACI;AACH;AACL;AACI;AACI;AACA;AACI;AACH;AACJ;AAAM;AACH;AACI;AACH;AACJ;AACL;AACJ;AAEA;;;;;AAKG;AACI;AACH;AACI;AACA;AACI;AACH;AACD;AACH;AAED;AACI;AACA;AACI;AACH;AACL;AACI;AACI;AACA;AACI;AACH;AACJ;AAAM;AACH;AACI;AACI;AACH;AACJ;AAAM;AACH;AACH;AAED;AACI;AACH;AACJ;AACL;AACJ;AAEA;;;;;AAKG;AACI;AACH;AACI;AACA;AACI;AACH;AACD;AACH;AAED;AACI;AACA;AACI;AACI;AACH;AACD;AACH;AACJ;AAAM;AACH;AACH;AAED;AACI;AACH;AACL;AAEA;;;;;AAKG;AACI;AACH;AACI;AACA;AACI;AACH;AACD;AACH;AAED;AACI;AACA;AACI;AACI;AACH;AACD;AACA;AACI;AACI;AACH;AACJ;AACJ;AACJ;AAAM;AACH;AACA;AACI;AACI;AACH;AACJ;AACJ;AAED;AACI;AACH;AACL;AAEA;;;;AAIG;AACI;AACH;AACA;AACI;AACA;AACI;AACI;AACH;AACD;AACI;AACH;AACL;AACA;AACH;AAED;AACI;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACI;AACJ;AACJ;;AArQe;AAsQnB;AAAC;AAxQoB;;;;;;;;;ACZrB;;;;;;;AAOG;;;;;;;;AAEH;AAEA;AACA;AAAA;AACI;AACA;AACA;AACA;AACJ;AAGA;AAAA;AAAA;;AAGY;AAGA;AAER;AACQ;AAqDZ;AAnDc;AACN;AACA;AACJ;AAEU;AAEV;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACJ;AAEA;;AAEG;AACI;AACH;AACI;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACI;AACH;AACD;AACJ;AAEH;AA3DG;AADC;AACkC;AAGnC;AADC;AACkC;AANlB;AADpB;AACoB;AA8DrB;AAAC;AA9DoB;;;;;;;;;ACpBrB;;;;;;;AAOG;;;;;;;;;;;AAEH;AAGA;AAGA;AAAA;AAAA;;AAGY;AAGA;AAEA;AAiDZ;AA/Cc;AACN;AACA;AACJ;AAEU;AACN;AACJ;AAEU;AACN;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACI;AACH;AACA;AACI;AACH;AACD;AACJ;AAEA;;AAEG;AACI;AACH;AACJ;AAEH;AAtDG;AADC;AACgC;AAGjC;AADC;AACmC;AANnB;AADpB;AACoB;AAyDrB;AAAC;AAzDoB;;;;;;;;;ACfrB;;;;;;;AAOG;;AAEH;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACJ;AAEA;;;;;;;;;ACxBA;;;;;;;AAOG;;AAEH;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;;;;;;;;AChCA;;;;;;;AAOG;;AAEH;AAAA;AAqBI;AAjBA;AACQ;AAkBR;AAhBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAMA;AACI;AACJ;AAEA;;;;;AAKG;AACI;AACH;AACA;AACI;AACH;AAED;AACI;AACI;AACA;AACA;AACA;AACI;AACH;AAAM;AACH;AACI;AACH;AAAM;AACH;AACH;AACJ;AACD;AACJ;AACH;AAED;AACJ;AAEA;;AAEG;AACI;AACH;AACJ;;AAjEe;AAkEnB;AAAC;AApEoB;;;;;;;;;ACTrB;;;;;;;AAOG;;;;;;;;;;;AAEH;AAEA;AAGA;AAAA;AAEc;AACN;AACA;AACJ;AAEU;AACN;AACJ;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACI;AACH;AACJ;AAEA;;AAEG;AACI;AACH;AACJ;AAEH;AAvCoB;AADpB;AACoB;AAuCrB;AAAC;AAvCoB;;;;;;;;;ACdrB;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;AAEH;AAEA;AAAA;AAkBI;AAEA;AAhBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAMA;;;AAGG;AACI;AACH;AACI;AACH;AAED;AACA;AACJ;AAEA;;;AAGG;AACI;AACH;AACI;AACH;AAED;AACA;AACJ;AAEA;;;AAGG;AACI;AACH;AACI;AACH;AAED;AACA;AACJ;AAEA;;AAEG;AACI;AAEP;;AAhEe;AAkEnB;AAAC;AApEoB;;;;;;;;;ACXrB;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;;AAGY;AAGA;AAoFZ;AAlFc;AACN;AACA;AACA;AACJ;AAEU;AAEV;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;;;AAIG;AACI;AACH;AACA;AACJ;AACA;;AAEG;AACK;AACJ;AACI;AACA;AACH;AACD;AACA;AACI;AACI;AACA;AACI;AACH;AACJ;AACL;AACJ;AAEA;;AAEG;AACK;AACJ;AACI;AACJ;AACJ;AAEA;;AAEG;AACO;AACN;AACJ;AAEH;AAvFG;AADC;AACsC;AAGvC;AADC;AACsC;AANtB;AADpB;AACoB;AA0FrB;AAAC;AA1FoB;;;;;;;;;ACrBrB;;;;;;;AAOG;;;;;;;;;;;AAEH;AAEA;AAGA;AAAA;AAEc;AACN;AACA;AACJ;AAEU;AAEV;AAEQ;AAER;AAEQ;AAER;AAEQ;AACJ;AACJ;AAEH;AAvBoB;AADpB;AACoB;AAuBrB;AAAC;AAvBoB;;;;;;;;ACdrB;;;;;;;AAOG;;;;;;;;;ACPH;;;;;;;AAOG;;AAEH;AAEI;AAEA;AAEH;AAND;;;;;;;;;ACTA;;;;;;;AAOG;;;AAEH;;AAEG;AACH;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACJ;;;;;;;;ACnBA;;;;;;;AAOG;;;;;;;;;ACPH;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAqCI;AACI;AAlCJ;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AAmBJ;AACA;AACA;AACA;AACJ;AArBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAWQ;AACJ;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;;;;AAKG;AACI;AACH;AACA;AACI;AACA;AACH;AAED;AAEA;AACI;AACA;AACH;AAED;AAEA;AACI;AACA;AACH;AAED;AACJ;AAEA;;;;AAIG;AACI;AACH;AACA;AACI;AACA;AACH;AAED;AACA;AACI;AACH;AAED;AACI;AACH;AACL;AAEA;;;AAGG;AACK;AACJ;AACI;AACA;AACH;AAED;AAEA;AACI;AACA;AACH;AAED;AAEA;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACA;AAEA;AAEJ;AAEA;;AAEG;AACK;AACJ;AAEA;AACJ;AAEA;;AAEG;AACK;AACJ;AAEA;AACA;AACI;AACA;AACI;AACA;AACH;AACJ;AAED;AAEA;AACI;AACA;AACH;AAED;AACA;AACI;AACH;AAED;AACA;AACI;AACI;AACJ;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACI;AACH;AAED;AACA;AACA;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACA;AACJ;AAYO;AACH;AACI;AACA;AACH;AAED;AAEA;AACA;AACI;AACH;AAAM;AACH;AACH;AAAM;AACH;AACA;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACJ;AAYO;AACH;AACJ;AAEA;;;;AAIG;AACI;AACH;AACI;AACA;AACH;AAED;AACI;AACA;AACH;AAED;AACA;AACA;AACA;AACA;AAEA;AACI;AACH;AAAC;AACE;AACH;AAED;AACA;AACI;AACA;AACA;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACI;AACA;AACH;AAED;AAEA;AACA;AACA;AACJ;AAEA;;;AAGG;AACI;AACH;AACJ;AAEA;;AAEG;AACK;AACJ;AACI;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACI;AACI;AACA;AACA;AACJ;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACI;AACA;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACI;AACI;AACA;AACJ;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACI;AACA;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACA;AACA;AACJ;AAEA;;;;;AAKG;AACK;AACJ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACJ;AAEA;;;;AAIG;AACK;AACJ;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACI;AACA;AACA;AACH;AAED;AACJ;AAEA;;AAEG;AACI;AAEP;;AA/ce;AAidnB;AAAC;AAndoB;;;;;;;;;AC/BrB;;;;;;;AAOG;;AAEH;AAOI;AALA;AACQ;AACR;AACQ;AAGJ;AACA;AACJ;AAEA;;;;AAIG;AACI;AACH;AACA;AACI;AACI;AACA;AACJ;AACA;AACH;AACL;AAEA;;;AAGG;AACI;AACH;AACA;AACI;AACA;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACI;AACA;AACJ;AACJ;AAEH;AAlDD;;;;;;;;;ACTA;;;;;;;AAOG;;AAEH;AAEC;AAFD;;;;;;;;;ACTA;;;;;;;AAOG;;;;;;;;;;;AAEH;AAEA;AAGA;AAAA;AAEc;AACN;AACA;AACJ;AAEU;AAEV;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEH;AAzBoB;AADpB;AACoB;AAyBrB;AAAC;AAzBoB;;;;;;;;ACdrB;;;;;;;AAOG;;;;;;;;ACPH;;;;;;;AAOG;;;;;;;;;;;;;;;;;ACNH;;;;;;;AAOG;;;;;AAEH;AACA;AAEA;AAOI;AAAoB;AALpB;AACQ;AACR;AACQ;AAGJ;AACI;AACA;AACH;AACD;AACA;AAEA;AACI;AACH;AACL;AAEA;;AAEG;AACH;AACI;AACJ;AAEA;;;AAGG;AACI;AACH;AACA;AACI;AACA;AACH;AACD;AAEA;AACI;AACH;AACD;AACJ;AAEA;;;AAGG;AACI;AACH;AACI;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACI;AACA;AACI;AACA;AACH;AACD;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACI;AACA;AACH;AACD;AACJ;AAEA;;AAEG;AACI;AACH;AACA;AACA;AACJ;AACH;AAxFD;;;;;;;;;ACbA;;;;;;;AAOG;;;;;;;;;;;AAEH;AAEA;AAGA;AAAA;AAAA;;AAGI;AAGA;AAGA;AAGA;AAEA;AACQ;AACR;AACQ;AAwGZ;AAtGc;AACN;AACA;AACJ;AAEU;AAEV;AAEU;AACN;AACA;AACJ;AAEQ;AACJ;AACA;AACJ;AAEQ;AACJ;AACA;AACA;AACA;AACJ;AAEA;;;AAGG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACI;AACH;AACD;AACJ;AAEQ;AACJ;AACI;AACH;AACD;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAAM;AACH;AACA;AACA;AACH;AAED;AACJ;AAEA;;;;;;AAMG;AACI;AACH;AACA;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACI;AACH;AACD;AACJ;AAEA;;AAEG;AACK;AACJ;AACI;AACH;AACD;AACJ;AAEH;AAtHG;AADC;AACyB;AAG1B;AADC;AAC2B;AAG5B;AADC;AAC0B;AAG3B;AADC;AAC2B;AAZX;AADpB;AACoB;AAyHrB;AAAC;AAzHoB;;;;;;;;;ACdrB;;;;;;;AAOG;;;;;;;;;;;AAEH;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;;AAGY;AAER;AACQ;AACR;AACQ;AAkFZ;AAhFc;AACN;AACA;AACJ;AAEU;AACN;AACJ;AAEU;AACN;AACA;AACJ;AAEU;AACN;AACI;AACA;AACA;AACI;AACH;AAAM;AACH;AACH;AAAM;AACH;AACH;AACD;AACA;AACH;AACL;AAEA;;AAEG;AACK;AACJ;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACI;AACH;AACJ;AAEA;;AAEG;AACI;AACH;AACJ;AAEA;;AAEG;AACO;AACN;AACA;AACJ;AAEA;;;AAGG;AACI;AACH;AACI;AACH;AAAM;AACH;AACH;AACD;AACJ;AAEH;AAvFG;AADC;AACsC;AAHtB;AADpB;AACoB;AA0FrB;AAAC;AA1FoB;;;;;;;;ACvBrB;AACA;;;;;AAEA;;;AAGA;AAAA;AAAA;;AAGA;;AAEO;AAEH;;;;;;;;AAQA;;;;;;;;AAQA;AACI;AAEQ;AADJ;AAGP;AAED;;;;;;;;AAMA;AAEA;;;;;;;AAMA;AAEA;;;;;;;;;AAQA;AACI;AACH;AAED;;;;;;;;;;;AASA;AACI;AAEA;AAEA;AAEA;AACH;AAED;;;;;;;;;;;AASA;AACI;AACH;AAED;;;;;;;;;;;;;AAWA;AACI;AAEA;AAAA;;AACA;AACI;;AACA;AACA;AACI;AACA;;AACJ;AACI;AACA;;AACJ;AACI;AACA;AATJ;AAWH;;AACD;AACH;AAED;;;;;;;;;;;;AAUA;AACI;AAEA;AACH;AAED;;;;;;;;;;AAQA;AACI;;AAEA;AACI;AAEH;;AACD;AACI;AAEH;;AACD;AACH;;AAED;AACH;;;;AAEM;AAEH;;;;;;AAMA;;;;;;;;AAQA;AACI;AAEQ;AADJ;AAGP;AAED;;;;;;;;;;AAQA;AACI;AACH;AAED;;;;;;;;;;;AASA;AACI;AAEA;AACH;AAED;;;;;;;;;;;AASA;AACI;AACH;AAED;;;;;;;;;;;;;AAWA;AACI;AAEA;AAAA;;AACA;AACI;;AACA;AACA;AACI;AACA;AAHJ;AAKH;;AACD;AACH;AAED;;;;;;;;;;;;AAUA;AACI;AAEA;AACH;AAED;;;;;;;;;;AAQA;AACI;AAEA;AACH;;AAED;AACH;;;;AAEM;AAEH;;;;;;AAMA;;;;;;;;AAQA;AACI;AAEQ;AADJ;AAGP;AAED;;;;;;;;;;AAQA;AACI;AACH;AAED;;;;;;;;;;;AASA;AACI;AAEA;AACH;AAED;;;;;;;;;;;AASA;AACI;AACH;AAED;;;;;;;;;;;;;AAWA;AACI;AAEA;AAAA;;AACA;AACI;;AACA;AACA;AACI;AACA;AAHJ;AAKH;;AACD;AACH;AAED;;;;;;;;;;;;AAUA;AACI;AAEA;AACH;AAED;;;;;;;;;;AAQA;AACI;AAEA;AACH;;AAED;AACH;;;AAED;;;;;;;;;AC7ZA;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;AAAA;AAAA;;AAEI;AACQ;AAGA;AAGA;AAGA;AAwGZ;AAtGc;AACN;AACA;AACA;AACJ;AAEU;AAEV;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACA;AACI;AACA;AACH;AAAM;AACH;AACA;AACH;AACD;AACA;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACI;AACA;AACH;AACD;AACA;AACI;AACI;AACA;AACI;AACA;AACA;AACA;AACA;AACH;AACJ;AACL;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACO;AACN;AACJ;AAEH;AA9GG;AADC;AACsC;AAGvC;AADC;AACsC;AAGvC;AADC;AACyC;AAZzB;AADpB;AACoB;AAoHrB;AAAC;AApHoB;;;;;;;;;ACtBrB;;;;;;;AAOG;;;;;;;;;;;AAEH;AAEA;AAGA;AAAA;AAAA;;AAEW;AAyBX;AAvBc;AACN;AACA;AACJ;AAEU;AAEV;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AAER;AAEH;AA3BoB;AADpB;AACoB;AA2BrB;AAAC;AA3BoB;;;;;;;;;ACdrB;;;;;;;AAOG;;;;;AAEH;AAEA;AAEI;AACI;AACJ;AAEO;AAEP;AACH;AATD;;;;;;;;;ACXA;;;;;;;AAOG;;;AAEH;AACA;AAAA;AACI;AACA;AACJ;AAEA;AACA;AAAA;AACI;AACA;AACJ;AAEA;AACA;;;;;;;;ACtBA;;;;;;;AAOG;;;;;;;;;ACPH;;;;;;;AAOG;;;AAEH;AACa;;;;;;;;;ACVb;;;;;;;AAOG;;;AAEH;AACa;;;;;;;;;ACVb;;;;;;;AAOG;;;;;;;;;;;AAEH;AAEA;AAEA;AACA;AAGA;AAAA;AAAA;;AAGY;AAGA;AAGA;AAER;AACQ;AACR;AACQ;AAwIZ;AAtIc;AACN;AACA;AACA;AACJ;AAEU;AAEV;AAEA;;AAEG;AACK;AACJ;AACA;AACA;AACA;AACJ;AAEA;;AAEG;AACK;AAER;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACI;AACH;AAAM;AACH;AACH;AACD;AACA;AACJ;AAEA;;AAEG;AACI;AAEP;AAEA;;AAEG;AACI;AAEP;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AAEA;AACI;AACH;AACD;AACA;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AACJ;AAEA;;AAEG;AACK;AACJ;AACA;AAA2C;AAC3C;AACJ;AAEA;;AAEG;AACO;AACN;AACJ;AAEH;AAnJG;AADC;AAC+B;AAGhC;AADC;AACkC;AAGnC;AADC;AACmC;AATnB;AADpB;AACoB;AAsJrB;AAAC;AAtJoB;;;;;;;;;ACjBrB;;;;;;;AAOG;;AAEH;AAEI;;;;AAIG;AACI;AACH;AACA;AACI;AACA;AACH;AAAM;AACH;AACA;AACH;AACL;AACH;AAjBD;;;;;;;;;ACTA;;;;;;;AAOG;;;;;;;;;;;AAEH;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;;AAGY;AAGA;AA4DZ;AA1Dc;AACN;AACA;AACJ;AAEU;AAEV;AAEQ;AAER;AAEQ;AACJ;AACA;AACJ;AAEQ;AACJ;AACA;AACK;AACA;AACA;AACA;AACG;AACJ;AACC;AACT;AAEA;;;AAGG;AACI;AACH;AACC;AACD;AACI;AACA;AACC;AACJ;AAAM;AACH;AACH;AACD;AACA;AACA;AACJ;AAEA;;AAEG;AACO;AACN;AACI;AACH;AACL;AAEH;AA/DG;AADC;AAC+B;AAGhC;AADC;AACmC;AANnB;AADpB;AACoB;AAkErB;AAAC;AAlEoB;;;;;;;;;ACzBrB;;;;;;;AAOG;;;;;AAEH;AACA;AAEA;AACA;AAEA;AAEI;;;AAGG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AAEA;AACC;AACA;AACG;AACJ;AACC;AACL;AAEA;;;AAGG;AACK;AACJ;AACC;AACA;AACG;AACJ;AACC;AACL;AAEA;;;;;AAKG;AACI;AACH;AACI;AACI;AACA;AACJ;AACI;AACA;AACJ;AAEI;AACJ;AAEI;AACJ;AAEI;AACJ;AAEI;AACJ;AACI;AACA;AACP;AACL;AAEA;;;;;AAKG;AACI;AACH;AACI;AACI;AACA;AACJ;AACI;AACA;AACJ;AAEI;AACJ;AAEI;AACJ;AAEI;AACJ;AAEI;AACJ;AACI;AACA;AACP;AACL;AAEH;AA/GD;;;;;;;;;ACfA;;;;;;;AAOG;;AAEH;AAKI;AACI;AAJJ;AACO;AAKP;AAEA;;;AAGG;AACO;AAEV;AAEA;;AAEG;AACO;AAEV;AAEA;;AAEG;AACO;AAEV;AAEA;;AAEG;AACO;AAEV;AAEA;;AAEG;AACO;AAEV;AAEA;;AAEG;AACO;AAEV;AAEA;;AAEG;AACO;AAEV;AAEA;;AAEG;AACO;AAEV;AAEA;;AAEG;AACO;AAEV;AAEA;;AAEG;AACO;AAEV;AAEA;;AAEG;AACO;AACN;AACJ;AAEA;;AAEG;AACO;AACN;AACJ;AAEH;AA/FD;;;;;;;;ACTA;;;;;;;AAOG;;;;;;;;;ACPH;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AAEA;AAAA;AAqBI;AACI;AAlBJ;AACQ;AAmBJ;AACJ;AAlBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAQA;;;;AAIG;AACK;AACJ;AAEA;AACA;AACI;AACA;AACA;AACI;AACH;AACL;AAEA;AACA;AACI;AACI;AACH;AAAM;AACH;AACH;AACL;AAEA;AACJ;AAEA;;;;AAIG;AACK;AACJ;AACJ;AAEA;;;;AAIG;AACK;AACJ;AACI;AACH;AACD;AACA;AACA;AACA;AACI;AACH;AAAM;AACH;AACA;AACH;AACD;AACJ;AAEA;;;;AAIG;AACK;AACJ;AACA;AAEA;AACI;AACH;AAAM;AACH;AACA;AACH;AAED;AACI;AACH;AAED;AACJ;AAEA;;;;;AAKG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACI;AACI;AACA;AACH;AACJ;AACD;AACJ;AAEA;;;;AAIG;AACI;AACH;AACA;AACI;AACH;AACD;AACJ;AAEA;;AAEG;AACW;;AACV;AACI;AACA;AACI;AACI;AACI;AACJ;AACH;AACL;AACA;AACI;AACI;AACA;AACA;AACH;AACL;AAEA;AACA;AACA;AACI;AACA;AACH;AAAM;AACH;AACI;AACI;AACA;AACA;AACA;AACH;AAAM;AACH;AACA;AACH;AACL;AACI;AACJ;AACH;AACL;AACJ;AAAC;AAED;;;AAGG;AACI;AACH;AACA;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACA;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACA;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;;;AAGG;AACI;AACH;AACA;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACA;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACA;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACA;AACI;AACA;AACH;AAAM;AACH;AACH;AACL;AAEA;;;;;;;AAOG;AACI;AACH;AACA;AACI;AACI;AACH;AAAM;AACH;AACA;AACI;AACA;AACH;AAAM;AACH;AACH;AAED;AACA;AACA;AACA;AACA;AACH;AACD;AACJ;AACJ;AAEA;;;AAGG;AACI;AACH;AACI;AACI;AACH;AAAM;AACH;AACA;AACA;AACA;AACA;AACH;AACL;AACJ;AAEA;;;;;AAKG;AACI;AAEP;AAEA;;AAEG;AACI;AAEP;AAEA;;;AAGG;AACI;AAEP;AAEA;;;;;AAKG;AACK;AACJ;AACI;AACI;AACH;AACL;AACI;AACI;AACI;AACI;AACI;AACA;AACI;AACH;AAAM;AACH;AACH;AACJ;AACJ;AAAM;AACH;AACH;AACD;AACI;AACH;AACL;AACH;AAAM;AACH;AACA;AACI;AACH;AACJ;AACL;AACJ;AAEA;;;;;;;AAOG;AACI;AACH;AACA;AACI;AACJ;AAEA;AACA;AACI;AACI;AACH;AAAM;AACH;AACH;AACJ;AAED;AACI;AACI;AACA;AACA;AACH;AAED;AACI;AACH;AACD;AAEA;AACJ;AAEA;AACA;AACI;AACI;AACA;AACA;AACI;AACI;AACJ;AACI;AACA;AACA;AACA;AACI;AACH;AACL;AACJ;AACI;AACA;AACA;AACA;AACI;AACH;AACL;AACH;AAAM;AACH;AACI;AACJ;AACI;AACA;AACI;AACH;AACL;AACH;AACL;AACJ;AAEA;;;;AAIG;AACI;AACH;AACA;AACI;AACH;AACD;AACJ;AAEA;;;;;;;AAOG;AACI;AACH;AAEA;AACA;AACI;AACA;AACA;AACH;AAED;AACI;AACA;AACI;AACA;AACI;AACA;AACH;AACD;AACH;AAED;AACA;AACA;AACI;AACA;AACI;AACH;AACJ;AAED;AACA;AACA;AACI;AACH;AACD;AAEA;AACI;AACA;AACI;AACA;AACI;AACH;AACL;AACH;AAAM;AACH;AACA;AACI;AACH;AACJ;AACL;AACI;AACA;AACJ;AACJ;AAEA;;;;;AAKG;AACI;AACH;AACA;AAEA;AACI;AACA;AACA;AACI;AACH;AACD;AAEA;AAEA;AACJ;AAEA;AACI;AACI;AACI;AACJ;AACH;AAAM;AACH;AACH;AACJ;AACL;AAEA;;;;;AAKG;AACI;AACH;AACA;AACI;AACI;AACA;AACA;AACI;AACH;AACD;AACH;AACD;AACH;AACD;AACI;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACA;AACI;AACH;AACD;AACI;AACH;AACL;AAEA;;AAEG;AACI;AACH;AACI;AACI;AACH;AACD;AACJ;AACA;AACJ;;AAhoBe;AAkoBnB;AAAC;AApoBoB;;;;;;;;;AC5BrB;;;;;;;AAOG;;;AAEH;AACa;AACb;AACa;AACb;AACa;AACb;AACa;AAEb;AACa;;;;;;;;;ACnBb;;;;;;;AAOG;;;AAEH;;AAEG;AACH;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;AAEG;AACH;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;AAEG;AACH;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACJ;;;;;;;;;AChEA;;;;;;;AAOG;;;;;;;;;;ACPH;;;;;;;AAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA6BI;AACI;AA1BJ;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AAmBJ;AACJ;AAlBO;AACH;AACI;AACH;AACD;AACJ;AAEO;AACH;AACI;AACH;AACD;AACJ;AAQA;;AAEG;AACK;AACJ;AACA;AACA;AACA;AACJ;AAEA;;;AAGG;AACU;;AACT;AACI;AACI;AACH;AACJ;AAED;AACI;AACI;AACA;AACA;AACH;AAED;AACA;AACI;AACH;AAED;AACI;AACA;AACI;AACH;AACJ;AAED;AAEA;AACA;AACA;AACI;AACI;AAAqD;AACjD;AACA;AACH;AACG;AACJ;AAAqD;AACjD;AACA;AACA;AACH;AACG;AACJ;AAAkD;AAC9C;AACA;AACH;AACG;AACJ;AAAgD;AAC5C;AACA;AACH;AACG;AACJ;AAA+C;AAC3C;AACA;AACI;AACI;AACA;AACJ;AACA;AACI;AACA;AACI;AACH;AACD;AACJ;AACI;AACA;AACP;AACJ;AACG;AACJ;AACI;AACP;AAED;AACI;AACA;AACI;AACA;AACH;AACJ;AAED;AACI;AACA;AACA;AACI;AACH;AACJ;AACL;AAEA;AACJ;AACJ;AAAC;AAED;;;AAGG;AACU;;AACT;AAEI;AACA;AACI;AACH;AAED;AAEA;AACA;AACA;AACA;AACA;AACI;AACA;AACI;AACA;AAAqD;AACjD;AACA;AACH;AACG;AACJ;AACA;AAAqD;AACjD;AACA;AACH;AACG;AACJ;AACA;AAAkD;AAC9C;AACA;AACH;AACG;AACJ;AACA;AAA8C;AAC1C;AACA;AACA;AACI;AACH;AACJ;AACG;AACJ;AACA;AACI;AACJ;AACA;AAA2C;AACvC;AACA;AACH;AACG;AACJ;AACA;AAA4C;AACxC;AACA;AACA;AACI;AACH;AACJ;AACG;AACJ;AACA;AACI;AACA;AACA;AACI;AACH;AACD;AACJ;AACA;AAAgD;AAC5C;AACA;AACH;AACG;AACJ;AACA;AAA6C;AACzC;AACA;AACA;AACA;AACH;AACG;AACJ;AACI;AACA;AACP;AAED;AACI;AACA;AACH;AAED;AACI;AACA;AACA;AACI;AACH;AACJ;AAED;AACI;AACA;AACA;AACA;AACI;AACH;AACJ;AACL;AAEA;AACJ;AACJ;AAAC;AAED;;;AAGG;AACU;;AACT;AACI;AACI;AACH;AAED;AAEA;AACI;AACI;AACA;AACA;AACA;AACA;AACI;AACH;AACD;AACJ;AACI;AACA;AACA;AACA;AACI;AACH;AACD;AACJ;AACI;AACA;AACA;AACA;AACI;AACH;AACD;AACJ;AACA;AACA;AAA0C;AACtC;AACI;AACA;AACA;AACA;AACI;AACA;AAA2C;AACvC;AACA;AACH;AACG;AACJ;AACA;AAA4C;AACxC;AACA;AACA;AACH;AACG;AACJ;AACA;AACI;AACA;AACA;AACH;AACD;AACA;AACI;AACA;AACA;AACA;AACJ;AACA;AAAgD;AAC5C;AACA;AACH;AACG;AACJ;AACA;AAA6C;AACzC;AACA;AACA;AACH;AACG;AACJ;AAEI;AACP;AAED;AACI;AACA;AACH;AAED;AACI;AACA;AACA;AACI;AACH;AACJ;AAED;AACI;AACA;AACA;AACA;AACI;AACH;AACJ;AACL;AACA;AACH;AACG;AACP;AAEL;AACJ;AAAC;AAED;;;AAGG;AACI;AACH;AACA;AACI;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACP;AACD;AACJ;AAEA;;;AAGG;AACI;AACH;AACA;AACI;AACI;AACA;AACJ;AACI;AACA;AACJ;AACI;AACA;AACP;AACD;AACJ;AAEA;;;AAGG;AACI;AACH;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACA;AACI;AACH;AACD;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACA;AACI;AACH;AACD;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACI;AACA;AACA;AAAwB;AACpB;AACH;AACG;AACJ;AAEI;AACJ;AACI;AACA;AACP;AACD;AACJ;AAEA;;;AAGG;AACK;AACJ;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACI;AACI;AACA;AACJ;AAEI;AACJ;AACA;AACI;AACA;AACJ;AACI;AACA;AACP;AACD;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACI;AACI;AACA;AACJ;AAEI;AACJ;AAAwB;AACpB;AACA;AACI;AACI;AACH;AACD;AACH;AACJ;AACG;AACJ;AACI;AACA;AACA;AACJ;AACI;AACA;AACP;AACD;AACJ;AAEA;;;AAGG;AACK;AACJ;AACA;AACA;AACA;AAEA;AACI;AACH;AAAM;AACH;AACI;AACH;AACJ;AAED;AACI;AACA;AACI;AACA;AACH;AACJ;AACD;AACJ;AAEA;;;AAGG;AACK;AACJ;AAEA;AACI;AACH;AAAM;AACH;AACH;AAED;AACJ;AAEA;;;;AAIG;AACK;AACJ;AACA;AACA;AACI;AACA;AACI;AACA;AACH;AACJ;AAED;AACA;AACJ;AAGA;;AAEG;AACK;AACJ;AACA;AACA;AACI;AACA;AACA;AACI;AACH;AACJ;AACD;AACA;AACA;AACJ;AAEA;;;;;;;AAOG;AACK;AACJ;AACA;AAEA;AACA;AAEA;AACI;AACA;AACA;AACI;AACA;AACH;AAAM;AACH;AACH;AACJ;AACD;AACJ;AAEA;;;;;AAKG;AACK;AACJ;AACI;AACH;AAED;AAEA;AACA;AACI;AACH;AAAM;AACH;AACH;AACD;AAEA;AACI;AACH;AAAM;AACH;AACH;AAEL;AAEA;;AAEG;AACI;AACH;AACA;AACA;AACA;AACA;AACJ;;AAvrBe;AAwrBnB;AAAC;AA1rBoB;;;;;;;;;;;;;;;;;;;AC7BrB;AACA;;;;;;;AAOG;AAEH;AAEA;AAGA;AAAA;AAAA;;AAGY;AA+BZ;AA7Bc;AACN;AACA;AACJ;AAEU;AAEV;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AAEA;;AAEG;AACK;AACJ;AACJ;AACH;AA/BG;AADC;AACgC;AAHhB;AADpB;AACoB;AAkCrB;AAAC;AAlCoB;;;;;;;;;ACfrB;;;;;;;AAOG;;;;;AAEH;AAEA;AAEI;;;;;AAKG;AACI;AACH;AACI;AACA;AACH;AAED;AACA;AACI;AACH;AAED;AACA;AACI;AACH;AAED;AACA;AACJ;AAEA;;;;AAIG;AACI;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACH;AAED;AACJ;AACH;AAhDD;;;;;;;;;ACXA;;;;;;;AAOG;;;;;AAEH;AAEA;AAKI;AACI;AAJJ;AACO;AAIP;AAEA;;AAEG;AACI;AAEP;AAEA;;AAEG;AACO;AACN;AACJ;AAEH;AAvBD;;;;;;;;;ACXA;;;;;;;AAOG;;;AAEH;AACA;AAAA;AACI;AACA;AACA;AACA;AACJ;AAEA;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AACA;AAAA;AACI;AACA;AACA;AACA;AACJ;AAEA;AACA;;;;;;;;ACxCA;;;;;;;AAOG;;;;;;;;;ACPH;;;;;;;AAOG;;;AAEH;AACa;AAEb;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACJ;AAEA;;;;;;;;;ACrBA;;;;;;;AAOG;;AAEH;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;;;;;;;;;ACxBA;;;;;;;AAOG;;;AAEH;AACa;AACb;AACa;;;;;;;;ACZb;;;;;;;AAOG;;;;;;;;;;;ACPH;;;;;;;;;AASA;AACE;;AAEA;AACA;AACA;;AACA;AACE;AACD;;AACD;AACA;;AACA;AACE;AACD;AACC;AACD;;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;AACA;AACE;AACA;AACA;AACD;;AAED;AACE;AACE;AACD;AACF;;AAED;AACE;AACE;AACD;AACF;AAED;;;;;;;;;;;;AAWA;;;;;;;;;;AASA;;;;;;;;;;AASA;;;;;;;;;;AASA;;;;;;;;;;;AAUA;;;;;;;;;;;AASA;AACE;AACE;AACD;AACF;AAED;;;;;;;;;AAQA;;;;;;;;;;;;;;AAYA;AACE;;AACA;AACE;AACD;;AACD;AACE;AACD;;AACD;AACE;AACD;;AACD;AACE;AACA;AACD;;AACD;AACD;;AAED;AACE;AACA;;AACA;AACE;AACE;AACD;AACC;AACE;AACD;AACC;AACD;AACF;;AACD;AAEE;AACD;AACC;AACD;AACF;;AACD;AACD;AAED;;;;;;;;AAMA;AACE;AACE;AAIA;AACA;AACD;AACC;AACE;AACA;AACA;AACD;AACC;AACD;AACF;;AACD;AACA;AACA;AACD;AAED;;;;;;;;;;;AASA;AACE;AACE;AACD;;AAED;AAAA;;AACA;AACE;AACE;AACE;AACD;AACC;AACD;AACC;AACE;AACD;AACF;AACF;AACC;AACD;;AACD;AACD;;AACD;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACE;AACE;AACA;AACA;AAID;;AAED;AACE;AACE;AACE;AACD;AACF;AACC;AACE;AACD;AACF;AACF;AACC;AACE;AACE;;AACA;AACE;AACD;AACC;AACA;AACD;AACC;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AACD;AACF;AACF;AACC;AACE;;AACA;AACE;AACD;AACC;AACA;AACD;AACC;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AACD;AACF;AACF;AACF;;AACD;AACA;;AACA;AACE;AACA;AACA;AACD;AACC;AACD;AACF;;AACD;AACE;AACA;AACD;;AACD;AACD;;AAED;AACE;AACE;AACD;;AACD;AACA;AAAA;AACA;;AACA;AACE;AACE;AACD;;AACD;AACA;AAID;;AACD;AACA;AACA;AACD;;AAED;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACD;AACF;AAED;;;;;;;;;;;;AAUA;AACE;AAEA;AAAA;AAAA;AAAA;AAEA;AAgBD;AAED;;;;;;;;;;;;AAUA;AAEA;;;;;;;;;;;AAUA;AACE;AAEA;AAAA;AAAA;AAAA;AACA;AAMD;AAED;;;;;;;;;;;;AAUA;AAEA;;;;;;;;;;;AAUA;AACE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED;;;;;;;;;;;;;AAWA;AAEA;;;;;;;;;;;AAUA;AACE;AAAA;AAAA;AAAA;AAAA;;AACA;AACE;AACA;AACA;AACA;AAID;;AACD;AACA;AAGA;AACD;;AAED;;AAEA;AACE;AACD;AACC;;;;;;;;;;;;;;;;;AAiBA;;AACA;AACE;AACE;AACD;AACF;AACF;AACF;;;;;;;;;;;;;AC1qBD;;;;;;AAMA;AAAqB;;AAAa;AAE9B;AACA;AACA;AACA;AAEA;AACI;AACA;AACoD;AAAF;AAClD;AACH;;AAED;;AAGA;;AAGA;AAEQ;AACI;AACA;AACH;;AACD;AACH;;AAGL;AAGH;AAAC;AAAqB;AAAC;AACxB;;AACA;AAEA;;;;;;;;;AASA;;;;;;;;;AAQA;AAA0B;AAA1B;AACI;AAAA;AAAA;AAAA;;AAIA;AACI;AADJ;;AAEA;AACI;AAAsC;AAArB;AACb;AACI;AACA;AAGI;AAAA;;AAEA;AACI;AADJ;;AAEA;AACH;AACJ;AACJ;;AACD;AACI;AACH;AACG;AACI;AACA;AACH;AACJ;AACJ;AACJ;AAEA;AAAK;AACN;AAEA;;;;;;AAKA;AAEA;;;;;;AAKA;AACI;AACA;AAEA;;AACA;AACI;AADJ;;AAEA;AACH;;;AAGD;;AAGA;;AAGA;AACI;AADJ;AAGA;;;;;;;;;AAOA;AACI;AAAA;AAEA;AAAA;AACI;AADJ;AAEI;;AACJ;AACI;;AACA;AACI;AACI;AACA;AACA;AACA;;AACJ;AACI;AACA;AACA;AACA;;AACJ;AACI;AACA;AACA;AACA;AAfR;;AAiBA;AACI;AACA;AACH;AACJ;;AACD;AACI;AACA;AACA;AAEH;;AACD;AACI;AAEA;AACH;;AACD;AACH;;AAED;AAEA;;;;;;;;;AAQA;AACI;AACA;AAAA;AACI;;AACJ;AACI;AACA;AAEA;;AAEA;AACI;AACI;AACA;AACA;;AACJ;AACI;AACA;AACA;AACA;;AACJ;AACI;AACA;AACA;AACA;;AACJ;AACI;AACA;AACA;AAlBR;AAoBH;;AACD;AAEA;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAEA;AAAK;AACN;;AACA;AAEA;;;;;;;;AAOA;AAEI;AACA;AACI;AACA;AACH;;AAED;AAEA;;;;;;;;;;AAUA;AACI;AAEA;AACA;AACI;AACA;;AAEA;;AACA;AACI;AAAA;AAAA;AAAA;;AAIA;AACI;AACA;AACH;;AACD;AACA;AACH;;AACD;AACH;;;AAGD;AAAA;;AAEA;AACI;AADJ;;AAEA;AACA;AACI;;AACA;AACI;AAAU;AAAU;;AACpB;AAAU;;AACV;AAAU;;AACV;AAAU;AAJd;;AAMA;AACH;AACD;AAEA;AACA;AACH;;AAED;AACI;AACH;;AAED;AACA;AACH;AAED;;;;;;;;;AASA;;;;;;;AAKA;AAEC;AAAK;AACN;;AACA;AAEA;;;;;;;AAMA;AAEI;;;;;AAKA;AACH;AAED;;;;;;;;;AAOA;AACI;AACI;AACA;AAFuD;AAI3D;AACH;AAED;;;;;;;;AAMA;AACI;AAGI;AAGI;;AACA;AACI;AADJ;AAKH;AACJ;AACD;AACH;AAED;;;;;;;;AAMA;AACI;;AACA;AACI;AAAA;;AAEA;AACI;AADJ;;AAEA;AACI;AADJ;AAEH;;AACD;AACH;AAEA;AAAK;AACN;;AACA;;AAEA;AAAA;;AAGA;AAEA;;;;;;;;;AASA;;;;;;;;AAQA;;;;;;;;;AAQA;AACI;AACI;AACA;AACH;;AAGD;AAGA;;AACA;AAEQ;AAKH;;AAGL;AACH;AAED;;;;;;;;;;AAUA;;;;;;;;;;AAUA;;;AACA;AACI;;AACA;AAAuB;AAAvB;AAEI;AAIA;AACA;;AACA;AAIA;;AACA;AACI;;AACA;AACI;;AACA;AACI;AADJ;AAEH;;AACD;AACH;;AACD;AACH;;AAED;AACI;AACA;AAEA;AACH;;AAED;AACA;AACH;AAEA;AAAE;AAAM;AAAP;AAAe;AACjB;;AAEA;AAEA;;;;;;AAMA;;;;;;;;;;AAUA;;;;;;;;;;AAUA;;;;;;;;;AASA;;;;;;;;;AASA;;;;;;;;;;AAUA;;;;;;;;;;AAUA;;;;;;;;;AASA;;;;;;;;AASA;;AACA;AAEI;AACA;AAEI;AAAA;AAAA;;AAIA;AACI;AACA;AACA;AACA;AACA;AACH;;AAED;AACI;AACA;AACA;AACA;AACA;AACH;AAED;;;AACA;AACA;;AACA;;AAEA;AACI;AACA;AACA;AACA;AACA;AACH;;AAED;AACI;AACA;AACA;AACA;AACA;AACH;AAED;;;AACA;AACA;;AACA;AAGH;AAEG;AACI;AACA;AAEA;AAC4B;AAAe;AAAI;AAAiB;AAI5D;AAEA;AAEA;AAAA;AAEA;AACH;AACJ;;AAED;AACA;;AAEA;AACI;AAAA;AAAA;AAAA;AAIA;AAIM;AAGT;;AAED;AACA;AAEH;;AAGD;AAEI;AAAA;AAAA;;AAIA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAED;;;AACA;AACA;;AACA;;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAED;;;AACA;AACA;;AACA;AAGH;AAEG;AACI;AACA;;AAEA;AACI;AACA;AAAwB;AAAe;AAAI;AAAiB;AAC/D;AACG;AACA;AACH;AAA2C;AACxC;AACA;AACH;AACG;;AACA;AAAqC;AACjC;AACA;AACA;AACH;AACG;AACA;AAEA;AACA;AACA;AACH;AACJ;AACJ;;AAED;AACA;;AAEA;AACI;AAAA;AAEA;AAAA;AAAA;AAGA;AAIM;AAGT;;AAED;AACA;AAEH;AAED;AACH;;;AAID;AACI;AACA;AACA;AACA;AACH;;AAED;AACI;AACA;AACA;AACA;AACH;;AAED;AACI;AAIH;;AAED;AACI;AAIH;AAEA;AAAK;AACN;;AACA;AAEA;;;;;;;AAMA;AACI;AACI;;AACA;AAEH;;;AACD;AACH;AAEA;AAAK;AACN;AAEA;;;;;;AAKA;;AAEA;AACA;;;;;AAKA;AACI;AACH;;AAED;AACA;;;;;AAKA;AACI;AAEA;AAAA;AAAA;AAGA;;AAEA;AACI;AACI;AAMH;AAIJ;;AACD;AACH;AAED;;;;;;;;;AAOA;AACI;AAEA;AAEA;AAEA;AACH;AAEA;AAAK;AACN;;AACA;AAEA;;;;;;;;AAQA;;;;;;;;;;AAUA;;;;;;;;;;AASA;AACI;AACA;AACA;AACA;AACA;AACI;;AAEA;AACI;AACA;AACH;;AACD;AACA;AACI;AACJ;AACH;AACJ;AAEA;AAAK;AACN;AAEA;;;;;;AAKA;AAEA;;;;;;AAKA;AACI;AAAA;;AAEA;AACI;AACA;AAKI;AACA;AACH;AAEJ;;AACD;AACH;AAED;;;;;;;;;AAOA;AACI;AACA;AAEA;AAAA;AAAA;AAAA;AAGI;;AACJ;AACI;AACA;AAKI;AACA;AACA;AACH;;AAED;AACI;AACA;AACH;AACJ;;AACD;AACI;AAEA;AACH;;AACD;AACH;AAED;;;;;;;;;AAOA;AACI;AAAA;AAAA;AAEI;;AACJ;AACI;;AACA;AACI;AACH;AACG;AACA;AACH;AACG;AACA;AACA;AACA;AACA;AACA;AACH;AACG;AACA;AACA;AACH;AACJ;;AACD;AACH;AAEA;AAAK;AACN;;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;AAoBA;AACI;AACI;AACA;AAAS;AAAU;AAAU;AAAU;AAAY;AAAF;AAAZ;AAAV;AAAV;AAAV;AACV;;AACD;AACH;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAEI;;;;;;;;AAQA;AACI;AACI;AACI;AACA;AAFM;AAIV;AACI;AACA;AAFG;AALH;AADP;AAVK;AAwBd;AAEA;AAEI;;;;;;;;AAQA;AACI;AACI;AACI;AACA;AAFK;AAIT;AACI;AACA;AAFG;AALH;AADS;AAVN;AAwBnB;AAEI;;;;;;;;AAQA;AAVgB;AAapB;AAEI;;;;;AAKA;AACI;AADG;AAPK;AAYhB;AAEI;;;;;;;AAOA;AACI;AACI;AACI;AACA;AACA;AAHI;AADJ;AADJ;;AAUR;;;;;;;;;;;;;AAaA;AACI;AACI;AACI;AADE;AADF;AAYR;AACI;AACI;AACA;AAFO;AAIX;AACI;AACA;AAFS;AAIb;AACI;AACA;AAFS;AAIb;AACI;AACA;AAFO;AAIX;AACI;AACA;AAFS;AAIb;AACI;AACA;AAFO;AArBP;AAbL;AAyCP;AACI;AACI;AADI;AADD;;AAMX;;;;;;;AAOA;AACI;AACI;AACI;AACA;AACA;AAHI;AADJ;AADD;AAtFE;AAiGjB;AAEI;;;;;;;AAOA;AACI;AACI;AACI;AACA;AAFG;AADH;AADC;;AASb;;;;;;;AAOA;AACI;AACI;AACI;AACA;AAFG;AADH;AADA;;AASZ;;;;;;;AAOA;AACI;AACI;AACI;AACA;AAFG;AADH;AADA;;AASZ;;;;;;;AAOA;AACI;AACI;AACI;AACA;AAFG;AADH;AADC;;AASb;;;;;;;AAOA;AACI;AACI;AACI;AACA;AAFG;AADH;AADA;;AASZ;;;;;;;AAOA;AACI;AACI;AACI;AACA;AAFG;AADH;AADC;;AASb;;;;;;;AAOA;AACI;AACI;AACI;AACA;AAFG;AADH;AADD;;AASX;;;;;;;AAOA;AACI;AACI;AACI;AACA;AAFG;AADH;AADC;;AASb;;;;;;;AAOA;AACI;AACI;AACI;AACA;AAFG;AADH;AADA;AAzIG;AAmJnB;AAEI;;;;;;;AAOA;AACI;AACI;AACI;AACA;AACA;AAHG;AADH;AADD;AATM;AAoBrB;;;;;;;;;;;;;;;;AAeA;AACI;AACH;AAEA;AAAK;AACN;AACA;;;;;AAIA;;AAEA;AAAA;AAGA;;;;;;;;;;;AASA;AACI;AACA;AACI;AAA0C;;AAEtC;AACI;AAEA;AAKH;;AAAC;AAEL;AAIJ;AACG;;AACA;AACI;AACA;AAAc;;AAEV;;AACJ;AACA;AAAgB;AAEZ;;AACJ;AACA;AACA;AAAiB;AAEb;;AACJ;AACI;AACA;;AACJ;AACA;AACA;AACA;AAAiB;AASb;;AACJ;AAAc;AAKV;;AACJ;AAAe;AAEX;;AACJ;AAAa;AAET;;AACJ;;;AA1CJ;AA8CH;;AACD;AACA;AACH;AAED;;;;;;;AAKA;AACI;AACA;AACA;AAGA;AAEA;;AAEA;AACI;AAAA;;AAIA;AAAiB;AAMb;AAAuC;AAAiB;AAK3D;AAA4B;AAMzB;AAAuC;AAAiB;AAK3D;AACG;AAA8C;;AAElD;AAAuC;AAAiB;AACpD;AAEH;AACJ;;AAAC;AAEF;AACH;AAED;;;;;;;;;;;AASA;AACI;AACA;AACI;AAIH;AACG;;AACA;AACI;AACA;AAAc;AAEV;;AACJ;AACI;AACA;;AACJ;AACA;AACA;AACA;AAAiB;AAAA;AAKb;;AACJ;AAAc;AAEV;;AACJ;AAAS;AAEL;AAtBR;AAwBH;;AACD;AACA;AACH;AAED;;;;;;;AAKA;AACI;AACA;AACA;AAEA;AAKA;AAAA;AAAA;AAAA;;AAIA;AACI;AADJ;;AAMA;AAA6B;;AAEzB;AAA4C;AAA5C;;AAEA;AAEH;;AAED;AAAwB;;AAEpB;AAAuC;AAAvC;;AAEA;AAEH;;AAED;AAA2B;;AAEvB;AACI;AAAA;AAEA;AASI;AACA;AAMH;AAEJ;;AAAC;AAEL;;AACD;;AACA;AACI;AAAA;AAAA;;AAGA;AACI;AAAe;AAAe;AAE7B;;AAAC;AAIF;AAAqC;AAAa;AAErD;AAA4B;AAIzB;AAAqC;AAAa;AAErD;AAAQ;;AAET;AAAqC;AAAa;AAClD;AAGC;;AACD;AAEH;;AACD;AAEA;AACH;AAEA;AAAE;AAAQ;AAAT;AAAmB;AACrB;;AACA;;AAEA;AAAA;AAAA;;AAIA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACA;AAGmG;AAAmB;AAGtH;AAGA;AAGA;;AACA;AAAW;AAAkB;AACzB;AAAA;AAAA;;AAE6C;;AAI7C;AAAiB;AAKb;AAKA;AAKA;AAOA;AAAA;AAKA;AAQA;AAMH;AAA4B;;AAMzB;;AAQA;AAOH;;AAKD;AAGH;;AAAC;;AASF;AACI;AACA;AAGH;;AAED;AAEA;AACH;AAEA;AAAE;AAAQ;AAAQ;AAAjB;AAA2B;AAC7B;;AACA;;AAEA;AAAA;AAAA;AAIA;;;;;;;;;;;AASA;AACI;AAGH;AAED;;;;;;;AAKA;AACI;AACA;AAIA;;AAGA;AAAa;AAAkB;;AAE/B;AACI;AAAA;AAAA;AAAA;;AAII;;AAGJ;AACI;AAAA;AAIA;AAAA;AAIA;AAKH;AAA4B;AAGzB;;AACA;AAAwD;AAQvD;AAAQ;AAGL;AAKH;;AAAC;AAIL;AACG;;AAGA;AAKH;AACJ;;AAED;AAEA;AACH;AAEA;AAAE;AAAQ;AAAQ;AAAjB;AAA2B;AAC7B;;AACA;;AAGA;;AACA;;AAEA;AAAA;AAGA;;;;;;;;;;;;;AAWA;AACI;AAEA;AAGA;;;;;AAIA;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;AACA;AACA;;AAEA;AAEQ;AACI;AAFR;AAGP;AAED;;;;;;;AAOA;;;;;;;;;AAOA;AACI;AACA;AACA;AACH;AAED;;;;;;;AAKA;AACI;AACA;AAOH;AAED;;;;;;;;;;;AASA;AACI;AAEA;AAGA;AAGA;AAGA;AAGA;;AAGA;AACI;AAEA;AACH;;AAGD;AACA;AACH;AAED;;;;;;;;;AAOA;AAEI;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAEA;AAAE;AAAQ;AAAQ;AAAjB;AAA2B;AAC7B;;AACA;;AAGA;;AACA;;AAEA;AAAA;AAAA;;AAIA;;AAEA;AAEA;;;;;;;;;;;;;;AAcA;;;;;;;;AAOA;AACI;AACH;AAED;;;;;;;;;;;;;;;;AAcA;AAEI;AACI;AACA;AACA;AACH;AACG;AACA;AACA;AACH;;AAED;AAEA;AAGA;AAGA;AAGA;AAGA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAAyD;AAA2B;AAEpF;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;;AAKA;AAEA;;;;;AAIA;AACH;AAED;;;;;;;;AAMA;AACI;AACI;AACA;AAEA;AACH;AAN4C;AASjD;;;;AAGA;AACI;AACI;AACJ;AACH;AAED;;;;;;;;;AASA;;;;;;;AAOA;;;;;;;AAKA;AACI;AACA;AAQH;AAED;;;;;;;AAKA;AAEI;;AAGA;AAAoE;AAChE;AACA;AAGI;AACP;;;AAGD;AACI;AACA;AAEH;;;AAGD;AACI;AAEA;AAEH;;;AAGD;AACI;AAEA;;AACA;AAGH;AACG;AACA;AAIA;AACH;;;AAGD;;AAQA;AAGA;AACH;AAED;;;;;;;;;AASA;;;;;;;;;;;;;AAWA;AAEI;AACA;AAAA;AAOA;AACI;AAC+D;AAAF;AAChE;AACJ;AAED;;;;;;;;;;;AAWA;AAEA;;;AACA;AACI;AACH;AAEA;AAAE;AAAQ;AAAQ;AAAQ;AAAzB;AAAmC;AACrC;;AACA;;AAEA;AAEA;;;;;;;;;AASA;;;;;;;;;AAQA;AACI;AACI;AACA;AACH;;AAED;AACH;AAED;;;;;;;;;;AAUA;;AAEA;;;;;;;;;;AAUA;;;AAEA;AAEA;;;;;;;;;AAQA;AACI;AAEA;AACH;;AAED;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;;AAGA;;AACA;;AACA;;AACA;AAEC;AAAE;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAjJ;AAA2J;AAC7J;;AACA;AAEA;;;;;;;AAMA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AAEA;;AACA;;;;;AAIA;AACI;;AACA;;AACA;AACH;;;AAGD;AAEC;AAAE;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAjD;AAA2D;AAC7D;;AACA;;AAEA;;AAGA;AACA;AACA;;AAGA;AAEC;AAAE;AAAQ;AAAQ;AAAQ;AAAzB;AAAmC;AACrC;;AACA;;AAGA;;AACA;;AAEA;AAAA;AAGA;;;;;;;;;;;;;;AAYA;AACI;AAEA;;AACA;AAGA;;;;;AAIA;;AAEA;;;;;AAIA;;AAGA;AACH;AAED;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;;AAOA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACA;AAQH;AAED;;;;;AAGA;AACI;;AAIA;AAGA;AACH;AAED;;;;;;;;;;;;AAUA;AAEI;AACA;AAAA;AAOA;AACI;AAEH;AACJ;AAEA;AAAE;AAAQ;AAAQ;AAAjB;AAA2B;AAC7B;;AACA;;AAEA;AAEA;;;;;;;;;AAOA;AACI;AACA;AAEQ;AADJ;AAEP;AAED;;;;;;;AAOA;;;;;;;AAOA;;AAEA;;;;;;;;;AAOA;AACI;AACH;AAED;;;;;;;;;;AAQA;AACI;AACH;AAED;;;;;;;;;;AAQA;AACI;AACH;AAED;;;;;;;;;;;AASA;AACI;AACH;AAED;;;;;;;;;;;AASA;AACI;AACH;AAED;;;;;;;;;AAOA;AACI;AACH;AAED;;;;;;;;;AAOA;AACI;AACH;AAED;;;;;;;;;;AAQA;AACI;AACH;AAED;;;;;;AAIA;AACI;AACH;AAED;;AACC;AAAE;AAAD;AAAW;AACb;;AACA;;AAGA;;AACA;;AAEA;AAEA;;;;;;;;;;;;;;;;AAcA;AAEI;AACA;AACI;AACA;AACH;AACG;AACA;AACH;AAED;;;AACA;AAGA;;AACA;AAGA;;AACA;AAGA;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AACH;AAED;;;;;;;;;;;AAWA;;;;;;;;;AAOA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACA;AAC8C;AAA2B;AAQ5E;AAED;;;;;AAGA;AAEI;AACA;AAGA;AACA;AAEA;AACH;AAEA;AAAE;AAAQ;AAAT;AAAmB;AACrB;;AACA;;AAGA;;AACA;;AAEA;AAAA;;AAGA;AACI;AAGJ;;;;;;;;;;AAUA;;;;;;;;;;AASA;AACI;AACH;AAED;;;;;;;;;AAOA;AACI;AAEA;;AACA;AACI;AADJ;;AAEA;AACH;;AAED;AAEA;;;;;;;AAMA;AACI;AAEQ;AADJ;AAGJ;AACH;AAED;;;;;;;;AAMA;AACI;AAEQ;AADJ;AAGJ;AACH;AAED;;;;;;;;;;;;;AAWA;AACI;AAEA;;;;;AAIA;;AAEA;;;;;;AAKA;AACH;;AAED;AACI;AACA;AACH;AAED;;;;;;;;AAMA;AACI;AACI;AACH;AAHqD;AAM1D;;;;;;;AAOA;;;;;;AAMA;;;;;AAKA;;AAEA;;;;;;AAKA;AACI;AAIH;AAED;;;;;;;AAKA;AACI;AACA;;AACA;AACI;AACI;AACA;AACI;AAUP;AACJ;;AACD;AACH;AAED;;;;;;;AAKA;AACI;AAEH;AAED;;;;;;;;;AAOA;AACI;AAEA;AACH;AAED;;;;;;;;;AAOA;AAEI;AAGA;AAGI;;AACA;AACI;AACI;AACA;;AACA;AACI;AADJ;;AAEA;AACA;AAEA;AAEH;AAEJ;AACJ;AACD;AACA;AACA;AACH;AAED;;;;;;;;;AAOA;AAEI;AAEA;AAGA;AACA;AAGA;AACA;AACH;AAED;;;;;;;;AAMA;AAEI;AAIA;AAGA;;AACA;AACI;;AACA;AACI;AACA;AAEH;AAEJ;;AACD;AAEA;AACH;AAED;;;;;;AAIA;AACI;AAAA;;AACA;AACI;AADJ;;AAKA;AACH;AAED;;;;;;;;;AAOA;AAEI;AACA;AACI;AACA;AACH;;AAGD;AACI;AAEA;AACH;;;AAID;;AAIA;;AACA;AACI;AACI;AAEH;;AAIJ;AAEO;AADJ;;;AAKJ;AAEA;AACH;AAED;;;;;;;;;AASA;;AAEA;;;;;;;;;AAOA;AACI;AACA;AAEA;AACH;AAED;;;;;;;;;AAOA;AACI;AACA;AAEA;AACH;AAED;;;;;;;;;AAOA;AACI;AACA;AAEA;AACH;AAED;;;;;;;;;AAOA;AACI;AACA;AAEA;AACH;;;AAGD;AACI;AACA;AACA;AACH;AAEA;AAAE;AAAQ;AAAQ;AAAjB;AAA2B;AAC7B;;AACA;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;;AAQA;AAEI;AAGA;AAGA;;;;;AAIA;;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AACH;;AAED;AAEI;;;;;;AAMA;AACI;AACI;;AACA;AACI;AADJ;;AAEA;AACH;AANC;;AASN;;;;;;AAMA;AACI;AACI;AAAA;;AAEA;AACI;AACA;AACH;;AACD;AACH;AATK;AAvBsC;AAoCpD;;;;;;AAKA;AAAoC;AAA2B;AAC3D;AACH;AAED;;;;;;;AAKA;AACI;AAEA;AACA;AACA;AACA;AAEH;AAED;;;;;;;AAKA;AACI;AACA;AAEA;AACA;AACH;AAED;;;;;;AAIA;AACI;AAEA;;AAEA;AACH;AAED;;;;;;;AAKA;AACI;AAEA;AACH;AAED;;;;;;;;;AAOA;AACI;AAEA;AACH;AAED;;;;;;;;;AAOA;AACI;AACI;AACH;;AACD;;AACA;AACI;AACA;AACA;AACI;AACH;;AACD;AACI;AACA;AACA;AACH;AACG;AACA;AACA;AACA;AACH;AACJ;AACG;AACA;AACA;AACA;AACH;;AACD;AACH;AAED;;;;;;;;AAMA;AACI;AAEQ;AADJ;AAEJ;AACH;AAED;;;;;;AAIA;AACI;AAAA;AAEA;AAEA;AACH;;;AAGD;AACI;AACH;AAEA;AAAE;AAAD;AAAW;AACb;;AACA;;AAGA;;AACA;;AAEA;AAAA;AAGA;;;;;;;;;;;;AAUA;AACI;AACI;AACA;AACH;;AACD;AAEA;;AACA;AAGA;;;;;AAIA;;AAEA;;;;;;AAKA;;AAEA;;;;;AAIA;AACH;AAED;;;;;;;AAOA;;;;;;;;;AAOA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACA;AAKH;AAED;;;;;;;;;AAOA;AACI;AAEQ;AADJ;AAGP;AAED;;;;;;;AAKA;AAEI;AACA;AAGA;AAEA;AACA;AACA;;AACA;AACA;AACH;AAED;;;;;;;AAKA;AAEI;AACA;AAGA;AAEA;;AACA;AAGA;AACA;AAEA;;AACA;AACI;AAEJ;AACA;AACH;AAED;;;;;AAGA;AACI;AACA;;AAEA;AACI;;AACA;AACI;AACA;AACH;AACJ;;;AAED;AACH;AAED;;;;;AAGA;AACI;AACI;AADJ;;AAGA;AACH;AAED;;;;;;;;;AASA;;;;;;;;;AAOA;AACI;AAAA;;AAEA;AACI;AADJ;;AAEA;AACI;AAEA;AACI;AACA;AAFwC;AAI/C;AACJ;AAEA;AAAE;AAAQ;AAAQ;AAAjB;AAA2B;AAC7B;;AACA;AAEA;AACA;AAAmB;AAAF;;AAEjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;AAUA;;;;;;;;AAQA;;;;;;AAMA;;;;;;;;;;AASA;AACI;AACA;AACI;AACA;AACH;;AACD;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AAAoD;AAAc;AAElE;;AACA;AACI;AACA;AAEA;AACH;;AAED;AACI;AAAA;;AAEA;AACI;AACA;AAGA;AACA;AACA;AACH;;AACD;AACH;;AAED;AACI;;AACA;AACI;AACA;AACI;AACA;;AACJ;AAAa;AACT;;AACJ;AAAc;AACV;AARR;;AAUA;AACI;AAA0B;AAAqB;AAClD;AAEG;AACA;AAGA;;AACA;AACH;AACJ;;AAED;AACI;;AACA;AACI;AAIH;;AACD;AACH;;AAED;AACI;;AACA;AACI;AACA;AACH;;AACD;AACI;AAAY;AAAY;AACpB;;AACJ;AAAY;AAAY;AAAY;AAChC;;AACJ;AACI;AANR;;AAQA;AAEA;AAEA;AAGA;;AACA;AAGA;;AACA;AACH;;AAED;AACI;AACI;AAAY;AAAY;AACpB;;AACJ;AACI;AAJR;AAOA;;;AACA;AAGA;AAEA;AAGA;;AACA;AAGA;;AACA;AACH;;AAED;AAEI;AACA;AAGA;AAEA;;AACA;AAGA;AACA;AACH;;AAED;AACI;AACA;;AACA;AACI;AACI;AACA;AACA;;AACJ;AACI;AACA;;AACJ;AACI;AACA;AAVR;;AAYA;AACA;AACA;AACH;;AAED;AACI;AACA;AACA;AAEA;;AACA;AAGA;AACH;;AAED;AACI;AAEI;AACI;AACA;AACA;;AAEJ;AACI;AACA;;AAEJ;AACI;AACA;;AAEJ;AACI;AACA;;AAEJ;AACI;AACA;AArBR;;AAuBA;AACH;;AAED;AACI;;AACA;AACI;AACE;AACD;;AACD;AACH;;AACD;AACI;;AACA;AACI;AADJ;;AAEA;AACH;AACG;AAEA;AACA;AAEH;AACJ;;AAED;AAEI;AACA;AAGA;AACA;AACI;;AAGA;AAEI;AACI;AACA;;AAEJ;AACA;AACA;AACI;AACA;;AAEJ;AACI;AACA;;AAEJ;AACI;AACA;;AAEJ;AACI;AACA;;AAEJ;AACI;AACA;AAGA;AACA;AACA;AA/BR;AAiCH;AACD;AACH;;AAED;AACI;;AACA;AACI;AACA;AACH;AAED;;;AACA;AAGA;AAEA;;AACA;AAGA;AACA;AAEA;AACA;AAEI;AACA;AACI;AACA;AACH;AAGJ;AACG;AACH;AACD;AAGA;AACA;;AACA;AACqC;AAAe;AACvD;;AAED;AACI;AAEA;;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AAEI;AACI;AACA;AACA;;AAEJ;AACA;AACA;AACI;AACA;;AAEJ;;AACA;AACI;AAAsB;AAf9B;AAiBH;AACD;AAEH;;AAED;AACI;AACA;AAEA;;AACA;AAGA;AACA;AAEA;;AACA;AAGA;AACA;AAEA;;AACA;AAGA;AACA;AACA;AAEI;AACA;AACI;AACA;AACH;AAGJ;AACG;AACH;AACD;AACH;;AAED;AAEI;AACA;AAGA;AACA;AACI;AACI;AACA;AACH;AACG;AACA;AACH;AACJ;AACD;AACH;;AAED;AAEI;AACA;AAGA;AACA;AACE;AACE;AACE;AACA;AACA;;AAEF;AACE;AACA;;AAEF;AACE;AAXJ;AAaD;AACD;AACH;;AAED;AAEI;AACA;AAGA;AACA;AAAA;AAEA;AAEI;AACA;AACI;;AACA;AACH;AAGJ;AACG;AACH;AACD;AACH;;AAED;AACI;AAEA;;AACA;AAGA;AACA;AACA;;AAEA;AACI;AACA;AACA;AACA;;AACA;AACI;;AACA;AACA;AACH;AACJ;;AACD;AACA;AACA;AACH;;AAED;AACI;AAAuB;AACnB;;AACA;AACI;AACA;AAGA;AACA;AACA;AAGI;AACA;AAGI;AACA;AACH;AACJ;AACD;AACA;AAEA;AACA;AACH;;AACD;AACH;;AAED;AACA;AACA;AAEH;;AAED;AACI;AAEH;;AAED;AACI;AAEH;;AAED;AACI;AACI;AACI;AACH;;AACD;AACH;;AACD;AACH;;AAED;AAEI;AACA;AAGA;AACA;AACI;AAGA;;AACA;AAIH;AACD;AACH;;AAED;AACI;AACA;AACA;AAEA;AAEA;;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAGA;;AACA;AAGA;AACA;AAAW;AAAiB;AAC5B;AAGA;;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEI;AACA;AACI;AACA;AACH;AAGJ;AACD;AACH;;AAED;AAEI;AACA;AAGA;AACA;AACI;AAEI;AACA;AACA;AACI;AACA;;AAEJ;AACI;AACA;AAEA;AACA;AACA;AAdR;AAgBH;AACJ;;AAED;;AACA;AACI;AAEI;AAEI;AACA;AAGA;AACA;;AAEJ;AAEI;AACA;AAGA;AACA;;AAEJ;AAEI;AACA;AAGA;AACA;;AAEJ;AAEI;AACA;AACA;;AAEJ;AAEI;AACA;AACI;AACA;AACH;AAED;;;AACA;AA5CR;AA8CH;;AAED;AACA;AACI;AACA;AACC;AACA;AACA;AALE;AAOV;AAED;;;;;;;;;;;;AAYC;AAAE;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAjF;AAA2F;AAC7F;;AACA;;AAEA;;AAEA;;AAEA;AAAA;AAGA;;AACA;AACI;AACH;AAED;;;;;;;;AAMA;AAEI;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AACH;;AAED;AAEQ;AAEA;AACH;AACD;AANe;AAQX;AAEA;AACH;;AAEL;AACI;AAEQ;AACI;AAEI;AAFG;AAIV;AACJ;AACD;AATG;AAWV;AAED;;;;;;;;;AAOA;AAEA;AAA2D;AAA2B;AAEtF;;;;;;AAKA;AACI;;AACA;AACI;AAA0D;AAC1D;AAA0D;AAC1D;AAA0D;AAC1D;AAA0D;AAC1D;AAA0D;AAE1D;;AACA;AACI;AACA;AACH;;AACD;AACH;AACJ;AAED;;;;;;AAIA;AACI;AACH;AAED;;;;;;AAIA;AACI;AACA;AACH;AAED;;;AAEA;AACI;AACA;AACA;;AACA;AAA+B;AAC3B;AACI;AACA;AACA;AAEH;;;AAED;AACA;AACA;AAEA;AACH;AACG;AACI;AACA;;AAGA;AACA;AAEH;;;AAED;AACA;AACH;;AACD;AAA+B;AAC3B;AACI;AACA;AACA;AAEH;AACJ;AACG;AACI;AACA;;AAGA;AACA;AAEH;AACJ;AACD;;;AACA;AACH;AAED;;AAEA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;AAOA;;;;;;AAIA;AACI;AACH;;AAED;AAAqC;AACjC;AAIH;AAED;;;;;;AAIA;AAEI;AACA;AAGA;AACH;AAED;;;;;;AAIA;AAEI;AACA;AAGA;AACH;AAED;;;AAEA;AAAqB;AAAoB;AAErC;AACA;AAGA;AACH;AAED;;AAEA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;AAKA;AAEI;AACA;AAGA;AACA;AACA;AACH;AAED;;;;;;;AAKA;AAEI;AACA;AAGA;AACA;AACA;AACH;AAED;;;;;;AAIA;AACI;AAAA;AAAA;AAIA;;AACA;AAGA;AACA;AACI;AACJ;AAAO;AAGV;AAED;;;;;;AAIA;AACI;AACA;AACH;AAED;;;;;;;AAKA;AACI;AACI;AACA;AAEA;AACH;AACG;AACI;AACA;AAEH;AACJ;;AACD;AACH;AAED;;;;;;;AAKA;AACI;AACI;AACI;AACA;;AACJ;AACI;AACA;;AACJ;AACI;AACA;;AACJ;AACI;AACI;AACH;;AACD;;AACJ;AACI;AACA;;AAEJ;;AACA;AACI;AArBR;;AAuBA;AACH;;AAED;AACI;AACA;;AACA;;AAEA;AAAgC;AAA2B;AAC3D;AAEI;AACI;AACH;AAED;AACI;AACH;AAED;AACI;AACH;AAED;AACI;AACH;AAED;AACI;AACH;AApBwB;AAuBhC;AAEA;AAAE;AAAD;AAAW;AACb;;AACA;;AAGA;;AACA;;AAEA;AAEA;;;;;;;;;AAOA;AACI;AAEA;;;;;AAKH;;AAED;AACI;AACA;AAEH;AAGD;;;;;AAGA;AACI;;AACA;AAGH;AAED;;;;;;;;AAOA;AAEC;AAAE;AAAQ;AAAT;AAAmB;AACrB;;AACA;;AAGA;;AACA;;AAEA;AAAA;AAAA;AAAA;;AAKA;AACI;AACA;;AAEJ;;;;;;;;AAOA;AACI;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AACH;AAED;;;;;;;;AAMA;AACI;AAEA;AAEA;AACH;AAED;;;;;;;;;;AAQA;AAEA;;;;;;;;;AAQA;;AAGA;;AACA;;AAEA;;;;;;;;;AAOA;AACI;AACI;AACA;AACH;;AACD;AACA;AAGA;AAEA;;AACA;AACI;AACA;AAEA;AACA;AACA;AAEA;AACH;;;AAGD;AACI;;AACA;AACI;AACA;AACH;;AACD;AACH;;;AAGD;AACI;AACI;AAEA;AAGI;AACA;AAAA;AAAA;AAGA;AAEQ;AADJ;AAGJ;AAEQ;AADJ;AAGP;AACJ;AACG;AACH;;AACD;AAEH;;;AAGD;AAEI;AACA;AAEA;;AAGA;AACI;AAGI;AACA;AACI;AACA;AACH;AACJ;AACD;AACH;;;AAGD;AACI;;AACA;AACI;AACH;AACG;AAEA;AACH;;AACD;AACH;AACG;AACA;AACI;AACA;;AACA;;AAEA;AACI;AACA;AAGI;AACJ;AACH;;AACD;AACH;AACJ;AACJ;;AACD;AAGA;;AACA;;AAEA;AACI;AADJ;;AAIA;AAEA;AAEA;AACH;;AAGD;;;;;;;;AAQA;;AAEA;;;;;;;;AAQA;;AAEA;;;;;;;;;;AAQA;AACI;AAEA;AACH;AAED;;;;;AAGA;AACI;AAEQ;AACH;AACL;AACH;;;AAGD;AAEA;;;;;;;;;AAQA;AACI;;AACA;AACI;AACA;AACA;AACA;AACA;AACH;;AACD;AACH;AAED;;;;;;;;AAMA;AACI;AAEI;AAAI;AAAuD;AAA+B;AAA0B;AAIvH;AAEG;AAGH;AAAsC;AAAqC;AAExE;AACI;AACI;AADJ;;AAKJ;AAAoB;AAAkB;AAAgC;AAClE;AADJ;;AAEA;AAEH;AAGD;AACA;;AACH;AAED;;;;;;;;AAMA;AACI;AAEI;AAAI;AAAyB;AACzB;AAAI;AAAsB;AAAyB;AAC/C;AACA;AACH;AAAQ;AACL;AACA;;AACA;AAEH;AACJ;AAEJ;AAEG;AAGH;AAEG;AAAoB;AAAkB;AAAgC;AAClE;AADJ;;AAGA;AAGH;AACJ;;;AAGD;AACI;AACA;AACA;AACH;AAEA;AAAE;AAAQ;AAAQ;AAAQ;AAAQ;AAAjC;AAA2C;AAC7C;;AACA;AAEA;;;;;;;;;;;;;;;AAgBC;AAAK;AACN;AAEA;;;;;AAIA;AAEA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;AASA;AAEC;AAAE;AAAD;AAAW;AACb;;AACA;;AAEA;;;AAGA;AAEA;;;;;;;;;;;;AAYA;;;;;;;;;;;AAWA;;;;;;;;;;;AAUA;AAEI;AAGA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AACH;AAED;;;;;;;;;;;;;AAWA;AAEI;AAGA;AACA;;AAGA;AACI;AAAwB;AAAmC;AAC3D;AACH;;AAED;AACI;AAKQ;AACI;AACA;AACH;;AAED;AACI;AAAS;AAAiB;AAC1B;AACH;;AAED;AACI;AACI;AACH;AACG;AACA;AACH;AACJ;;AAED;AACA;AACH;AAER;AACG;AACA;AAAwB;AAAgB;AACxC;AACH;AACJ;AAED;;;;;;;AAKA;AACI;AACI;AACI;AACJ;AACA;AACH;;AACD;AACH;AAEA;AAAE;AAAD;AAAW;AACb;;AACA;;AAGA;;AACA;;AAEA;AAAA;AAAA;AAIA;;;;;;;;;;;AASA;AACI;AAEA;;;;;AAIA;;AAEA;;;;;;AAKA;AACH;AAED;;;;;;;AAOA;;;;;;;;;AAOA;AACI;AACA;;AACA;AAEQ;AADJ;AAEJ;AAEA;AACA;AACH;AAED;;;;;;;AAKA;AACI;AACA;AACA;AAE2E;AAA2B;AAIzG;AAED;;;;;;;;AAMA;AACI;AACI;AACH;AAHoD;;AAMzD;AACI;AACA;AACH;AAED;;;;;AAGA;AACI;AAEH;AAED;;;;;AAGA;AACI;;AACA;AACI;AADJ;;AAEA;AACH;AAED;;;;;AAGA;AAEI;AACA;;AAGA;AACI;AACA;AACA;AACH;;AACD;AACH;AAED;;;;;AAGA;AACI;AAEI;AACA;AAGA;AACA;AACA;AACH;;AACD;AACH;AAED;;;;;;;;;AAOA;AACI;;AACA;AAA4B;AAAkB;AAC1C;AACA;AACI;AACA;AACA;AAH4I;AAKnJ;;AACD;AACH;AAEA;AAAE;AAAQ;AAAQ;AAAQ;AAAzB;AAAmC;AACrC;;AACA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAMA;AACI;AACA;AACA;AACA;AAJc;AAOlB;;;;;;;;AAOA;AACI;AACI;AACI;AACA;AACI;;AACJ;AACI;AALR;AAOH;AACJ;;AAED;AAEA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;AAQA;;;;;;;;;;AAUA;;;;;;;;AAQA;;;;;;;;;;;AAWA;;;;;;;AAMA;AACI;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAEA;;AACA;;;;;;;AAMA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACH;AAED;;;;;;;;AAMA;AACI;AACH;AAED;;;;;;;;;;AAQA;AACI;AACA;AACA;AACA;AACA;;AACA;AACI;AACH;AACG;AACH;;AACD;AAAA;;AAEA;AACI;AAEI;AACA;AACH;AACJ;;AACD;;AAGA;AACI;AADJ;;AAIA;AAGH;;AAED;AACI;;AAGA;AAEA;;AACA;AACA;AACH;;AAED;AACI;AACA;;AACA;AACI;AACH;;AACD;AACH;AAED;;;;;;;AAKA;AACI;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA;AACI;AAEA;;AACA;AACI;AACI;AACA;AACH;;AACD;AAEH;;AAED;AACI;AACI;AACH;;AACD;AAA8B;AAC1B;AACI;AACA;;AAEA;AACI;AACI;AACH;AACJ;;AACD;;AACA;AACI;AACH;;AACD;AACA;AACH;AACG;AACA;AACA;;AACA;AACI;;AACA;AACI;;AACA;AACI;AACH;;AACD;AACH;AACJ;AACG;AACH;;AACD;AACI;AACH;;AACD;AACA;AACH;AACJ;AAA6C;AAC1C;AACA;AACA;;AACA;AACI;AACI;AACH;;AACD;AACI;AACH;;AACD;AACA;AACH;;AACD;;AACA;AACI;AACH;;AACD;AACH;AACG;AACH;AACJ;AACJ;;;AAID;AACA;AACA;AACA;AAEQ;AADJ;AAEJ;AACA;AAEA;AACH;AAED;;;;;;;;AAMA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACI;AACA;AAEA;AACH;;AACD;AACH;AAED;;;;;;;;;;AAQA;AACI;AAAA;;AAEA;AACI;AACA;AACH;;AACD;AAEA;AACH;AAED;;;;;;;;AAMA;AACI;;AACA;AACI;AACI;AACH;AACJ;AACG;AACA;AACI;AACH;;AACD;AACI;AACH;AACJ;;AACD;AACH;;AAED;AACI;AACA;AACA;AACA;AACA;AALyB;AAOzB;AAAkB;AAAc;AADzB;AAGX;AACH;AAEA;AAAK;AACN;;AACA;;AAGA;;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;;;;;;;AAQA;AACI;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;AAIA;;AAEA;;;;;;AAKA;AAEA;;;;;;AAKA;AAEA;;;;;;AAKA;AAEA;;;;;;AAKA;AACH;;AAED;AAEI;;;;;;AAMA;AACI;AAEI;AACA;AAGA;;AACA;AACI;AAAA;AAGA;;AACA;AAGA;AACH;;AACD;AACH;AAnBO;;AAsBZ;;;;;;AAMA;AACI;AACI;AACH;AAHQ;;AAMb;;;;;;AAMA;AACI;AACI;AACH;AAHQ;;AAMb;;;;;;AAMA;AACI;AACI;AACH;AACD;AAEI;AACA;;AACA;AACI;AACA;AACH;;;AAGD;;AAGA;AAEA;;AAGA;;AACA;AAAW;AAAkB;AACzB;AADJ;AAGA;;;AACA;;AACA;AAAgB;AAAkB;AAC9B;AACI;AACA;AAFkD;AAD1D;;AAKA;AAEH;AAnCC;AA5D8B;AAmGxC;;;;;;AAKA;AACI;AACA;;AAEA;AACI;AADJ;;AAKA;AAAO;AAGP;AACH;;AAED;AACI;AACA;AACA;AACA;AACA;AACH;AAED;;;;;;;;;;;AAWA;;;;;;;;AAMA;AACI;AACA;AACA;AACA;AAAA;;AAEA;AACI;AADJ;;AAMA;AAEQ;AADJ;AAEJ;AAEQ;AACA;AACI;AAUP;AACL;AAEA;AAEA;AAEA;AAEA;AACH;AAED;;;;;;;AAKA;AACI;AACA;AACA;AAGiF;AAA6B;AAOjH;AAED;;;;;AAGA;AACI;AAAA;;AACA;AACI;AADJ;;AAEA;AAA+B;;AAC/B;AACI;AADJ;;AAEA;AACH;AAED;;;;;AAGA;AACI;AAIH;AAED;;;;;;;;;AAOA;AAEI;;AAGA;AACI;AACA;AACA;AAEA;AACA;AAAuB;AAA2B;AAElD;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACH;;AACD;AACI;AAEA;AACA;AACA;AACH;;AACD;AACH;AAED;;;;;;;;;AAOA;AACI;AACI;;AAEA;AACA;AAGA;AACA;AACA;AACA;AACH;;AACD;AAEI;AACA;AAGA;AACA;AACA;AACA;AACH;;AACD;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAED;;;;;;AAIA;AACI;AACA;AAEA;AAAA;;AAEA;AAAoB;AAAkB;AAClC;AADJ;;;AAIA;AACI;AACA;AACA;AAHwB;AAK5B;AACI;AACA;AACA;AAHwB;AAK5B;AACI;AACA;AAFyB;AAI7B;AACI;AACA;AAFyC;AAI7C;AACI;AACA;AAFqC;;AAMzC;;AACA;AACI;;AAEI;AACA;AAEJ;;AACI;AACA;AAEP;;AAED;AACH;AAED;;;;;;;;AAMA;AACI;AACH;AAED;;;;;;;;AAMA;AACI;AACH;AAED;;;;;;;;;;AAQA;AACI;AACH;AAED;;;;;;;;;AAOA;AACI;AAEA;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAED;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;AAMA;AACI;AACH;AAED;;;;;;;;;AASA;;;;;;;;AAMA;AACI;AACI;AACH;AACJ;AAEA;AAAE;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAQ;AAAjH;AAA2H;AAC7H;AAEA;;;;;AAIA;;AAEA;;AAEA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfI;;AAkBR;AACI;AAAA;AACA;;AACA;AAA0B;AAA1B;;AACA;AACH;AAED;;;;;;;;;;;;;;;;;;;;;;AAoBA;AACI;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AAGnB;;;;;;;;;;;;;;;;;;;;;;AAqBA;AACI;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AAGnB;;;;;;;;;;;AAUA;AACI;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AAGnB;;;;;;;;;;;;;;;;;;AAiBA;AACI;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AAGnB;;;;;;;;;;;;;;;;;;;AAkBA;AACI;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AACf;AAAe;AAGlB;AAAE;AAAD;AAAW;AACb;AAEA;;;;;AAIA;;AAEA;;AAEA;AACI;AAEJ;AACA;AACA;AAEA;;;;;AAIA;AAEA;;;;;;AAKA;AACI;AACI;AAAA;AAAA;;AAGA;AACI;AADJ;;AAEA;AACH;;AACD;AACH;AAED;;;;;;;AAKA;AACI;AAAA;;AAEA;AACI;AAAA;AAEA;AAEH;;AACD;AACH;;AAED;AAAA;AAGA;;;;;;AAKA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AAEA;AACH;AAED;;;;;;;AAKA;AACI;AACH;;AAED;AAEA;;;;;;AAKA;AACI;AAEoD;AAA0B;AACjF;AAED;;;;;;;;AAMA;AACI;AACH;AAED;;;;;;;;;;AAQA;AAEI;AACA;AACI;AACI;AACA;AACA;AACH;;AACD;AACH;AAED;;;AACA;AAGA;AACA;AACA;;AACA;AAAuC;AAAa;AAAf;AACrC;AAAiD;AAAa;AAAf;AAC/C;AACH;;AAED;AAEA;;;;;;AAKA;AAEI;AACA;AAGA;;AACA;AAGA;AACA;AACA;AAAyC;AAAY;AAAd;AACvC;AACH;AAGD;;;;;;;;;AAOA;AACI;AACI;;AACA;AACI;AACH;AACG;AACA;AAEA;AACH;;AACD;AACH;;AAED;AAEA;AAGA;AACA;AACH;AAED;;;;;;;;AAMA;AACI;AACI;AACH;AAHuC;AAM3C;AAAE;AAAQ;AAAQ;AAAM;AAAQ;AAAQ;AAAQ;AAAM;AAArD;AAA6D;AAC/D;;AACA;;AAEA;AAEA;;;;;;;;;;AAQA;AAEI;AACA;;AAEA;;;;AAIA;AAEA;;;;;AAIA;AACH;AAED;;;;;;;AAKA;;AAEA;AAA6B;AAAW;;AACxC;AAA6C;AAAc;;AAC3D;AAA2B;AAAW;AAEtC;;;;;;;AAKA;AAEA;;;;;;AAKA;AACI;AAEA;AACA;AAEA;AAAA;;AAEA;AACI;AACA;;AACA;AACI;AACA;AAEH;AACJ;;AACD;AACH;AAED;;;;;;;AAKA;AACI;;AAEA;AACI;AACA;AAIH;;AACD;AACH;AAED;;;;;;;AAKA;AACI;AACI;AAAA;AAEA;AAEA;AACH;;AACD;AACH;AAED;;;;;;;AAKA;AACI;AAEI;AAFG;AAGC;AAAkB;AAAmB;AAAvC;AACT;;AAED;AAEA;;;;;;AAKA;AACI;AAEA;AAWH;AAED;;;;;;AAIA;AACI;AAUH;AAED;;;;;;AAIA;AACI;AACA;AACA;AACA;AACH;AAED;;;;;;AAIA;AACI;AACA;AACA;AACA;AACH;AAED;;;;;;AAIA;AACI;AAAA;AAAA;AAGA;AASH;AAEA;AAAE;AAAD;AAAW;AACb;;AACA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGA;AAEA;;;;;;AAKA;AAMA;;;;;;AAKA;;AAKA;;;;;;;AAMA;AAAsD;AAA2B;;AAEjF;;;;;;AAKA;AAAuD;AAA2B;;AAElF;;;;;;;AAMA;AAAqC;AAA2B;AAC5D;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAED;;;;;;;;;;AAQA;AAEA;;;;;;AAMA;AACI;AACA;AACI;AACJ;AACH;AAED;;;;;;;AAOA;;;;;;AAIA;AACI;AACI;;AAEA;AAA6C;AAA2B;AAC3E;AACG;AACA;AACH;AACJ;;;AAGD;;AAGA;AAEA;;;;;;AAKA;AACI;AACA;AASH;AAED;;;;;;AAIA;AAA4D;AAA/C;AAEb;;;;;;;;;AASA;;;;;AAIA;AAAY;AAA2B;AAAuB;AAA2B;AAC7E;AAA2B;AAGvC;;;;;;AAKA;AAEA;;;;;;AAKA;AAEA;;;;;;AAKA;AAEA;;;;;;AAKA;AACI;AAGH;AAED;;;;;;;;AAMA;AACI;AACA;AAEA;AACH;AAED;;;;;;;;;;AAQA;AAAqC;AACjC;AACI;AADJ;;AAGA;AACH;;AAED;AAEA;;;;;;AAKA;AACI;AACH;AAED;;;;;;;;AAMA;AAEI;AAEI;AAIA;;AAEA;AAAyC;AAAkB;AAAiB;AAArC;AAEvC;;AACA;AACI;AAEuC;AAAF;AAEzC;AAEH;;AAED;AAEA;AAAuD;AAAkB;AAAc;AAAlC;;AAErD;AACI;AACH;;AAED;AACH;;AAED;AAEA;;;;;;;;;;;;;;;;;;AAiBA;AAEA;;;;;;AAMA;;;;;;;AAOA;;;;;;AAKA;AACI;;AACA;AACI;AADJ;AAGA;;;;;;;AAKA;AAAoB;AAChB;AACI;AADJ;AAGH;AACJ;AAED;;;;;;;;AAQA;;;;;;;AAKA;AAEI;;;;;;AAMA;AACI;AACI;AADJ;AAGH;AACJ;AAED;;;;;;;;;;;;;;;;;;AAgBA;AACI;AACA;AACA;AACA;AAJiB;;AAQrB;AACI;AACA;;AACA;AACI;AACA;AACH;AAED;;;AACA;AACI;AACA;AACI;AACH;;AACL;AACI;AACA;AACI;AACH;AACR;AAEA;AAAE;AAAM;AAAQ;AAAM;AAAQ;AAAM;AAAM;AAAM;AAA/C;AAAuD;AACzD;;AACA;;AAEA;AAAA;;AAGA;AACI;AACH;AAED;;;;;;;;;;;AASA;AACI;AACA;AACI;AAA0C;;AAItC;AAAqF;AAArF;;AAEA;AAGH;AACG;AAMH;AACJ;AACG;AACI;AACA;AACA;AACA;AACA;AAAiB;AAGb;;AACJ;AACA;AACA;AACA;AACA;AAAiB;AAGb;;AACJ;AACA;AAAe;AAGX;;AACJ;AAAa;AAGT;;AACJ;AAAe;AAGX;;AACJ;AAAc;AAGV;AAjCR;AAmCH;;AACD;AACA;AACH;AAED;;;;;;;;;;AAQA;AACI;AACA;AACI;AACA;AACA;AACA;AACA;AAAiB;AAGb;;AACJ;AACA;AACA;AACA;AACA;AAAiB;AAAA;AAGb;;AACJ;AAAa;AAGT;AApBR;;AAsBA;AACA;AACH;AAED;;;;;;;AAKA;AACI;AAEA;AAGA;AAAA;AAEA;;AAGA;AAAoB;AAAkB;AAClC;AAAA;;AAGA;AAGA;;AACA;AAAiB;AAKT;AACA;AAIP;AAA4B;AAIrB;AAIP;AACG;AACI;AACA;AAGA;AACA;AAEH;;AACD;AACH;;AACD;AAEH;;AACD;AAEA;AACH;AACA;AAAE;AAAQ;AAAT;AAAmB;AACrB;AAEA;;;;;;AAKA;;AAEA;AAEA;;;;;;;;;AASA;;;;;;;;;;AAUA;;;;;;AAOA;;;AACA;AAEI;AAEI;AACA;AACK;AACD;AACA;AACA;;AACA;AACI;AACA;;AAGA;AACI;AACH;;AACD;AACI;AACA;AAFe;AAItB;AACJ;;AAED;AACH;AAED;AAEI;AACA;AACA;AACA;;AAGA;AACI;AACA;;AAEA;AACA;AACA;;AACA;AAEH;;;AAGD;AACI;AACA;;AAGA;AACI;AACH;;AACD;AACA;AACA;AACH;;AAED;AACH;AA9D8B;AAiElC;AAAE;AAAD;AAAW;AACb;;AACA;;AAEA;;AAEA;;AAEA;AAAA;AAAA;AAIA;;;;;;;;;;AASA;AAEI;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AACH;AAED;;;AACA;;AAEA;;;;;;;;;;AAQA;AAEI;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AACH;AAED;;;;;;;AAKA;AAEI;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAEA;;;;;AAIA;AAGA;AACA;AACA;AACA;AACH;;AAED;AACI;AAEQ;AACI;AACH;AACJ;AACD;AANG;AAQC;AACH;AACR;AAED;;;;;;;AAKA;AAEA;;;;;;AAKA;AACI;AACH;;AAGD;;;AACA;AAGA;;;;;;;;;AAQA;AACI;AACA;AACA;AACH;;AAED;AACI;AACH;;AAED;AACI;AACI;AACA;AACH;;AACD;AACH;AAED;;;;;;;;;;;AASA;AACI;AACA;AACA;AACH;;AAED;AACA;AAEA;;;;;;AAKA;AACI;AACA;AACA;AAQA;AACH;AAED;;;;;;;;AAMA;AACI;AAAO;AAGV;AAED;;;;;;;AAKA;AACI;AACH;;AAED;AACI;AACI;AACA;AACA;AACH;;AACD;AACI;AACA;AACH;;AACD;AACH;AAED;;;;;;;;AAMA;AACI;AACA;AACH;AAED;;;;;;;;;AAOA;AAEA;;;;;;;AAMA;AACI;AACA;AACH;AAED;;;;;;;AAKA;AACI;AACH;;AAED;AACI;AACA;AACA;AACA;AACH;AAED;;;;;;;AAKA;AACI;AACH;AAED;;;;;;;;AAMA;AAEA;;;;;;;AAMA;AACI;AACA;AACH;AAED;;;;;;;;;AAOA;AAEA;;;;;;;AAMA;AACI;AACH;AAED;;;;;;;;AAMA;AACI;AACH;;AAED;AAEQ;AACH;AACD;AAJa;AAMT;AACI;AADJ;AAEH;AAEL;;;;;;AAKA;AACI;AACA;;AAEA;AACI;AACA;AACA;AACH;;AACD;AACH;AAED;;;;;;;AAKA;AACI;AACA;AAGH;AAED;;;;;;;AAKA;AACI;AACA;AACA;AACA;AACH;AAED;;;;;;AAIA;AACI;AACI;AACA;AACA;AACA;AACH;AACG;AACA;AACH;;AACD;AACH;AAED;;;;;;AAIA;AACI;AAAA;AAAA;AAGA;;AACA;AACI;;AACA;AACA;AACH;;AACD;AACH;AAED;;;;;;AAIA;AACI;AAAA;AACI;AADJ;;AAGA;AACI;AACA;AACA;AACH;;;AAED;AACH;;AAED;AACI;AACA;;AACA;AACH;AAEA;AAAE;AAAD;AAAW;AACb;;AACA;;AAGA;;AACA;;AAEA;AAEA;;;;;;;;AAMA;AACI;AACH;;AAED;AACI;;;;;;AAMA;AAEA;AAEM;AACA;AACD;AACD;AAL4B;AAO1B;AACE;AACoC;AACpC;AADG;AAEN;AACR;AAGD;;;;;AAGA;AACI;AAEA;AACA;AACA;AAEA;AACH;;AAED;AACI;AACI;AAKP;AAED;;;;;AAGA;AACI;AACA;AACA;AAEA;AACH;AAGD;;;;;;;;AAOA;AAEC;AAAE;AAAQ;AAAT;AA5qRqB;AA8qRtB","sourcesContent":["/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-31 00:42:13\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-06 02:27:32\r\n * @FilePath     : \\client243\\assets\\src\\ui\\scene\\AccountScene.ts\r\n * @Description  : \r\n */\r\n\r\nimport LocalStorageDefine from \"../../define/LocalStorageDefine\";\r\nimport ViewDefine from \"../../define/ViewDefine\";\r\nimport SceneBase from \"../SceneBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AccountScene extends SceneBase {\r\n\r\n    // 用户令牌\r\n    private m_token: string | null = null;\r\n\r\n    protected onLoad(): void {\r\n        this.register();\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n        if(this.m_token) {\r\n            console.log(`自动登录 token: ${this.m_token}`);\r\n        } else {\r\n            G.UIMgr.openView(ViewDefine.LoginView);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    private register(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注销事件\r\n     */\r\n    private unRegister(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n        this.m_token = cc.sys.localStorage.getItem(LocalStorageDefine.LOCAL_LOGIN_TOKEN);\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁视图\r\n     */\r\n    protected onDestroy(): void {\r\n        this.unRegister();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-08 18:11:45\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-08-25 23:53:53\r\n * @FilePath     : \\client242\\assets\\src\\core\\manager\\animation\\AnimationManager.ts\r\n * @Description  : 动画管理器，用于播放（帧、骨骼、龙骨、补间）动画\r\n */\r\n\r\nimport Manager from \"../Manager\";\r\n\r\nexport default class AnimationManager extends Manager implements ManagerInterface {\r\n\r\n    private static s_instance: AnimationManager = null;\r\n\r\n    public static getInstance(): AnimationManager {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new AnimationManager();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    public destroy(): void {\r\n\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-12 11:33:40\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-05 22:02:29\r\n * @FilePath     : \\client242\\assets\\src\\define\\AudioDefine.ts\r\n * @Description  : 声音相对路径定义\r\n */\r\n\r\n// 动态加载音乐文件名定义（Key 一定不要重复）重要的事情说三次\r\nexport enum MusicPath {\r\n\r\n}\r\n\r\n// 动态加载音效文件名定义（Key 一定不要重复）重要的事情说三次\r\nexport enum SoundPath {\r\n    CLICK = \"audio/sound/click\",\r\n}\r\n\r\nexport default { ...MusicPath, ...SoundPath };","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-09 03:10:00\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-09 16:16:16\r\n * @FilePath     : \\client242\\assets\\src\\utils\\AudioEffectUtil.ts\r\n * @Description  : 声音效果工具\r\n */\r\n\r\nexport default class AudioEffectUtil {\r\n\r\n    /**\r\n     * 打开音量渐变转场效果\r\n     */\r\n    public static openGradually(audio: cc.AudioSource, maxVolume: number = 1, graduallyTime: number = 5, completeCallback?: Function): void {\r\n        audio.volume = 0.1;\r\n        audio.play();\r\n        cc.tween(audio)\r\n            .to(graduallyTime, { volume: maxVolume })\r\n            .call(() => {\r\n                if (completeCallback) {\r\n                    completeCallback();\r\n                }\r\n            })\r\n            .start();\r\n    }\r\n\r\n    /**\r\n     * 关闭音量渐变转场效果\r\n     */\r\n    public static closeGradually(audio: cc.AudioSource, minVolume: number = 0, graduallyTime: number = 5, completeCallback?: Function): void {\r\n        cc.tween(audio)\r\n            .to(graduallyTime, { volume: minVolume })\r\n            .call(() => {\r\n                if (completeCallback) {\r\n                    completeCallback();\r\n                }\r\n            })\r\n            .start();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-08 18:14:04\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-05 22:05:03\r\n * @FilePath     : \\client242\\assets\\src\\core\\manager\\audio\\AudioManager.ts\r\n * @Description  : 用于整个游戏场景中，需要播放声音的模块，调用全局接口，达到播放声音的效果，开发者无需考虑声音播放缓存问题，音效可自定义是否缓存\r\n */\r\n\r\nimport Manager from \"../Manager\";\r\nimport AudioDefine from \"../../../define/AudioDefine\";\r\nimport Loader from \"../../machine/Loader\";\r\nimport Audio from \"./Audio\";\r\nimport Pool from \"../../../pattern/Pool\";\r\nimport Logger from \"../../machine/Logger\";\r\nimport AudioEffectUtil from \"../../../utils/AudioEffectUtil\";\r\n\r\n// 音效同时播放最大数量\r\nconst MAX_SAME_TIME_PLAY_SIZE = 10;\r\n// 音乐转场过渡时间\r\nconst GRADUALLY_TIME = 1;\r\n\r\nexport default class AudioManager extends Manager implements ManagerInterface {\r\n\r\n    private static s_instance: AudioManager = null;\r\n\r\n    // 音效对象池\r\n    private m_soundPool: Pool<Audio> = null;\r\n    // 音效缓存\r\n    private m_soundMap: Map<AudioDefineType, Audio> = null;\r\n    // 音乐\r\n    private m_music: Audio = null;\r\n\r\n    public static getInstance(): AudioManager {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new AudioManager();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.m_soundPool = new Pool<Audio>(Audio, MAX_SAME_TIME_PLAY_SIZE);\r\n        this.m_soundMap = new Map();\r\n        this.m_music = new Audio();\r\n    }\r\n\r\n    /**\r\n     * 检测路径是否合法\r\n     * @param path {AudioDefineType} 动态路径\r\n     * @return {boolean}\r\n     */\r\n    private checkLegal(path: AudioDefineType): boolean {\r\n        let legal: boolean = true;\r\n        if (path === null || path === undefined) {\r\n            legal = false;\r\n        }\r\n        return legal;\r\n    }\r\n\r\n    /**\r\n     * 播放音乐 用于背景音乐，循环播放方式，切换音乐时会有转场效果\r\n     * @param path {AudioDefineType} 动态加载声音路径\r\n     * @param isGradually {boolean} 是否渐变转场效果，默认 true\r\n     */\r\n    public playMusic(path: AudioDefineType, isGradually: boolean = true): void {\r\n        Loader.getInstance().load(path, (clip: cc.AudioClip) => {\r\n            if (clip === null) {\r\n                return;\r\n            }\r\n\r\n            let playCallBack: Function = () => {\r\n                this.m_music.clear();\r\n                this.m_music.setClip(clip);\r\n                this.m_music.setPath(path);\r\n                this.m_music.regCallback(() => {\r\n                    Loader.getInstance().unload(path);\r\n                    this.m_music.clear();\r\n                });\r\n                if (isGradually) {\r\n                    AudioEffectUtil.openGradually(this.m_music);\r\n                } else {\r\n                    this.m_music.play();\r\n                }\r\n\r\n                this.m_music.loop = true;\r\n            }\r\n\r\n            let preMusicPath: AudioDefineType = this.m_music.getPath() as AudioDefineType;\r\n            if (preMusicPath !== null) {\r\n                if (isGradually) {\r\n                    AudioEffectUtil.closeGradually(this.m_music, 0, GRADUALLY_TIME, () => {\r\n                        Loader.getInstance().unload(path);\r\n                        playCallBack();\r\n                    })\r\n                } else {\r\n                    Loader.getInstance().unload(path);\r\n                    playCallBack();\r\n                }\r\n            } else {\r\n                playCallBack();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 暂停当前播放中的音乐，如果当前没有音乐，会有个警告提示\r\n     */\r\n    public pauseMusic(): void {\r\n        if (!this.m_music.getPath() || !this.m_music.isPlaying) {\r\n            Logger.getInstance().warn(`无法找到需要暂停的音乐 ${this.m_music.getPath()}`);\r\n            return;\r\n        }\r\n\r\n        this.m_music.pause();\r\n    }\r\n\r\n    /**\r\n     * 停止当前播放中的音乐，如果当前没有正在播放的音乐，会有个警告提示\r\n     * @param isGradually {boolean} 是否转场效果\r\n     */\r\n    public stopMusic(isGradually: boolean = true): void {\r\n        if (!this.m_music.getPath() || !this.m_music.isPlaying) {\r\n            Logger.getInstance().warn(`无法找到需要停止的音乐 ${this.m_music.getPath()}`);\r\n            return;\r\n        }\r\n\r\n        if (isGradually) {\r\n            AudioEffectUtil.closeGradually(this.m_music, 0, GRADUALLY_TIME, () => {\r\n                this.m_music.stop();\r\n            })\r\n        } else {\r\n            this.m_music.stop();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 恢复当前被暂停的音乐，如果当前没有正在播放的音乐，会有个警告提示\r\n     */\r\n    public resumeMusic(): void {\r\n        if (!this.m_music.getPath() || this.m_music.isPlaying) {\r\n            Logger.getInstance().warn(`无法找到需要恢复的音乐 ${this.m_music.getPath()}`);\r\n            return;\r\n        }\r\n\r\n        this.m_music.resume();\r\n    }\r\n\r\n    /**\r\n     * 播放音效 播放一次游戏内的短暂声音\r\n     * @param path {AudioDefineType} 音效路径\r\n     * @param isBreak {boolean} true 代表之前播放相同路径的资源会被停止后，播放新的路径音效，false 代表之前播放相同路径的资源会自然的播放完成，不会被主动停止\r\n     * @param isCache {boolean} true 代表之前播放过的资源，在当前场景中缓存并不会被销毁，false 代表播放完成后立刻释放缓存资源\r\n     */\r\n    public playSound(path: AudioDefineType, isBreak: boolean = false, isCache: boolean = true): void {\r\n        if (isBreak) {\r\n            let audio: Audio = this.m_soundMap.get(path);\r\n            if (audio !== null && audio !== undefined) {\r\n                audio.stop();\r\n            }\r\n        }\r\n\r\n        Loader.getInstance().load(path, (clip: cc.AudioClip) => {\r\n            if (clip === null) {\r\n                return;\r\n            }\r\n            // 设置资源准备播放\r\n            let audio: Audio = this.m_soundPool.get();\r\n            this.m_soundMap.set(path, audio);\r\n            audio.setClip(clip);\r\n            audio.setPath(path);\r\n            audio.regCallback(() => {\r\n                let asset: cc.Asset = Loader.getInstance().getCache(path);\r\n                if (!isCache || asset.refCount > 1) {\r\n                    // 减小资源引用\r\n                    Loader.getInstance().unload(path);\r\n                }\r\n                this.m_soundPool.put(audio);\r\n                // 删除当前记录\r\n                if (asset.refCount <= 0) {\r\n                    this.m_soundMap.delete(path);\r\n                }\r\n            });\r\n            // 播放\r\n            audio.play();\r\n            audio.loop = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 暂停音效（不销毁缓存）\r\n     * @param path {AudioDefineType} 音效路径\r\n     */\r\n    public pauseSound(path: AudioDefineType): void {\r\n        if (!this.checkLegal(path)) {\r\n            Logger.getInstance().warn(`暂停音效路径错误 ${path}`);\r\n            return;\r\n        }\r\n\r\n        let audio: Audio = this.m_soundMap.get(path);\r\n        if(audio === null || audio === undefined) {\r\n            Logger.getInstance().warn(`无法暂停不存在的音效 ${path}`);\r\n            return;\r\n        }\r\n\r\n        if(!audio.isPlaying) {\r\n            Logger.getInstance().warn(`无法暂停未播放的音效 ${path}`);\r\n            return;\r\n        }\r\n\r\n        audio.pause();\r\n    }\r\n\r\n    /**\r\n     * 暂停所有音效\r\n     */\r\n    public pauseAllSound(): void {\r\n        let soundSize: number = this.m_soundMap.size;\r\n        if (soundSize > 0) {\r\n            this.m_soundMap.forEach((value: Audio) => {\r\n                value.pause();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止音效\r\n     * @param path {AudioDefineType} 音效路径\r\n     */\r\n    public stopSound(path: AudioDefineType): void {\r\n        if (!this.checkLegal(path)) {\r\n            Logger.getInstance().warn(`停止音效路径错误 ${path}`);\r\n            return;\r\n        }\r\n\r\n        let audio: Audio = this.m_soundMap.get(path);\r\n        if(audio === null || audio === undefined) {\r\n            Logger.getInstance().warn(`无法停止不存在的音效 ${path}`);\r\n            return;\r\n        }\r\n\r\n        if(!audio.isPlaying) {\r\n            Logger.getInstance().warn(`无法停止未播放的音效 ${path}`);\r\n            return;\r\n        }\r\n\r\n        audio.stop();\r\n    }\r\n\r\n    /**\r\n     * 停止所有音效\r\n     */\r\n    public stopAllSound(): void {\r\n        let soundSize: number = this.m_soundMap.size;\r\n        if (soundSize > 0) {\r\n            this.m_soundMap.forEach((value: Audio) => {\r\n                value.stop();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 恢复暂停后的音效\r\n     * @param path {AudioDefineType} 音效路径\r\n     */\r\n    public resumeSound(path: AudioDefineType): void {\r\n        if (!this.checkLegal(path)) {\r\n            Logger.getInstance().warn(`恢复音效路径错误 ${path}`);\r\n            return;\r\n        }\r\n\r\n        let audio: Audio = this.m_soundMap.get(path);\r\n        if(audio === null || audio === undefined) {\r\n            Logger.getInstance().warn(`无法恢复不存在的音效 ${path}`);\r\n            return;\r\n        }\r\n\r\n        if(audio.isPlaying) {\r\n            Logger.getInstance().warn(`无法恢复未暂停的音效 ${path}`);\r\n            return;\r\n        }\r\n\r\n        audio.resume();\r\n    }\r\n\r\n    /**\r\n     * 恢复所有暂停后的音效\r\n     */\r\n    public resumeAllSound(): void {\r\n        let soundSize: number = this.m_soundMap.size;\r\n        if (soundSize > 0) {\r\n            this.m_soundMap.forEach((value: Audio) => {\r\n                value.resume();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放按钮点击音效\r\n     */\r\n    public playClick(): void {\r\n        this.playSound(AudioDefine.CLICK, false);\r\n    }\r\n\r\n\r\n    /**\r\n     * 清理播放中的音效\r\n     */\r\n    private clearSound(): void {\r\n        this.m_soundMap.forEach((value: Audio) => {\r\n            value.stop();\r\n            value.release();\r\n        });\r\n        this.m_soundMap.clear();\r\n    }\r\n\r\n    /**\r\n     * 清理播放中的音乐\r\n     */\r\n    private clearMusic(): void {\r\n        this.m_music.stop();\r\n        this.m_music.release();\r\n    }\r\n\r\n    /**\r\n     * 销毁 清理并停止所有正在播放声音（只允许通过 单例静态销毁调用，不允许使用成员方法进行 destroy）\r\n     */\r\n    public destroy(): void {\r\n        this.clearSound();\r\n        this.clearMusic();\r\n        this.m_soundPool.destroy();\r\n        this.m_soundPool = null;\r\n        this.m_soundMap = null;\r\n        this.m_music = null;\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-06 13:24:35\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 00:37:08\r\n * @FilePath     : \\client242\\assets\\src\\core\\manager\\audio\\Audio.ts\r\n * @Description  : 重写 cc.AudioSource 声音类（用于播放音乐/音效过程中，存储一些外部数据，控制声音大小，设置参数 等等...）\r\n */\r\n\r\nexport default class Audio extends cc.AudioSource implements PoolItemInterface {\r\n\r\n    // 结束时间（单位：毫秒）\r\n    private m_endTime: number = null;\r\n    // 结束定时器\r\n    private m_endTimer: NodeJS.Timer = null;\r\n    // 声音结束回调方法\r\n    private m_endCallback: Function = null;\r\n    // 资源路径\r\n    private m_assetsPath: AudioDefineType = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * 注册播放完成回调\r\n     * @param callback {Function} 回调\r\n     */\r\n    public regCallback(callback: Function): void {\r\n        this.m_endCallback = callback;\r\n    }\r\n\r\n    /**\r\n     * 设置声音资源\r\n     * @param clip {cc.AudioClip} 声音资源\r\n     */\r\n    public setClip(clip: cc.AudioClip): void {\r\n        this.clip = clip;\r\n        this.m_endTime = clip.duration;\r\n    }\r\n\r\n    /**\r\n     * 设置动态加载资源路径\r\n     * @param path {AudioDefineType} 资源路径\r\n     */\r\n    public setPath(path: AudioDefineType): void {\r\n        this.m_assetsPath = path;\r\n    }\r\n\r\n    /**\r\n     * 获取动态加载资源路径\r\n     * @return {AudioDefineType} 资源路径\r\n     */\r\n    public getPath(): AudioDefineType {\r\n        return this.m_assetsPath;\r\n    }\r\n\r\n    /**\r\n     * 调用播放完成\r\n     */\r\n    private callFinish(): void {\r\n        if (this.m_endCallback) {\r\n            this.m_endCallback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启动播放结束定时器\r\n     */\r\n    private startTimer(): void {\r\n        if (this.m_endTimer === undefined || this.m_endTimer === null) {\r\n            this.m_endTimer = setTimeout(() => {\r\n                if(!this.loop) {\r\n                    this.callFinish();\r\n                }\r\n            }, this.m_endTime * 1000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放结束定时器\r\n     */\r\n    private stopTimer(): void {\r\n        if (this.m_endTimer !== undefined && this.m_endTimer !== null) {\r\n            clearTimeout(this.m_endTimer);\r\n            this.m_endTimer = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重写 play 方法\r\n     */\r\n    public play(): void {\r\n        super.play();\r\n        this.startTimer();\r\n    }\r\n\r\n    /**\r\n     * 重写 stop 方法\r\n     */\r\n    public stop(): void {\r\n        super.stop();\r\n        this.callFinish();\r\n    }\r\n\r\n    /**\r\n     * 重写 pause 方法\r\n     */\r\n    public pause(): void {\r\n        super.pause();\r\n        this.stopTimer();\r\n        this.m_endTime = super.getCurrentTime();\r\n    }\r\n\r\n    /**\r\n     * 重写 resume 方法\r\n     */\r\n    public resume(): void {\r\n        this.m_endTime = super.getCurrentTime();\r\n        super.resume();\r\n        this.startTimer();\r\n    }\r\n\r\n    /**\r\n     * 重写 rewind 方法\r\n     */\r\n    public rewind(): void {\r\n        this.stopTimer();\r\n        this.m_endTime = this.clip.duration;\r\n        super.rewind();\r\n        this.startTimer();\r\n    }\r\n\r\n    /**\r\n     * 清理\r\n     */\r\n    public clear(): void {\r\n        this.m_endTime = null;\r\n        this.stopTimer();\r\n        this.m_endCallback = null;\r\n        this.m_assetsPath = null;\r\n    }\r\n\r\n    /**\r\n     * 释放\r\n     */\r\n    public release(): void {\r\n        this.clear();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-28 22:24:11\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-10 11:28:23\r\n * @FilePath     : \\client242\\assets\\src\\ui\\scene\\BootScene.ts\r\n * @Description  : 程序启动入口\r\n */\r\n\r\nimport Loader from \"../../core/machine/Loader\";\r\nimport ViewLayerDefine from \"../../define/ViewLayerDefine\";\r\nimport LanguagePathDefine from \"../../define/LanguagePathDefine\";\r\nimport ViewDefine, { PersistViewDefine } from \"../../define/ViewDefine\";\r\nimport UIManager from \"../../core/manager/ui/UIManager\";\r\nimport * as UpdateDefine from \"../../define/UpdateDefine\";\r\nimport * as UpdateInterface from \"../../interface/UpdateInterface\";\r\nimport LocalizationDefine from \"../../define/LocalizationDefine\";\r\nimport Util from \"../../utils/Util\";\r\nimport Logger from \"../../core/machine/Logger\";\r\nimport LanguageUtil from \"../../utils/LanguageUtil\";\r\nimport LocalStorageDefine from \"../../define/LocalStorageDefine\";\r\nimport * as GameConfig from \"../../config/GameConfig\";\r\nimport SceneBase from \"../SceneBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BootScene extends SceneBase implements SceneInterface {\r\n\r\n    @property({ type: cc.Label, tooltip: \"初始化提示\" })\r\n    private labTips: cc.Label = null;\r\n\r\n    @property({ type: cc.JsonAsset, tooltip: \"游戏配置\" })\r\n    private jsnGameConfig: cc.JsonAsset = null;\r\n\r\n    protected onLoad(): void {\r\n        // 准备在 constructor 初始化全局变量，迫于引擎会在构造中执行两次，放弃写在构造，临时移到这里吧\r\n        this.register();\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start() {\r\n        this.launch();\r\n    }\r\n\r\n    /**\r\n     * 注册消息\r\n     */\r\n    private register(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 语言切换\r\n     */\r\n    public onLanguage(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n        this.setTips(\"\");\r\n    }\r\n\r\n    /**\r\n     * 设置提示信息\r\n     * @param str {string} 提示信息\r\n     */\r\n    private setTips(str: string): void {\r\n        this.labTips.string = str;\r\n    }\r\n\r\n    /**\r\n     * 程序启动\r\n     */\r\n    private async launch(): Promise<void> {\r\n        await this.loadLanguage();\r\n        await this.loadDepend();\r\n        await this.loadUpdate();\r\n        this.intoGame();\r\n    }\r\n\r\n    /**\r\n     * 加载多语言\r\n     */\r\n    private async loadLanguage(): Promise<void> {\r\n        return new Promise((resolve: (localization: LocalizationDefineType) => void) => {\r\n            let language: LanguageDefineType = cc.sys.localStorage.getItem(LocalStorageDefine.LOCAL_LANGUAGE);\r\n            let languagePath: LanguagePathDefineType = LanguagePathDefine[language];\r\n            if (language === null || languagePath === undefined) {\r\n                language = LanguageUtil.transOsLanguage(cc.sys.language);\r\n                languagePath = LanguagePathDefine[language];\r\n                cc.sys.localStorage.setItem(LocalStorageDefine.LOCAL_LANGUAGE, language);\r\n            }\r\n\r\n            G.Game.language = language;\r\n\r\n            Loader.getInstance().load(languagePath, (asset: cc.JsonAsset) => {\r\n                if (asset === null) {\r\n                    G.Logger.error(`加载语言失败 ${languagePath}`);\r\n                    G.UIMgr.openPopups(\"加载语言包失败，即将重启游戏\", \"提示\", this.node, () => {\r\n                        cc.game.restart();\r\n                    })\r\n                } else {\r\n                    resolve(asset.json);\r\n                }\r\n                Loader.getInstance().unload(languagePath);\r\n            });\r\n        }).then((localization: LocalizationDefineType) => {\r\n            G.Localization.data = localization;\r\n            G.Logger.log(\"语言加载完成\");\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载常驻视图\r\n     */\r\n    private async loadPersist(): Promise<void> {\r\n        this.setTips(G.Localization.get(LocalizationDefine.LOAD_ASSETS));\r\n        return new Promise((resolve: () => void) => {\r\n            let res: PersistViewDefine[] = [\r\n                PersistViewDefine.LoadingView,\r\n                PersistViewDefine.LockTouchView,\r\n                PersistViewDefine.ProgressView,\r\n                PersistViewDefine.TestView,\r\n            ];\r\n            Loader.getInstance().load(res, (prefabs: cc.Prefab[]) => {\r\n                if (prefabs === null) {\r\n                    G.Logger.error(\"常驻视图加载失败\");\r\n                    G.UIMgr.openPopups(G.Localization.get(LocalizationDefine.INITIALIZATION_FAILED), G.Localization.get(LocalizationDefine.ERROR), this.node, () => {\r\n                        cc.game.restart();\r\n                    })\r\n                } else {\r\n                    prefabs.map((prefab: cc.Prefab, index: number) => {\r\n                        let node: cc.Node = cc.instantiate(prefab);\r\n                        node.zIndex = ViewLayerDefine.SYSTEM;\r\n                        cc.game.addPersistRootNode(node);\r\n                        node.parent = cc.director.getScene();\r\n                        UIManager.getInstance().setPersistView(res[index], node);\r\n                    });\r\n                    resolve();\r\n                }\r\n            });\r\n        }).then(() => {\r\n            G.Logger.log(\"常驻加载完成\");\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载配置\r\n     */\r\n    private async loadConfig(): Promise<void> {\r\n        return new Promise((resolve: () => void, reject: () => void) => {\r\n            if (this.jsnGameConfig && this.jsnGameConfig.json) {\r\n                let gameConfig: any = this.jsnGameConfig.json;\r\n                G.Game.version = gameConfig.version;\r\n                resolve();\r\n            } else {\r\n                reject();\r\n            }\r\n        }).then(() => {\r\n            G.Logger.log(\"配置加载完成\");\r\n        }).catch(() => {\r\n            G.Logger.warn(\"加载配置错误\");\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载 SDK\r\n     */\r\n    private async loadSDK(): Promise<void> {\r\n        return new Promise((resolve: () => void) => {\r\n            resolve();\r\n        }).then(() => {\r\n            G.Logger.log(\"SDK 加载完成\")\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载依赖\r\n     */\r\n    private async loadDepend(): Promise<void> {\r\n        return new Promise((resolve: () => void) => {\r\n            Promise.all([this.loadConfig(), this.loadPersist(), this.loadSDK()]).then(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载更新\r\n     */\r\n    private async loadUpdate(): Promise<void> {\r\n        if (!cc.sys.isNative) {\r\n            return;\r\n        }\r\n\r\n        return new Promise((resolve: () => void) => {\r\n            /**\r\n             * 闭包进入维护界面\r\n             */\r\n            let goMaintain: Function = () => {\r\n                G.UIMgr.openView(ViewDefine.MaintainView);\r\n                this.initView();\r\n            }\r\n\r\n            /**\r\n             * 闭包处理错误\r\n             * @param state \r\n             */\r\n            let goError: (state: UpdateDefine.ErrorState) => void = (state: UpdateDefine.ErrorState) => {\r\n                let error: string = \"\";\r\n                switch (state) {\r\n                    case UpdateDefine.ErrorState.LOAD_LOCAL_MANIFEST:\r\n                    case UpdateDefine.ErrorState.DOWNLOAD_MANIFEST:\r\n                    case UpdateDefine.ErrorState.PARSE_MANIFEST:\r\n                    case UpdateDefine.ErrorState.DECOMPRESS_FILE:\r\n                    case UpdateDefine.ErrorState.DOWNLOAD_FILE:\r\n                    case UpdateDefine.ErrorState.VERIFY_FILE:\r\n                    case UpdateDefine.ErrorState.RETRY:\r\n                        error = G.Localization.get(LocalizationDefine.UPDATE_FAILED_RETRY);\r\n                        break;\r\n                    default:\r\n                        return;\r\n                }\r\n\r\n                G.UIMgr.openPopups(error, G.Localization.get(LocalizationDefine.ERROR), this.node, async () => {\r\n                    if (cc.sys.getNetworkType() === cc.sys.NetworkType.NONE) {\r\n                        Logger.getInstance().warn(\"网络错误\");\r\n                        return G.UIMgr.openPopups(G.Localization.get(LocalizationDefine.NETWORK_ERROR_RETRY), null, this.node, () => {\r\n                            goError(state);\r\n                        }, () => {\r\n                            goMaintain();\r\n                        });\r\n                    }\r\n\r\n                    let updateResult: UpdateInterface.UpdateResult = await G.UpdateMgr.retry();\r\n                    if (updateResult.error !== null && updateResult.error !== undefined) {\r\n                        return goError(updateResult.error);\r\n                    }\r\n\r\n                    switch (updateResult.state) {\r\n                        case UpdateDefine.UpdateState.UPDATE_FINISH:\r\n                            cc.game.restart();\r\n                            break;\r\n                        case UpdateDefine.UpdateState.ALREADY_NEW:\r\n                            resolve();\r\n                            break;\r\n                        case UpdateDefine.UpdateState.AGENT:\r\n                            goCheck();\r\n                            break;\r\n                        default:\r\n                            G.Logger.error(\"重试返回状态异常\");\r\n                            break;\r\n                    }\r\n\r\n                }, () => {\r\n                    goMaintain();\r\n                })\r\n            }\r\n\r\n            /**\r\n             * 闭包更新\r\n             */\r\n            let goUpdate: Function = async () => {\r\n                this.setTips(G.Localization.get(LocalizationDefine.UPDATING_ASSETS));\r\n\r\n                if (cc.sys.getNetworkType() === cc.sys.NetworkType.NONE) {\r\n                    Logger.getInstance().warn(\"网络错误\");\r\n                    return G.UIMgr.openPopups(G.Localization.get(LocalizationDefine.NETWORK_ERROR_RETRY), null, this.node, () => {\r\n                        goUpdate();\r\n                    }, () => {\r\n                        goMaintain();\r\n                    });\r\n                }\r\n                \r\n                G.UIMgr.openView(ViewDefine.UpdateView);\r\n\r\n                let updateResult: UpdateInterface.UpdateResult = await G.UpdateMgr.update();\r\n                if (updateResult.error !== null && updateResult.error !== undefined) {\r\n                    return goError(updateResult.error);\r\n                }\r\n\r\n                switch (updateResult.state) {\r\n                    case UpdateDefine.UpdateState.UPDATE_FINISH:\r\n                        cc.game.restart();\r\n                        break;\r\n                    case UpdateDefine.UpdateState.ALREADY_NEW:\r\n                        resolve();\r\n                        break;\r\n                    case UpdateDefine.UpdateState.AGENT:\r\n                        goCheck();\r\n                        break;\r\n                    default:\r\n                        G.Logger.error(\"更新返回状态异常\");\r\n                        break;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * 闭包检查\r\n             */\r\n            let goCheck: Function = async () => {\r\n                this.setTips(G.Localization.get(LocalizationDefine.CHECK_VERSION_INFO));\r\n\r\n                if (cc.sys.getNetworkType() === cc.sys.NetworkType.NONE) {\r\n                    Logger.getInstance().warn(\"网络错误\");\r\n                    return G.UIMgr.openPopups(G.Localization.get(LocalizationDefine.NETWORK_ERROR_RETRY), null, this.node, () => {\r\n                        goCheck();\r\n                    }, () => {\r\n                        goMaintain();\r\n                    });\r\n                }\r\n\r\n                let checkResult: UpdateInterface.CheckResult = await G.UpdateMgr.check();\r\n\r\n                if (checkResult.error !== null && checkResult.error !== undefined) {\r\n                    return goError(checkResult.error);\r\n                }\r\n\r\n                switch (checkResult.state) {\r\n                    case UpdateDefine.CheckState.NOT:\r\n                        resolve();\r\n                        break;\r\n                    case UpdateDefine.CheckState.QUIET: {\r\n                        goUpdate();\r\n                    }\r\n                        break;\r\n                    case UpdateDefine.CheckState.PROMPT: {\r\n                        G.UIMgr.openPopups(G.Localization.get(LocalizationDefine.TRANFFIC_DOWNLOAD, Util.bytesToFileUnit(checkResult.downloadBytes)), G.Localization.get(LocalizationDefine.UPDATE), this.node, () => {\r\n                            goUpdate();\r\n                        }, () => {\r\n                            goMaintain();\r\n                        });\r\n                    }\r\n                        break;\r\n                    case UpdateDefine.CheckState.URL: {\r\n                        this.setTips(G.Localization.get(LocalizationDefine.DOWNING_APP));\r\n                        cc.sys.openURL(G.UpdateMgr.getAppURL());\r\n                        goMaintain();\r\n                    }\r\n                        break;\r\n                    case UpdateDefine.CheckState.STORE: {\r\n                        this.setTips(G.Localization.get(LocalizationDefine.NEED_STORE_UPDATE));\r\n                        G.UIMgr.openPopups(G.Localization.get(LocalizationDefine.STORE_DOWNLOAD), G.Localization.get(LocalizationDefine.UPDATE), this.node, () => {\r\n                            cc.sys.openURL(G.UpdateMgr.getAppStoreURL());\r\n                            goMaintain();\r\n                        });\r\n                    }\r\n                        break;\r\n                    default: {\r\n                        G.Logger.error(`无法找到热更检测结果 ${checkResult.state}`);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            goCheck();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 进入游戏\r\n     */\r\n    private intoGame(): void {\r\n        G.UIMgr.openScene(GameConfig.DEFAULT_LAUNCH_SCENE);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n\r\n    }\r\n}\r\n","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-30 23:42:29\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-15 23:05:11\r\n * @FilePath     : \\client242\\assets\\src\\utils\\CodeUtil.ts\r\n * @Description  : 编码工具\r\n */\r\n\r\nimport md5 from \"../lib/md5\";\r\n\r\nexport default class CodeUtil {\r\n\r\n    /**\r\n     * Uint8Array 转换 string\r\n     * @param uint8Array {Uint8Array} 字节流\r\n     * @return {string} 字符串\r\n     */\r\n    public static uint8ArrayToString(uint8Array: Uint8Array): string {\r\n        /**\r\n         * Chrome 可以使用 TextDecoder，但 Native 无法使用 \r\n         */\r\n        // return new TextDecoder(\"utf-8\").decode(uint8Array);\r\n\r\n        let str: string = \"\";\r\n        let index: number = 0;\r\n        let char1: number = 0;\r\n        let char2: number = 0;\r\n        let char3: number = 0;\r\n\r\n        while (index < uint8Array.length) {\r\n            char1 = uint8Array[index++];\r\n            switch (char1 >> 4) {\r\n                case 0:\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5:\r\n                case 6:\r\n                case 7:\r\n                    str += String.fromCharCode(char1);\r\n                    break;\r\n                case 12:\r\n                case 13:\r\n                    char2 = uint8Array[index++];\r\n                    str += String.fromCharCode(((char1 & 0x1F) << 6) | (char2 & 0x3F));\r\n                    break;\r\n                case 14:\r\n                    char2 = uint8Array[index++];\r\n                    char3 = uint8Array[index++];\r\n                    str += String.fromCharCode(((char1 & 0x0F) << 12) | ((char2 & 0x3F) << 6) | ((char3 & 0x3F) << 0));\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n\r\n    /**\r\n     * string 转换 Uint8Array\r\n     * @param str {string} 字符串\r\n     * @return {Uint8Array} 字节流\r\n     */\r\n    public static stringToUint8Array(str: string): Uint8Array {\r\n        /**\r\n         * Chrome 可以使用 TextEncoder，但 Native 无法使用 \r\n         */\r\n        // return new TextEncoder().encode(str);\r\n\r\n        let pos: number = 0;\r\n        const strLen: number = str.length;\r\n        let at: number = 0;\r\n        let tlen: number = Math.max(32, strLen + (strLen >> 1) + 7);\r\n        let target: Uint8Array = new Uint8Array((tlen >> 3) << 3);\r\n\r\n        while (pos < strLen) {\r\n            let value: number = str.charCodeAt(pos++);\r\n            if (value >= 0xd800 && value <= 0xdbff) {\r\n                if (pos < strLen) {\r\n                    const extra: number = str.charCodeAt(pos);\r\n                    if ((extra & 0xfc00) === 0xdc00) {\r\n                        ++pos;\r\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\r\n                    }\r\n                }\r\n                if (value >= 0xd800 && value <= 0xdbff) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (at + 4 > target.length) {\r\n                tlen += 8;\r\n                tlen *= (1.0 + (pos / strLen) * 2);\r\n                tlen = (tlen >> 3) << 3;\r\n                const update: Uint8Array = new Uint8Array(tlen);\r\n                update.set(target);\r\n                target = update;\r\n            }\r\n\r\n            if ((value & 0xffffff80) === 0) {\r\n                target[at++] = value;\r\n                continue;\r\n            } else if ((value & 0xfffff800) === 0) {\r\n                target[at++] = ((value >> 6) & 0x1f) | 0xc0;\r\n            } else if ((value & 0xffff0000) === 0) {\r\n                target[at++] = ((value >> 12) & 0x0f) | 0xe0;\r\n                target[at++] = ((value >> 6) & 0x3f) | 0x80;\r\n            } else if ((value & 0xffe00000) === 0) {\r\n                target[at++] = ((value >> 18) & 0x07) | 0xf0;\r\n                target[at++] = ((value >> 12) & 0x3f) | 0x80;\r\n                target[at++] = ((value >> 6) & 0x3f) | 0x80;\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            target[at++] = (value & 0x3f) | 0x80;\r\n        }\r\n\r\n        return target.slice(0, at);\r\n    }\r\n\r\n    /**\r\n     * Uint8Array 转换 Array\r\n     * @param uint8Array {Uint8Array} 字节流\r\n     * @return {number[]}\r\n     */\r\n    public static uint8ArrayToArray(uint8Array: Uint8Array): number[] {\r\n        return Array.prototype.slice.call(uint8Array);\r\n    }\r\n\r\n    /**\r\n     * MD5 加密\r\n     * @param data {string | any[] | Uint8Array | ArrayBuffer} 未加密前的明文\r\n     * @return {string} 加密后的码文\r\n     */\r\n    public static md5(data: string | any[] | Uint8Array | ArrayBuffer): string {\r\n        return md5(data);\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-28 22:24:11\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 01:35:02\r\n * @FilePath     : \\client243\\assets\\src\\define\\EventDefine.ts\r\n * @Description  : 事件定义\r\n */\r\n\r\n// 系统事件定义 范围从 0-9999\r\nexport enum SystemEventDefine {\r\n    // 网络正在连接\r\n    WS_CONNECTING = 0,\r\n    // 网络连接成功\r\n    WS_CONNECTED,\r\n    // 网络连接错误\r\n    WS_ERROR,\r\n    // 网络正在断开\r\n    WS_CLOSING,\r\n    // 网络连接断开\r\n    WS_CLOSED,\r\n    // 网络消息超时\r\n    WS_MESSAGE_TIMEOUT,\r\n    // 网络消息正常\r\n    WS_MESSAGE_NORMAL,\r\n    // 网络心跳超时\r\n    WS_PONG_TIMEOUT,\r\n    // Http 请求超时\r\n    HTTP_TIMEOUT,\r\n    // Http 请求错误\r\n    HTTP_ERROR,\r\n    // Http 请求结果错误\r\n    HTTP_CODE_ERROR,\r\n\r\n    // 更新进度\r\n    UPDATE_PROGRESS,\r\n}\r\n\r\n// 游戏事件定义 范围从 10000~ 开始\r\nexport enum GameEventDefine {\r\n    // 开始游戏\r\n    STRAT_GAME = 10000,\r\n}\r\n\r\nexport default { ...SystemEventDefine, ...GameEventDefine };","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-08 15:41:52\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-31 03:05:16\r\n * @FilePath     : \\client242\\assets\\src\\core\\manager\\event\\EventManager.ts\r\n * @Description  : 事件管理器，侦察者模式，用于整个游戏中的消息事件注册、接收、发送工作，各模块之间交互和解耦\r\n */\r\n\r\nimport Manager from \"../Manager\";\r\nimport EventDefine from \"../../../define/EventDefine\";\r\nimport Logger from \"../../machine/Logger\";\r\n\r\nexport default class EventManager extends Manager implements ManagerInterface {\r\n\r\n    private static s_instance: EventManager = null;\r\n\r\n    // 事件注册结构\r\n    private m_eventMap: Map<EventDefineType, Map<any, Function>> = null;\r\n\r\n    public static getInstance(): EventManager {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new EventManager();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.m_eventMap = new Map();\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     * @param event {EventDefineType} 事件ID\r\n     * @param caller {T} 注册者的 this 对象\r\n     * @param callback {Function} 监听回调函数\r\n     */\r\n    public on<T>(event: EventDefineType, caller: T, callback: Function): void {\r\n        if (this.m_eventMap === null) {\r\n            Logger.getInstance().warn(\"注册\", EventDefine[event], \"事件失败\");\r\n            return;\r\n        }\r\n\r\n        let listenMap: Map<T, Function> | undefined = this.m_eventMap.get(event);\r\n\r\n        if (listenMap === undefined) {\r\n            listenMap = new Map<T, Function>();\r\n            this.m_eventMap.set(event, listenMap);\r\n        }\r\n\r\n        let callbackValue: Function | undefined = listenMap.get(caller);\r\n\r\n        if (callbackValue !== undefined) {\r\n            Logger.getInstance().warn(`${caller.constructor.name} 类中，重复注册事件 ${EventDefine[event]}`);\r\n            return;\r\n        }\r\n\r\n        listenMap.set(caller, callback);\r\n    }\r\n\r\n    /**\r\n     * 释放事件\r\n     * @param event {EventDefineType} 事件ID\r\n     * @param caller {T} 注册者的 this 对象\r\n     */\r\n    public off<T>(event: EventDefineType, caller: T): void {\r\n        if (this.m_eventMap === null) {\r\n            Logger.getInstance().warn(`释放 ${EventDefine[event]} 事件失败`);\r\n            return;\r\n        }\r\n\r\n        let listenMap: Map<T, Function> | undefined = this.m_eventMap.get(event);\r\n        if (listenMap === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (listenMap.has(caller)) {\r\n            listenMap.delete(caller);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 发送事件（异步）\r\n     * @param event {EventDefineType} 事件ID\r\n     * @param data {...any[]} 多个任意数据\r\n     */\r\n    public emit(event: EventDefineType, ...data: any[]): void {\r\n        if (this.m_eventMap === null) {\r\n            Logger.getInstance().warn(`发送 ${EventDefine[event]} 事件失败`);\r\n            return;\r\n        }\r\n\r\n        let listenMap: Map<any, Function> | undefined = this.m_eventMap.get(event);\r\n\r\n        if (listenMap === undefined) {\r\n            return;\r\n        }\r\n\r\n        listenMap.forEach((value: Function, key: any) => {\r\n            value.apply(key, data);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 手动清理事件 Map\r\n     */\r\n    private clearEventMap(): void {\r\n        this.m_eventMap.clear();\r\n    }\r\n\r\n    /**\r\n     * 销毁 清理所有注册过的事件（只允许通过 单例静态销毁调用，不允许使用成员方法进行 destroy）\r\n     */\r\n    public destroy(): void {\r\n        this.clearEventMap();\r\n        this.m_eventMap = null;\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-08 00:39:21\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-21 02:42:23\r\n * @FilePath     : \\client242\\assets\\src\\pattern\\Factory.ts\r\n * @Description  : 简单工厂类\r\n */\r\n\r\nexport default class Factory {\r\n\r\n    /**\r\n     * 创建\r\n     * @param cls {T} 类\r\n     * @return {T} 实例化对象\r\n     */\r\n    public static create<T>(cls: (new () => T)): T {\r\n        return new cls();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-13 00:47:24\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-01 02:39:18\r\n * @FilePath     : \\client242\\assets\\src\\config\\GameConfig.ts\r\n * @Description  : 游戏常量配置\r\n */\r\n\r\nimport SceneDefine from \"../define/SceneDefine\";\r\nimport LanguageDefine from \"../define/LanguageDefine\";\r\n\r\n// 默认语言\r\nexport const DEFAULT_LANGUAGE: LanguageDefineType = LanguageDefine.zh_CN;\r\n// 默认音乐音量大小（0-1）\r\nexport const DEFAULT_MUSIC_VOLUME: number = 1;\r\n// 默认音效音量大小（0-1）\r\nexport const DEFAULT_SOUND_VOLUME: number = 1;\r\n// 默认进入场景（BootScene 初始化完成后的默认切换场景）\r\nexport const DEFAULT_LAUNCH_SCENE: SceneDefineType = SceneDefine.AccountScene;","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-11 11:45:00\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 01:34:46\r\n * @FilePath     : \\client243\\assets\\src\\Game.ts\r\n * @Description  : 游戏类\r\n */\r\n\r\nimport LanguageDefine from \"./define/LanguageDefine\";\r\nimport LocalStorageDefine from \"./define/LocalStorageDefine\";\r\nimport * as GameConfig from \"./config/GameConfig\"\r\nimport LanguageUtil from \"./utils/LanguageUtil\";\r\nimport Logger from \"./core/machine/Logger\";\r\nimport EventManager from \"./core/manager/event/EventManager\";\r\nimport { SystemEventDefine } from \"./define/EventDefine\";\r\nimport UIManager from \"./core/manager/ui/UIManager\";\r\nimport NetworkManager from \"./core/manager/network/NetworkManager\";\r\nimport SceneDefine from \"./define/SceneDefine\";\r\nimport * as NetworkDefine from \"./define/NetworkDefine\";\r\nimport Localization from \"./i18n/Localization\";\r\nimport LocalizationDefine from \"./define/LocalizationDefine\";\r\n\r\nexport default class Game {\r\n\r\n    private static s_instance: Game = new Game();\r\n\r\n    // 语言\r\n    private m_language: LanguageDefineType = null;\r\n    // 版本号\r\n    private m_vesrion: string = null;\r\n    // 音乐音量\r\n    private m_musicVolume: number = null;\r\n    // 音效音量\r\n    private m_soundVolume: number = null;\r\n\r\n    public static getInstance(): Game {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new Game();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n        this.register();\r\n        this.initData();\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    private register(): void {\r\n        EventManager.getInstance().on(SystemEventDefine.WS_CONNECTING, this, this.onWebSocketConnecting);\r\n        EventManager.getInstance().on(SystemEventDefine.WS_CONNECTED, this, this.onWebSocketConnected);\r\n        EventManager.getInstance().on(SystemEventDefine.WS_ERROR, this, this.onWebSocketError);\r\n        EventManager.getInstance().on(SystemEventDefine.WS_CLOSING, this, this.onWebSocketClosing);\r\n        EventManager.getInstance().on(SystemEventDefine.WS_CLOSED, this, this.onWebSocketClosed);\r\n        EventManager.getInstance().on(SystemEventDefine.WS_MESSAGE_TIMEOUT, this, this.onWebSocketMessageTimeout);\r\n        EventManager.getInstance().on(SystemEventDefine.WS_MESSAGE_NORMAL, this, this.onWebSocketMessageNormal);\r\n        EventManager.getInstance().on(SystemEventDefine.WS_PONG_TIMEOUT, this, this.onWebSocketPongTimeout);\r\n        EventManager.getInstance().on(SystemEventDefine.HTTP_TIMEOUT, this, this.onHttpTimeout);\r\n        EventManager.getInstance().on(SystemEventDefine.HTTP_ERROR, this, this.onHttpError);\r\n        EventManager.getInstance().on(SystemEventDefine.HTTP_CODE_ERROR, this, this.onHttpCodeError);\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    private initData(): void {\r\n        this.initMusicVolume();\r\n        this.initSoundVolume();\r\n    }\r\n\r\n    /**\r\n     * 网络正在连接回调\r\n     */\r\n    private onWebSocketConnecting(): void {\r\n        UIManager.getInstance().openLoading(`正在连接网络...`);\r\n    }\r\n    /**\r\n     * 网络连接成功回调\r\n     */\r\n    private onWebSocketConnected(): void {\r\n        UIManager.getInstance().closeLoading();\r\n\r\n        // TODO: 登陆逻辑\r\n    }\r\n\r\n    /**\r\n     * 网络连接错误回调\r\n     */\r\n    private onWebSocketError(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 网络正在断开回调\r\n     */\r\n    private onWebSocketClosing(): void {\r\n        UIManager.getInstance().openLockTouch();\r\n    }\r\n\r\n    /**\r\n     * 网络连接断开回调\r\n     * @param closeState {NetworkDefine.CloseState | null} 关闭状态\r\n     */\r\n    private onWebSocketClosed(closeState: NetworkDefine.CloseState | null): void {\r\n        UIManager.getInstance().closeLockTouch();\r\n\r\n        switch (closeState) {\r\n            case NetworkDefine.CloseState.ERROR_CLOSE:\r\n                UIManager.getInstance().closeLoading();\r\n                UIManager.getInstance().openPopups(\"网络连接错误，请返回登录界面重新连接...\", \"提示\", null, () => {\r\n                    UIManager.getInstance().openScene(SceneDefine.AccountScene);\r\n                });\r\n                break;\r\n            default:\r\n                UIManager.getInstance().openLoading(`网络连接断开，正在尝试重连...`);\r\n                NetworkManager.getInstance().reconnect(\"ws://121.89.193.124:30000\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 网络消息恢复正常回调\r\n     */\r\n    private onWebSocketMessageNormal(): void {\r\n        UIManager.getInstance().closeLockTouch();\r\n        UIManager.getInstance().closeLoading();\r\n    }\r\n\r\n    /**\r\n     * 网络心跳超时回调\r\n     */\r\n    private onWebSocketPongTimeout(): void {\r\n\r\n    }\r\n    \r\n    /**\r\n     * Http 请求超时回调\r\n     */\r\n    private onHttpTimeout(): void {\r\n        UIManager.getInstance().openTips(Localization.getInstance().get(LocalizationDefine.HTTP_TIMEOUT));\r\n    }\r\n\r\n    /**\r\n     * Http 请求错误回调\r\n     */\r\n    private onHttpError(): void {\r\n        UIManager.getInstance().openTips(Localization.getInstance().get(LocalizationDefine.HTTP_ERROR));\r\n    }\r\n\r\n    /**\r\n     * Http 请求结果错误回调\r\n     */\r\n    private onHttpCodeError(content: string): void {\r\n        UIManager.getInstance().openTips(content);\r\n    }\r\n\r\n    /**\r\n     * 网络消息超时回调\r\n     */\r\n    private onWebSocketMessageTimeout(): void {\r\n        UIManager.getInstance().openLoading(`网络不稳定，等待连接...`);\r\n    }\r\n\r\n    /**\r\n     * 初始化音乐音量，先读取本地存储是否有音量数据，如果有就使用，没有就使用 GameConfig 默认的 DEFAULT_MUSIC_VOLUME 数据\r\n     */\r\n    private initMusicVolume(): void {\r\n        this.m_musicVolume = GameConfig.DEFAULT_MUSIC_VOLUME;\r\n        let volume: string = cc.sys.localStorage.getItem(LocalStorageDefine.LOCAL_MUSIC_VOLUME);\r\n        if (volume !== null && volume !== undefined && !isNaN(Number(volume)) && Number(volume) >= 0 && Number(volume) <= 1) {\r\n            this.m_musicVolume = Number(volume);\r\n        } else {\r\n            cc.sys.localStorage.setItem(LocalStorageDefine.LOCAL_MUSIC_VOLUME, this.m_musicVolume.toString());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化音效音量，先读取本地存储是否有音量数据，如果有就使用，没有就使用 GameConfig 默认的 DEFAULT_SOUND_VOLUME 数据\r\n     */\r\n    private initSoundVolume(): void {\r\n        this.m_soundVolume = GameConfig.DEFAULT_SOUND_VOLUME;\r\n        let volume: string = cc.sys.localStorage.getItem(LocalStorageDefine.LOCAL_SOUND_VOLUME);\r\n        if (volume !== null && volume !== undefined && !isNaN(Number(volume)) && Number(volume) >= 0 && Number(volume) <= 1) {\r\n            this.m_soundVolume = Number(volume);\r\n        } else {\r\n            cc.sys.localStorage.setItem(LocalStorageDefine.LOCAL_SOUND_VOLUME, this.m_soundVolume.toString());\r\n        }\r\n\r\n    }\r\n\r\n    public get language(): LanguageDefineType {\r\n        return this.m_language;\r\n    }\r\n\r\n    public set language(language: LanguageDefineType) {\r\n        if (language !== null && language !== undefined && LanguageDefine[language] !== undefined) {\r\n            this.m_language = language;\r\n            cc.sys.localStorage.setItem(LocalStorageDefine.LOCAL_LANGUAGE, language);\r\n        } else {\r\n            Logger.getInstance().warn(`language 设置参数错误 ${language}`);\r\n        }\r\n    }\r\n\r\n    public get musicVolume(): number {\r\n        return this.m_musicVolume;\r\n    }\r\n\r\n    public set musicVolume(volume: number) {\r\n        if (volume !== null && volume !== undefined && !isNaN(Number(volume)) && Number(volume) >= 0 && Number(volume) <= 1) {\r\n            this.m_musicVolume = volume;\r\n            cc.sys.localStorage.setItem(LocalStorageDefine.LOCAL_MUSIC_VOLUME, volume.toString());\r\n        } else {\r\n            Logger.getInstance().warn(`musicVolume 设置参数错误 ${volume}`);\r\n        }\r\n    }\r\n\r\n    public get soundVolume(): number {\r\n        return this.m_soundVolume;\r\n    }\r\n\r\n    public set soundVolume(volume: number) {\r\n        if (volume !== null && volume !== undefined && !isNaN(Number(volume)) && Number(volume) >= 0 && Number(volume) <= 1) {\r\n            this.m_soundVolume = volume;\r\n            cc.sys.localStorage.setItem(LocalStorageDefine.LOCAL_SOUND_VOLUME, volume.toString());\r\n        } else {\r\n            Logger.getInstance().warn(`soundVolume 设置参数错误 ${volume}`);\r\n        }\r\n    }\r\n\r\n    public get vesrion(): string {\r\n        return this.m_vesrion;\r\n    }\r\n\r\n    public set version(version: string) {\r\n        if (version !== null && version !== undefined) {\r\n            this.m_vesrion = version;\r\n        } else {\r\n            Logger.getInstance().warn(`version 设置参数不能为空`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    public destroy(): void {\r\n        this.m_language = null;\r\n        this.m_musicVolume = null;\r\n        this.m_soundVolume = null;\r\n        this.m_vesrion = null;\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-08 15:44:28\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-12 02:41:08\r\n * @FilePath     : \\client242\\assets\\src\\core\\Global.ts\r\n * @Description  : 全局类，用于管理器的全局使用\r\n */\r\n\r\nimport EventManager from \"./manager/event/EventManager\";\r\nimport AudioManager from \"./manager/audio/AudioManager\";\r\nimport UIManager from \"./manager/ui/UIManager\";\r\nimport AnimationManager from \"./manager/animation/AnimationManager\";\r\nimport NetworkManager from \"./manager/network/NetworkManager\";\r\nimport UpdateManager from \"./manager/update/UpdateManager\";\r\nimport Loader from \"./machine/Loader\";\r\nimport Logger from \"./machine/Logger\";\r\nimport Game from \"../Game\";\r\nimport Localization from \"../i18n/Localization\";\r\n\r\nexport default class Global {\r\n\r\n    private static s_instance: Global = new Global();\r\n\r\n    public static getInstance(): Global {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new Global();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n        window.G = this;\r\n    }\r\n\r\n    /**\r\n     * 事件访问器\r\n     * @return {EventManager} 事件管理器\r\n     */\r\n    public get EventMgr(): EventManager {\r\n        return EventManager.getInstance();\r\n    }\r\n\r\n    /**\r\n     * 声音访问器\r\n     * @return {AudioManager} 声音管理器\r\n     */\r\n    public get AudioMgr(): AudioManager {\r\n        return AudioManager.getInstance();\r\n    }\r\n\r\n    /**\r\n     * 界面访问器\r\n     * @return {UIManager} 界面管理器\r\n     */\r\n    public get UIMgr(): UIManager {\r\n        return UIManager.getInstance();\r\n    }\r\n\r\n    /**\r\n     * 动画访问器\r\n     * @return {AnimationManager} 动画管理器\r\n     */\r\n    public get AnimMgr(): AnimationManager {\r\n        return AnimationManager.getInstance();\r\n    }\r\n\r\n    /**\r\n     * 网络访问器\r\n     * @return {NetworkManager} 网络管理器\r\n     */\r\n    public get NetMgr(): NetworkManager {\r\n        return NetworkManager.getInstance();\r\n    }\r\n\r\n    /**\r\n     * 更新访问器\r\n     * @return {UpdateManager} 更新管理器\r\n     */\r\n    public get UpdateMgr():UpdateManager {\r\n        return UpdateManager.getInstance();\r\n    }\r\n\r\n    /**\r\n     * 资源加载访问器\r\n     * @return {Loader} 资源加载器\r\n     */\r\n    public get Loader(): Loader {\r\n        return Loader.getInstance();\r\n    }\r\n\r\n    /**\r\n     * 日志访问器\r\n     * @return {Logger} 日志管理器\r\n     */\r\n    public get Logger(): Logger {\r\n        return Logger.getInstance();\r\n    }\r\n\r\n    /**\r\n     * 游戏访问器\r\n     * @return {Game} 游戏类\r\n     */\r\n    public get Game(): Game {\r\n        return Game.getInstance();\r\n    }\r\n\r\n    /**\r\n     * 本地话访问器\r\n     * @return {Localization} 本地话类\r\n     */\r\n    public get Localization(): Localization {\r\n        return Localization.getInstance();\r\n    }\r\n\r\n\r\n    public destroy(): void {\r\n        delete window.G;\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-11 00:47:47\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 01:47:51\r\n * @FilePath     : \\client243\\assets\\src\\ui\\scene\\HomeScene.ts\r\n * @Description  : \r\n */\r\nimport SceneBase from \"../SceneBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HomeScene extends SceneBase {\r\n\r\n    protected onLoad(): void {\r\n        this.register();\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    private register(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注销事件\r\n     */\r\n    private unRegister(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁视图\r\n     */\r\n    protected onDestroy():void {\r\n        this.unRegister();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-16 23:53:59\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-22 16:15:07\r\n * @FilePath     : \\client242\\assets\\src\\define\\HttpDefine.ts\r\n * @Description  : Http 定义\r\n */\r\n\r\nexport enum Method {\r\n    GET = \"GET\",\r\n    POST = \"POST\",\r\n    PUT = \"PUT\",\r\n    HEAD = \"HEAD\",\r\n    PATCH = \"PATCH\",\r\n    DELETE = \"DELETE\",\r\n    OPTIONS = \"OPTIONS\",\r\n    TRACE = \"TRACE\",\r\n    CONNECT = \"CONNECT\",\r\n    LINK = \"LINK\",\r\n    UNLINE = \"UNLINE\",\r\n}\r\n\r\nexport enum ContentType {\r\n    JSON = \"application/json;charset=UTF-8\",\r\n    FROM = \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n}\r\n\r\nexport enum StateType {\r\n    OK = 0,\r\n    ERROR = 1,\r\n    TIMEOUT = 2,\r\n    ABORT = 3,\r\n}\r\n\r\nexport enum ReadyState {\r\n    UNSENT = 0,\r\n    OPENED = 1,\r\n    LOADING = 2,\r\n    HEADERS_RECEIVED = 3,\r\n    DONE = 4,\r\n}\r\n\r\n// 超时时间（单位：秒）\r\nexport const TIMEOUT: number = 10;","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-15 23:51:40\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-12 00:47:04\r\n * @FilePath     : \\client243\\assets\\src\\core\\http\\HttpFetch.ts\r\n * @Description  : HttpFetch 请求对象\r\n */\r\n\r\nimport * as HttpDefine from \"../../define/HttpDefine\";\r\nimport * as HttpInterface from \"../../interface/HttpInterface\";\r\nimport Logger from \"../machine/Logger\";\r\n\r\nexport default class HttpFetch implements HttpInterface.Method {\r\n\r\n    // 取消控制器\r\n    private m_abortController: AbortController = null;\r\n    // 请求信息\r\n    private m_requestInfo: RequestInit = null;\r\n    // 超时定时器\r\n    private m_timer: NodeJS.Timeout = null;\r\n    // 请求链接\r\n    private m_url: string = null;\r\n    // 请求方法\r\n    private m_method: HttpDefine.Method = null;\r\n\r\n    constructor() {\r\n        this.m_abortController = new AbortController();\r\n        this.m_requestInfo = {};\r\n        this.initRequestInfo();\r\n    }\r\n\r\n    /**\r\n     * 初始化请求信息\r\n     * 继承需重写此方法\r\n     */\r\n    protected initRequestInfo(): void {\r\n        this.m_requestInfo.body = null;\r\n        this.m_requestInfo.cache = \"default\"; // https://developer.mozilla.org/zh-CN/docs/Web/API/Request/cache\r\n        this.m_requestInfo.credentials = \"omit\"; // https://developer.mozilla.org/zh-CN/docs/Web/API/Request/credentials\r\n        this.m_requestInfo.headers = {\r\n            \"Content-Type\": HttpDefine.ContentType.JSON\r\n        };\r\n        // this.m_requestInfo.integrity = \"\";\r\n        this.m_requestInfo.keepalive = false;\r\n        this.m_requestInfo.method = HttpDefine.Method.GET;\r\n        this.m_requestInfo.mode = \"cors\";\r\n        this.m_requestInfo.redirect = \"follow\"; // follow (自动重定向), error (如果产生重定向将自动终止并且抛出一个错误), 或者 manual (手动处理重定向). 在Chrome中，Chrome 47 之前的默认值是 follow，从 Chrome 47 开始是 manual。\r\n        this.m_requestInfo.referrer = \"\"; // https://javascript.info/fetch-api\r\n        this.m_requestInfo.referrerPolicy = \"no-referrer-when-downgrade\"; // https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Referrer-Policy\r\n        this.m_requestInfo.signal = this.m_abortController.signal; // https://davidwalsh.name/cancel-fetch （android 无法使用所以注释此功能）\r\n    }\r\n\r\n    /**\r\n     * 请求 fetch\r\n     * @param url {string} 链接 \r\n     * @param method {HttpDefine.Method} 方法\r\n     * @param body {BodyInit} 数据\r\n     * @param responseType {XMLHttpRequestResponseType} 响应后的数据类型 // \r\n     * @return {Promise<HttpInterface.ResponseInfo>}\r\n     */\r\n    public async request(url: string, method: HttpDefine.Method, body?: BodyInit, responseType?: XMLHttpRequestResponseType): Promise<HttpInterface.ResponseInfo> {\r\n        this.m_url = url;\r\n        this.m_method = method;\r\n        if (responseType === null || responseType === undefined) {\r\n            responseType = \"text\";\r\n        }\r\n\r\n        return new Promise((resolve: (data: HttpInterface.ResponseInfo) => void) => {\r\n            Logger.getInstance().log(`${this.m_method} 请求 ${this.m_url}`);\r\n            console.log(body);\r\n            this.m_requestInfo.method = method;\r\n            if (body !== null || body !== undefined) {\r\n                this.m_requestInfo.body = body;\r\n            }\r\n\r\n            let data: HttpInterface.ResponseInfo = {\r\n                state: null,\r\n                body: null\r\n            };\r\n\r\n            this.startTimer();\r\n            fetch(url, this.m_requestInfo).then(async (response: Response) => {\r\n                this.stopTimer();\r\n                Logger.getInstance().log(`${this.m_method} 响应 ${status}`);\r\n                if (response.ok) {\r\n                    data.state = HttpDefine.StateType.OK;\r\n                    data.body = await this.getBodyByResponse(responseType, response);\r\n                    console.log(data.body);\r\n                } else {\r\n                    data.state = HttpDefine.StateType.ERROR;\r\n                    data.body = response.statusText;\r\n                }\r\n                resolve(data);\r\n            }).catch((e) => {\r\n                this.stopTimer();\r\n                if (e.name === \"AbortError\") {\r\n                    data.state = HttpDefine.StateType.TIMEOUT;\r\n                } else {\r\n                    data.state = HttpDefine.StateType.ERROR;\r\n                }\r\n                data.body = e.message;\r\n                resolve(data);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取 Response 中的 body 数据\r\n     * @param response {Response} 收到数据\r\n     * @return {Promise<BodyInit>}\r\n     */\r\n    private async getBodyByResponse(responseType: XMLHttpRequestResponseType, response: Response): Promise<BodyInit> {\r\n        switch (responseType) {\r\n            case \"\":\r\n            case \"text\":\r\n                return await response.text();\r\n            case \"json\":\r\n                return await response.json();\r\n            case \"arraybuffer\":\r\n                return await response.arrayBuffer();\r\n            case \"blob\":\r\n                return await response.blob();\r\n            case \"document\":\r\n                return await response.formData();\r\n            default:\r\n                return await response.text();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 开始定时器\r\n     */\r\n    private startTimer(): void {\r\n        if (this.m_timer === null) {\r\n            this.m_timer = setTimeout(() => {\r\n                Logger.getInstance().warn(`${this.m_method} 超时 ${this.m_url}`);\r\n                this.m_abortController.abort();\r\n                this.m_timer = null;\r\n            }, HttpDefine.TIMEOUT * 1000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止定时器\r\n     */\r\n    private stopTimer(): void {\r\n        if (this.m_timer !== null) {\r\n            clearTimeout(this.m_timer);\r\n            this.m_timer = null;\r\n        }\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-16 23:56:17\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-22 17:12:57\r\n * @FilePath     : \\client242\\assets\\src\\interface\\HttpInterface.ts\r\n * @Description  : Http 接口\r\n */\r\n\r\nimport * as HttpDefine from \"../define/HttpDefine\";\r\n\r\n/**\r\n * 响应数据接口\r\n */\r\nexport interface ResponseInfo {\r\n    // 返回状态\r\n    state: HttpDefine.StateType,\r\n    // 数据\r\n    body: BodyInit,\r\n}\r\n\r\n/**\r\n * Http 请求方法约束\r\n * @param url {string} 链接 \r\n * @param method {HttpDefine.Method} 方法\r\n * @param body {BodyInit} 数据\r\n * @param responseType {XMLHttpRequestResponseType} 响应后的数据类型\r\n * @return {Promise<ResponseInfo>} 调用者使用 .then 或 .catch，可使用链式调用\r\n */\r\nexport interface Method {\r\n    request: (url: string, method: HttpDefine.Method, body?: BodyInit, responseType?: XMLHttpRequestResponseType) => Promise<ResponseInfo>;\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-15 23:51:40\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-22 17:13:06\r\n * @FilePath     : \\client242\\assets\\src\\core\\http\\HttpRequest.ts\r\n * @Description  : Http 对外接口\r\n */\r\n\r\nimport * as HttpInterface from \"../../interface/HttpInterface\";\r\nimport * as HttpDefine from \"../../define/HttpDefine\";\r\nimport HttpXmlRequest from \"./HttpXmlRequest\";\r\n\r\nexport default class HttpRequest {\r\n\r\n    /**\r\n     * 检测 URL 是否合法\r\n     * @param url {string} 请求地址\r\n     * @return {boolean}\r\n     */\r\n    private static checkLegal(url: string): boolean {\r\n        let legal: boolean = true;\r\n        if (url === null || url === undefined || url === \"\") {\r\n            legal = false;\r\n        }\r\n        return legal;\r\n    }\r\n\r\n    /**\r\n     * GET 请求\r\n     * @param url {string} 请求链接\r\n     * @param responseType {XMLHttpRequestResponseType} 响应后的数据类型\r\n     * @param cls {T extends HttpInterface.Method} 执行请求对象\r\n     * @return {Promise<HttpInterface.ResponseInfo>} 调用者使用 .then 做回调参数，可使用链式调用\r\n     */\r\n    public static async get<T extends HttpInterface.Method>(url: string, responseType?: XMLHttpRequestResponseType, cls?: (new () => T)): Promise<HttpInterface.ResponseInfo> {\r\n        if (!this.checkLegal(url)) {\r\n            console.warn(`GET 地址不合法 ${url}`);\r\n            return;\r\n        }\r\n\r\n        let response: HttpInterface.ResponseInfo;\r\n        if (cls === null || cls === undefined) {\r\n            response = await (new HttpXmlRequest()).request(url, HttpDefine.Method.GET);\r\n        } else {\r\n            response = await (new cls()).request(url, HttpDefine.Method.GET);\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * POST 请求\r\n     * @param url {string} 请求链接\r\n     * @param body {string} JSON 打包后的字符串数据\r\n     * @param responseType {XMLHttpRequestResponseType} 响应后的数据类型\r\n     * @param cls {T extends HttpInterface.Method} 执行请求对象\r\n     * @return {Promise<HttpInterface.ResponseInfo>} 调用者使用 .then 或 .catch，可使用链式调用\r\n     */\r\n    public static async post<T extends HttpInterface.Method>(url: string, body?: string, responseType?: XMLHttpRequestResponseType, cls?: (new () => T)): Promise<HttpInterface.ResponseInfo> {\r\n        if (!this.checkLegal(url)) {\r\n            console.warn(`POST 地址不合法 ${url}`);\r\n            return;\r\n        }\r\n\r\n        let response: HttpInterface.ResponseInfo;\r\n        if (cls === null || cls === undefined) {\r\n            response = await (new HttpXmlRequest()).request(url, HttpDefine.Method.POST, body);\r\n        } else {\r\n            response = await (new cls()).request(url, HttpDefine.Method.POST, body);\r\n        }\r\n        return response;\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-21 18:00:36\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-12 00:48:14\r\n * @FilePath     : \\client243\\assets\\src\\core\\http\\HttpXmlRequest.ts\r\n * @Description  : 原生上不支持 fetch 的写法，只有默认使用 XMLHttpRequest\r\n */\r\n\r\nimport EventDefine from \"../../define/EventDefine\";\r\nimport * as HttpDefine from \"../../define/HttpDefine\";\r\nimport * as HttpInterface from \"../../interface/HttpInterface\";\r\nimport Logger from \"../machine/Logger\";\r\nimport EventManager from \"../manager/event/EventManager\";\r\n\r\nexport default class HttpXmlRequest implements HttpInterface.Method {\r\n\r\n    // XMLHttpRequest 对象\r\n    private m_xhr: XMLHttpRequest = null;\r\n    // request 请求结果\r\n    private m_requestResolve: (data: HttpInterface.ResponseInfo) => void = null;\r\n    // 超时定时器\r\n    private m_timer: NodeJS.Timeout = null;\r\n    // 请求链接\r\n    private m_url: string = null;\r\n    // 请求方法\r\n    private m_method: HttpDefine.Method = null;\r\n\r\n    constructor() {\r\n        this.m_xhr = new XMLHttpRequest();\r\n        this.m_xhr.onabort = this.onAbort.bind(this);\r\n        this.m_xhr.onerror = this.onError.bind(this);\r\n        this.m_xhr.onload = this.onLoad.bind(this);\r\n        this.m_xhr.onloadend = this.onLoadend.bind(this);\r\n        this.m_xhr.onloadstart = this.onLoadstart.bind(this);\r\n        this.m_xhr.onprogress = this.onProgress.bind(this);\r\n        this.m_xhr.ontimeout = this.onTimeout.bind(this);\r\n        this.m_xhr.onreadystatechange = this.onReadystatechange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * 请求 XMLHttpRequest\r\n     * @param url {string} 链接 \r\n     * @param method {HttpDefine.Method} 方法\r\n     * @param body {BodyInit} 数据\r\n     * @param responseType {XMLHttpRequestResponseType} 响应后的数据类型\r\n     * @return {Promise<HttpInterface.ResponseInfo>}\r\n     */\r\n    public async request(url: string, method: HttpDefine.Method, body?: BodyInit, responseType?: XMLHttpRequestResponseType): Promise<HttpInterface.ResponseInfo> {\r\n        this.m_url = url;\r\n        this.m_method = method;\r\n        if (body === undefined) {\r\n            body = null;\r\n        }\r\n        if (responseType === null || responseType === undefined) {\r\n            responseType = \"text\";\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            Logger.getInstance().log(`${this.m_method} 请求 ${this.m_url}`);\r\n            console.log(body);\r\n\r\n            this.m_requestResolve = resolve;\r\n\r\n            this.m_xhr.open(method, url);\r\n            this.m_xhr.responseType = responseType;\r\n\r\n            this.startTimer();\r\n            this.m_xhr.send(body);\r\n        }).then((data: HttpInterface.ResponseInfo) => {\r\n            this.stopTimer();\r\n            return data;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 清理 Promise\r\n     */\r\n    private clearPromise(): void {\r\n        this.m_requestResolve = null;\r\n    }\r\n\r\n    /**\r\n     * 开始定时器\r\n     */\r\n    private startTimer(): void {\r\n        if (this.m_timer === null) {\r\n            this.m_timer = setTimeout(() => {\r\n                this.onTimeout();\r\n                this.m_xhr.abort();\r\n                this.m_timer = null;\r\n            }, HttpDefine.TIMEOUT * 1000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止定时器\r\n     */\r\n    private stopTimer(): void {\r\n        if (this.m_timer !== null) {\r\n            this.clearPromise();\r\n            clearTimeout(this.m_timer);\r\n            this.m_timer = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取 Response 中的 body 数据\r\n     * @param response {Response} 收到数据\r\n     * @return {Promise<BodyInit>}\r\n     */\r\n    private async getBodyByResponse(responseType: XMLHttpRequestResponseType, response: Response): Promise<BodyInit> {\r\n        switch (responseType) {\r\n            case \"\":\r\n            case \"text\":\r\n                return await response.text();\r\n            case \"json\":\r\n                return await response.json();\r\n            case \"arraybuffer\":\r\n                return await response.arrayBuffer();\r\n            case \"blob\":\r\n                return await response.blob();\r\n            case \"document\":\r\n                return await response.formData();\r\n            default:\r\n                return await response.text();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消请求回调\r\n     */\r\n    private onAbort(): void {\r\n        this.m_requestResolve && this.m_requestResolve({\r\n            state: HttpDefine.StateType.ABORT,\r\n            body: \"\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 请求错误回调\r\n     */\r\n    private onError(): void {\r\n        Logger.getInstance().log(`${this.m_method} 错误 ${this.m_url}`);\r\n        this.m_requestResolve && this.m_requestResolve({\r\n            state: HttpDefine.StateType.ERROR,\r\n            body: \"\"\r\n        });\r\n        EventManager.getInstance().emit(EventDefine.HTTP_ERROR);\r\n    }\r\n\r\n    /**\r\n     * 加载请求 回调\r\n     * @param event {Event} 事件接收数据\r\n     */\r\n    private onLoad(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 请求完毕 回调\r\n     */\r\n    private onLoadend(): void {\r\n        this.m_requestResolve && this.m_requestResolve({\r\n            state: HttpDefine.StateType.OK,\r\n            body: this.m_xhr.responseText,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 开始请求 回调\r\n     */\r\n    private onLoadstart(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 请求字节数 回调\r\n     */\r\n    private onProgress(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 请求超时 回调\r\n     */\r\n    private onTimeout(): void {\r\n        Logger.getInstance().warn(`${this.m_method} 超时 ${this.m_url}`);\r\n        this.m_requestResolve && this.m_requestResolve({\r\n            state: HttpDefine.StateType.TIMEOUT,\r\n            body: \"\",\r\n        });\r\n        EventManager.getInstance().emit(EventDefine.HTTP_TIMEOUT);\r\n    }\r\n\r\n    /**\r\n     * 请求状态改变 回调\r\n     */\r\n    private onReadystatechange(): void {\r\n        if (this.m_xhr.readyState === HttpDefine.ReadyState.DONE) {\r\n            let responseInfo: HttpInterface.ResponseInfo;\r\n            Logger.getInstance().log(`${this.m_method} 响应 ${this.m_xhr.status}`);\r\n            if (this.m_xhr.status >= 200 && this.m_xhr.status <= 400) {\r\n\r\n                console.log(this.m_xhr.responseText);\r\n                responseInfo = {\r\n                    state: HttpDefine.StateType.OK,\r\n                    body: this.getBodyByResponse(this.m_xhr.responseType, this.m_xhr.response),\r\n                };\r\n                let responseData: WebAPIResponse = JSON.parse(responseInfo.body as string);\r\n                if (responseData.code !== 0) {\r\n                    EventManager.getInstance().emit(EventDefine.HTTP_CODE_ERROR, responseData.msg);\r\n                }\r\n\r\n            } else {\r\n                responseInfo = {\r\n                    state: HttpDefine.StateType.ERROR,\r\n                    body: this.m_xhr.statusText,\r\n                };\r\n                EventManager.getInstance().emit(EventDefine.HTTP_ERROR);\r\n            }\r\n\r\n            this.m_requestResolve && this.m_requestResolve(responseInfo);\r\n        }\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-08 15:44:28\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-27 01:36:11\r\n * @FilePath     : \\client242\\assets\\src\\define\\LanguageDefine.ts\r\n * @Description  : 国家语言定义\r\n */\r\n\r\n// 语言表\r\nenum LanguageDefine {\r\n    // 阿拉伯语（以色列)\r\n    ar_IL = \"ar_IL\",\r\n    // 阿拉伯语（埃及）\r\n    ar_EG = \"ar_EG\",\r\n    // 中文简体\r\n    zh_CN = \"zh_CN\",\r\n    // 中文繁体\r\n    zh_TW = \"zh_TW\",\r\n    // 中文（香港)\r\n    zh_HK = \"zh_HK\",\r\n    // 荷兰语\r\n    nl_NL = \"nl_NL\",\r\n    // 荷兰语（比利时)\r\n    nl_BE = \"nl_BE\",\r\n    // 英语（美国)\r\n    en_US = \"en_US\",\r\n    // 英语（澳大利亚)\r\n    en_AU = \"en_AU\",\r\n    // 英语（加拿大)\r\n    en_CA = \"en_CA\",\r\n    // 英语（印度)\r\n    en_IN = \"en_IN\",\r\n    // 英语（爱尔兰)\r\n    en_IE = \"en_IE\",\r\n    // 英语（新西兰)\r\n    en_NZ = \"en_NZ\",\r\n    // 英语（新加波)\r\n    en_SG = \"en_SG\",\r\n    // 英语（南非)\r\n    en_ZA = \"en_ZA\",\r\n    // 英语（英国)\r\n    en_GB = \"en_GB\",\r\n    // 法语\r\n    fr_FR = \"fr_FR\",\r\n    // 法语（比利时)\r\n    fr_BE = \"fr_BE\",\r\n    // 法语（加拿大)\r\n    fr_CA = \"fr_CA\",\r\n    // 法语（瑞士)\r\n    fr_CH = \"fr_CH\",\r\n    // 德语\r\n    de_DE = \"de_DE\",\r\n    // 德语（列支敦斯登)\r\n    de_LI = \"de_LI\",\r\n    // 德语（奥地利)\r\n    de_AT = \"de_AT\",\r\n    // 德语（瑞士)\r\n    de_CH = \"de_CH\",\r\n    // 意大利语\r\n    it_IT = \"it_IT\",\r\n    // 意大利语（瑞士)\r\n    it_CH = \"it_CH\",\r\n    // 葡萄牙语（巴西）\r\n    pt_BR = \"pt_BR\",\r\n    // 葡萄牙语\r\n    pt_PT = \"pt_PT\",\r\n    // 西班牙语\r\n    es_ES = \"es_ES\",\r\n    // 西班牙语（美国)\r\n    es_US = \"es_US\",\r\n    // 孟加拉语\r\n    bn_BD = \"bn_BD\",\r\n    // 孟加拉语（印度)\r\n    bn_IN = \"bn_IN\",\r\n    // 克罗地亚语\r\n    hr_HR = \"hr_HR\",\r\n    // 捷克语\r\n    cs_CZ = \"cs_CZ\",\r\n    // 丹麦语\r\n    da_DK = \"da_DK\",\r\n    // 希腊语\r\n    el_GR = \"el_GR\",\r\n    // 希伯来语（以色列)\r\n    he_IL = \"he_IL\",\r\n    // 希伯来语（以色列)\r\n    iw_IL = \"iw_IL\",\r\n    // 印度语\r\n    hi_IN = \"hi_IN\",\r\n    // 匈牙利语\r\n    hu_HU = \"hu_HU\",\r\n    // 印度尼西亚语\r\n    in_ID = \"in_ID\",\r\n    // 日语\r\n    ja_JP = \"ja_JP\",\r\n    // 韩语（朝鲜语）\r\n    ko_KR = \"ko_KR\",\r\n    // 马来语\r\n    ms_MY = \"ms_MY\",\r\n    // 波斯语\r\n    fa_IR = \"fa_IR\",\r\n    // 波兰语\r\n    pl_PL = \"pl_PL\",\r\n    // 罗马尼亚语\r\n    ro_RO = \"ro_RO\",\r\n    // 俄罗斯语\r\n    ru_RU = \"ru_RU\",\r\n    // 塞尔维亚语\r\n    sr_RS = \"sr_RS\",\r\n    // 瑞典语\r\n    sv_SE = \"sv_SE\",\r\n    // 泰语\r\n    th_TH = \"th_TH\",\r\n    // 土耳其语\r\n    tr_TR = \"tr_TR\",\r\n    // 乌尔都语\r\n    ur_PK = \"ur_PK\",\r\n    // 越南语\r\n    vi_VN = \"vi_VN\",\r\n    // 加泰隆语（西班牙)\r\n    ca_ES = \"ca_ES\",\r\n    // 拉脱维亚语\r\n    lv_LV = \"lv_LV\",\r\n    // 立陶宛语\r\n    lt_LT = \"lt_LT\",\r\n    // 挪威语\r\n    nb_NO = \"nb_NO\",\r\n    // 斯洛伐克语\r\n    sk_SK = \"sk_SK\",\r\n    // 斯洛文尼亚语 \r\n    sl_SI = \"sl_SI\",\r\n    // 保加利亚语\r\n    bg_BG = \"bg_BG\",\r\n    // 乌克兰语\r\n    uk_UA = \"uk_UA\",\r\n    // 菲律宾语\r\n    tl_PH = \"tl_PH\",\r\n    // 芬兰语\r\n    fi_FI = \"fi_FI\",\r\n    // 南非语\r\n    af_ZA = \"af_ZA\",\r\n    // 罗曼什语（瑞士)\r\n    rm_CH = \"rm_CH\",\r\n    // 缅甸语（民间)\r\n    my_ZG = \"my_ZG\",\r\n    // 缅甸语（官方)\r\n    my_MM = \"my_MM\",\r\n    // 柬埔寨语\r\n    km_KH = \"km_KH\",\r\n    // 阿姆哈拉语（埃塞俄比亚)\r\n    am_ET = \"am_ET\",\r\n    // 白俄罗斯语\r\n    be_BY = \"be_BY\",\r\n    // 爱沙尼亚语\r\n    et_EE = \"et_EE\",\r\n    // 斯瓦希里语（坦桑尼亚)\r\n    sw_TZ = \"sw_TZ\",\r\n    // 祖鲁语（南非)\r\n    zu_ZA = \"zu_ZA\",\r\n    // 阿塞拜疆语\r\n    az_AZ = \"az_AZ\",\r\n    // 亚美尼亚语（亚美尼亚)\r\n    hy_AM = \"hy_AM\",\r\n    // 格鲁吉亚语（格鲁吉亚)\r\n    ka_GE = \"ka_GE\",\r\n    // 老挝语（老挝)\r\n    lo_LA = \"lo_LA\",\r\n    // 蒙古语\r\n    mn_MN = \"mn_MN\",\r\n    // 尼泊尔语\r\n    ne_NP = \"ne_NP\",\r\n    // 哈萨克语\r\n    kk_KZ = \"kk_KZ\",\r\n    // 加利西亚语\r\n    gl_rES = \" gl_rES\",\r\n    // 冰岛语\r\n    is_rIS = \"is_rIS\",\r\n    // 坎纳达语\r\n    kn_rIN = \" kn_rIN\",\r\n    // 吉尔吉斯语 \r\n    ky_rKG = \"ky_rKG\",\r\n    // 马拉亚拉姆语\r\n    ml_rIN = \"ml_rIN\",\r\n    // 马拉提语/马拉地语\r\n    mr_rIN = \"mr_rIN\",\r\n    // 泰米尔语\r\n    ta_rIN = \"ta_rIN\",\r\n    // 马其顿语\r\n    mk_rMK = \"mk_rMK\",\r\n    // 泰卢固语\r\n    te_rIN = \"te_rIN\",\r\n    // 乌兹别克语\r\n    uz_rUZ = \"uz_rUZ\",\r\n    // 巴斯克语\r\n    eu_rES = \"eu_rES\",\r\n    // 僧加罗语（斯里兰卡)\r\n    si_LK = \"si_LK\",\r\n}\r\n\r\nexport default LanguageDefine;","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-08 15:44:28\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-29 21:46:04\r\n * @FilePath     : \\client242\\assets\\src\\define\\LanguagePathDefine.ts\r\n * @Description  : 国家语言定义\r\n */\r\n\r\n// 语言表\r\nenum LanguagePathDefine {\r\n    // // 阿拉伯语（以色列)\r\n    // ar_IL = \"json/language/ar_IL\",\r\n    // // 阿拉伯语（埃及）\r\n    // ar_EG = \"json/language/ar_EG\",\r\n    // 中文简体\r\n    zh_CN = \"json/language/zh_CN\",\r\n    // // 中文繁体\r\n    // zh_TW = \"json/language/zh_TW\",\r\n    // // 中文（香港)\r\n    // zh_HK = \"json/language/zh_HK\",\r\n    // // 荷兰语\r\n    // nl_NL = \"json/language/nl_NL\",\r\n    // // 荷兰语（比利时)\r\n    // nl_BE = \"json/language/nl_BE\",\r\n    // // 英语（美国)\r\n    // en_US = \"json/language/en_US\",\r\n    // // 英语（澳大利亚)\r\n    // en_AU = \"json/language/en_AU\",\r\n    // // 英语（加拿大)\r\n    // en_CA = \"json/language/en_CA\",\r\n    // // 英语（印度)\r\n    // en_IN = \"json/language/en_IN\",\r\n    // // 英语（爱尔兰)\r\n    // en_IE = \"json/language/en_IE\",\r\n    // // 英语（新西兰)\r\n    // en_NZ = \"json/language/en_NZ\",\r\n    // // 英语（新加波)\r\n    // en_SG = \"json/language/en_SG\",\r\n    // // 英语（南非)\r\n    // en_ZA = \"json/language/en_ZA\",\r\n    // // 英语（英国)\r\n    // en_GB = \"json/language/en_GB\",\r\n    // // 法语\r\n    // fr_FR = \"json/language/fr_FR\",\r\n    // // 法语（比利时)\r\n    // fr_BE = \"json/language/fr_BE\",\r\n    // // 法语（加拿大)\r\n    // fr_CA = \"json/language/fr_CA\",\r\n    // // 法语（瑞士)\r\n    // fr_CH = \"json/language/fr_CH\",\r\n    // // 德语\r\n    // de_DE = \"json/language/de_DE\",\r\n    // // 德语（列支敦斯登)\r\n    // de_LI = \"json/language/de_LI\",\r\n    // // 德语（奥地利)\r\n    // de_AT = \"json/language/de_AT\",\r\n    // // 德语（瑞士)\r\n    // de_CH = \"json/language/de_CH\",\r\n    // // 意大利语\r\n    // it_IT = \"json/language/it_IT\",\r\n    // // 意大利语（瑞士)\r\n    // it_CH = \"json/language/it_CH\",\r\n    // // 葡萄牙语（巴西）\r\n    // pt_BR = \"json/language/pt_BR\",\r\n    // // 葡萄牙语\r\n    // pt_PT = \"json/language/pt_PT\",\r\n    // // 西班牙语\r\n    // es_ES = \"json/language/es_ES\",\r\n    // // 西班牙语（美国)\r\n    // es_US = \"json/language/es_US\",\r\n    // // 孟加拉语\r\n    // bn_BD = \"json/language/bn_BD\",\r\n    // // 孟加拉语（印度)\r\n    // bn_IN = \"json/language/bn_IN\",\r\n    // // 克罗地亚语\r\n    // hr_HR = \"json/language/hr_HR\",\r\n    // // 捷克语\r\n    // cs_CZ = \"json/language/cs_CZ\",\r\n    // // 丹麦语\r\n    // da_DK = \"json/language/da_DK\",\r\n    // // 希腊语\r\n    // el_GR = \"json/language/el_GR\",\r\n    // // 希伯来语（以色列)\r\n    // he_IL = \"json/language/he_IL\",\r\n    // // 希伯来语（以色列)\r\n    // iw_IL = \"json/language/iw_IL\",\r\n    // // 印度语\r\n    // hi_IN = \"json/language/hi_IN\",\r\n    // // 匈牙利语\r\n    // hu_HU = \"json/language/hu_HU\",\r\n    // // 印度尼西亚语\r\n    // in_ID = \"json/language/in_ID\",\r\n    // // 日语\r\n    // ja_JP = \"json/language/ja_JP\",\r\n    // // 韩语（朝鲜语）\r\n    // ko_KR = \"json/language/ko_KR\",\r\n    // // 马来语\r\n    // ms_MY = \"json/language/ms_MY\",\r\n    // // 波斯语\r\n    // fa_IR = \"json/language/fa_IR\",\r\n    // // 波兰语\r\n    // pl_PL = \"json/language/pl_PL\",\r\n    // // 罗马尼亚语\r\n    // ro_RO = \"json/language/ro_RO\",\r\n    // // 俄罗斯语\r\n    // ru_RU = \"json/language/ru_RU\",\r\n    // // 塞尔维亚语\r\n    // sr_RS = \"json/language/sr_RS\",\r\n    // // 瑞典语\r\n    // sv_SE = \"json/language/sv_SE\",\r\n    // // 泰语\r\n    // th_TH = \"json/language/th_TH\",\r\n    // // 土耳其语\r\n    // tr_TR = \"json/language/tr_TR\",\r\n    // // 乌尔都语\r\n    // ur_PK = \"json/language/ur_PK\",\r\n    // // 越南语\r\n    // vi_VN = \"json/language/vi_VN\",\r\n    // // 加泰隆语（西班牙)\r\n    // ca_ES = \"json/language/ca_ES\",\r\n    // // 拉脱维亚语\r\n    // lv_LV = \"json/language/lv_LV\",\r\n    // // 立陶宛语\r\n    // lt_LT = \"json/language/lt_LT\",\r\n    // // 挪威语\r\n    // nb_NO = \"json/language/nb_NO\",\r\n    // // 斯洛伐克语\r\n    // sk_SK = \"json/language/sk_SK\",\r\n    // // 斯洛文尼亚语 \r\n    // sl_SI = \"json/language/sl_SI\",\r\n    // // 保加利亚语\r\n    // bg_BG = \"json/language/bg_BG\",\r\n    // // 乌克兰语\r\n    // uk_UA = \"json/language/uk_UA\",\r\n    // // 菲律宾语\r\n    // tl_PH = \"json/language/tl_PH\",\r\n    // // 芬兰语\r\n    // fi_FI = \"json/language/fi_FI\",\r\n    // // 南非语\r\n    // af_ZA = \"json/language/af_ZA\",\r\n    // // 罗曼什语（瑞士)\r\n    // rm_CH = \"json/language/rm_CH\",\r\n    // // 缅甸语（民间)\r\n    // my_ZG = \"json/language/my_ZG\",\r\n    // // 缅甸语（官方)\r\n    // my_MM = \"json/language/my_MM\",\r\n    // // 柬埔寨语\r\n    // km_KH = \"json/language/km_KH\",\r\n    // // 阿姆哈拉语（埃塞俄比亚)\r\n    // am_ET = \"json/language/am_ET\",\r\n    // // 白俄罗斯语\r\n    // be_BY = \"json/language/be_BY\",\r\n    // // 爱沙尼亚语\r\n    // et_EE = \"json/language/et_EE\",\r\n    // // 斯瓦希里语（坦桑尼亚)\r\n    // sw_TZ = \"json/language/sw_TZ\",\r\n    // // 祖鲁语（南非)\r\n    // zu_ZA = \"json/language/zu_ZA\",\r\n    // // 阿塞拜疆语\r\n    // az_AZ = \"json/language/az_AZ\",\r\n    // // 亚美尼亚语（亚美尼亚)\r\n    // hy_AM = \"json/language/hy_AM\",\r\n    // // 格鲁吉亚语（格鲁吉亚)\r\n    // ka_GE = \"json/language/ka_GE\",\r\n    // // 老挝语（老挝)\r\n    // lo_LA = \"json/language/lo_LA\",\r\n    // // 蒙古语\r\n    // mn_MN = \"json/language/mn_MN\",\r\n    // // 尼泊尔语\r\n    // ne_NP = \"json/language/ne_NP\",\r\n    // // 哈萨克语\r\n    // kk_KZ = \"json/language/kk_KZ\",\r\n    // // 加利西亚语\r\n    // gl_rES = \"json/language/gl_rES\",\r\n    // // 冰岛语\r\n    // is_rIS = \"json/language/is_rIS\",\r\n    // // 坎纳达语\r\n    // kn_rIN = \"json/language/kn_rIN\",\r\n    // // 吉尔吉斯语 \r\n    // ky_rKG = \"json/language/ky_rKG\",\r\n    // // 马拉亚拉姆语\r\n    // ml_rIN = \"json/language/ml_rIN\",\r\n    // // 马拉提语/马拉地语\r\n    // mr_rIN = \"json/language/mr_rIN\",\r\n    // // 泰米尔语\r\n    // ta_rIN = \"json/language/ta_rIN\",\r\n    // // 马其顿语\r\n    // mk_rMK = \"json/language/mk_rMK\",\r\n    // // 泰卢固语\r\n    // te_rIN = \"json/language/te_rIN\",\r\n    // // 乌兹别克语\r\n    // uz_rUZ = \"json/language/uz_rUZ\",\r\n    // // 巴斯克语\r\n    // eu_rES = \"json/language/eu_rES\",\r\n    // // 僧加罗语（斯里兰卡)\r\n    // si_LK = \"json/language/si_LK\",\r\n}\r\n\r\nexport default LanguagePathDefine;","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-11 16:19:24\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-27 01:39:46\r\n * @FilePath     : \\client242\\assets\\src\\utils\\LanguageUtil.ts\r\n * @Description  : 语言工具\r\n */\r\n\r\nimport LanguageDefine from \"../define/LanguageDefine\";\r\nimport * as GameConfig from \"../config/GameConfig\";\r\nimport LanguagePathDefine from \"../define/LanguagePathDefine\";\r\n\r\nexport default class LanguageUtil {\r\n\r\n    /**\r\n     * 转换系统语言到自定义语言\r\n     * @param language {string} 获取到的系统语言\r\n     * @return {LanguageDefineType} 自定义语言\r\n     */\r\n    public static transOsLanguage(language: string): LanguageDefineType {\r\n        let value: LanguageDefineType = null;\r\n        switch (language) {\r\n            case cc.sys.LANGUAGE_ENGLISH:\r\n                value = LanguageDefine.en_US;\r\n                break;\r\n            case cc.sys.LANGUAGE_CHINESE:\r\n                value = LanguageDefine.zh_CN;\r\n                break;\r\n            case cc.sys.LANGUAGE_FRENCH:\r\n                value = LanguageDefine.fr_FR;\r\n                break;\r\n            case cc.sys.LANGUAGE_ITALIAN:\r\n                value = LanguageDefine.it_IT;\r\n                break;\r\n            case cc.sys.LANGUAGE_GERMAN:\r\n                value = LanguageDefine.de_DE;\r\n                break;\r\n            case cc.sys.LANGUAGE_SPANISH:\r\n                value = LanguageDefine.es_ES;\r\n                break;\r\n            case cc.sys.LANGUAGE_DUTCH:\r\n                value = LanguageDefine.nl_NL;\r\n                break;\r\n            case cc.sys.LANGUAGE_RUSSIAN:\r\n                value = LanguageDefine.ru_RU;\r\n                break;\r\n            case cc.sys.LANGUAGE_KOREAN:\r\n                value = LanguageDefine.ko_KR;\r\n                break;\r\n            case cc.sys.LANGUAGE_JAPANESE:\r\n                value = LanguageDefine.ja_JP;\r\n                break;\r\n            case cc.sys.LANGUAGE_HUNGARIAN:\r\n                value = LanguageDefine.hu_HU;\r\n                break;\r\n            case cc.sys.LANGUAGE_PORTUGUESE:\r\n                value = LanguageDefine.pt_PT;\r\n                break;\r\n            case cc.sys.LANGUAGE_ARABIC:\r\n                value = LanguageDefine.ar_EG;\r\n                break;\r\n            case cc.sys.LANGUAGE_NORWEGIAN:\r\n                value = LanguageDefine.nb_NO;\r\n                break;\r\n            case cc.sys.LANGUAGE_POLISH:\r\n                value = LanguageDefine.pl_PL;\r\n                break;\r\n            case cc.sys.LANGUAGE_TURKISH:\r\n                value = LanguageDefine.tr_TR;\r\n                break;\r\n            case cc.sys.LANGUAGE_UKRAINIAN:\r\n                value = LanguageDefine.uk_UA;\r\n                break;\r\n            case cc.sys.LANGUAGE_ROMANIAN:\r\n                value = LanguageDefine.ro_RO;\r\n                break;\r\n            case cc.sys.LANGUAGE_BULGARIAN:\r\n                value = LanguageDefine.bg_BG;\r\n                break;\r\n            default:\r\n                value = GameConfig.DEFAULT_LANGUAGE\r\n            break;\r\n        }\r\n\r\n        if(LanguagePathDefine[value] === undefined) {\r\n            value = GameConfig.DEFAULT_LANGUAGE\r\n        }\r\n        return value;\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-13 02:00:18\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-31 03:02:24\r\n * @FilePath     : \\client242\\assets\\src\\core\\machine\\Loader.ts\r\n * @Description  : 资源加载器 维护已加载的资源管理\r\n */\r\n\r\nimport Logger from \"./Logger\";\r\nimport Util from \"../../utils/Util\";\r\n\r\nexport default class Loader {\r\n\r\n    private static s_instance: Loader = null;\r\n\r\n    // 加载后的缓存资源\r\n    private m_cacheAssets: Map<AssetsPathDefineType, cc.Asset>;\r\n\r\n    public static getInstance(): Loader {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new Loader();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n        this.m_cacheAssets = new Map();\r\n    }\r\n\r\n    /**\r\n     * 检测路径是否合法\r\n     * @param path {AssetsPathDefineType} 资源路径\r\n     * @return {boolean}\r\n     */\r\n    private checkLegal(path: AssetsPathDefineType): boolean {\r\n        let isLegal: boolean = true;\r\n        if (path === null || path === undefined) {\r\n            isLegal = false;\r\n        } else {\r\n            if (path instanceof Array && path.length <= 0) {\r\n                isLegal = false;\r\n            }\r\n        }\r\n        return isLegal;\r\n    }\r\n\r\n    /**\r\n     * 添加动态加载资源到表缓存 增加引用计数\r\n     * @param path {AssetsPathDefineType} 资源路径\r\n     * @param value {cc.Asset} 资源节点\r\n     */\r\n    private addAsset(path: AssetsPathDefineType, value: cc.Asset): void {\r\n        let asset: cc.Asset = this.getCache(path);\r\n        if (asset === null || asset === undefined) {\r\n            this.m_cacheAssets.set(path, value);\r\n        }\r\n        value.addRef();\r\n    }\r\n\r\n    /**\r\n     * 删除资源引用计数\r\n     * @param path {AssetsPathDefineType} 资源路径\r\n     */\r\n    private decAsset(path: AssetsPathDefineType): void {\r\n        let asset: cc.Asset = this.getCache(path);\r\n        if (asset !== null && asset !== undefined) {\r\n            asset.decRef();\r\n            if (asset.refCount <= 0) {\r\n                cc.assetManager.releaseAsset(asset);\r\n                this.m_cacheAssets.delete(path);\r\n                asset = null;\r\n            }\r\n        } else {\r\n            Logger.getInstance().warn(`资源引用计数减 1 过程中，找不到加载缓存过的资源 ${path}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取已加载后并缓存过的资源\r\n     * @param path {AssetsPathDefineType} 资源路径\r\n     * @return {cc.Asset | undefined} 如果资源已经加载过返回加载后的 cc.Asset，如果未加载或者已释放返回 undefined\r\n     */\r\n    public getCache(path: AssetsPathDefineType): cc.Asset | undefined {\r\n        return this.m_cacheAssets.get(path);\r\n    }\r\n\r\n    /**\r\n     * 预加载动态资源\r\n     * @param path {AssetsPathDefineType} 资源路径\r\n     * @param onComplete {(items: cc.AssetManager.RequestItem[]) => void} 预加载完成回调\r\n     * @param onProgress {(percent: number) => void} 预加载过程中的百分比（0-100）\r\n     */\r\n    public preload(path: AssetsPathDefineType, onComplete?: (items: cc.AssetManager.RequestItem[]) => void, onProgress?: (percent: number) => void): void {\r\n        if (!this.checkLegal(path)) {\r\n            if (onComplete) {\r\n                onComplete(null);\r\n            }\r\n            return;\r\n        }\r\n\r\n        cc.resources.preload(path, (finish: number, total: number, item: cc.AssetManager.RequestItem) => {\r\n            let percent: number = Util.toFixed(finish / total * 100);\r\n            if (onProgress) {\r\n                onProgress(percent);\r\n            }\r\n        }, (error: Error, items: cc.AssetManager.RequestItem[]) => {\r\n            if (error) {\r\n                Logger.getInstance().warn(`预加载路径失败 ${error.stack}`);\r\n                if (onComplete) {\r\n                    onComplete(null);\r\n                }\r\n            } else {\r\n                if (onComplete) {\r\n                    onComplete(items);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载动态资源（完成后对资源的引用计数加 1）\r\n     * @param path {AssetsPathDefineType} 资源路径\r\n     * @param onComplete {(items: cc.AssetManager.RequestItem[] | null) => void} 加载完成回调，失败 items = null\r\n     * @param onProgress {(percent: number) => void} 加载过程中的百分比（0-100）\r\n     */\r\n    public load(path: AssetsPathDefineType, onComplete?: (items: cc.Asset | cc.Asset[] | null) => void, onProgress?: (percent: number) => void): void {\r\n        if (!this.checkLegal(path)) {\r\n            Logger.getInstance().warn(`加载非法路径 ${path}`);\r\n            if (onComplete) {\r\n                onComplete(null);\r\n            }\r\n            return;\r\n        }\r\n\r\n        cc.resources.load(path, (finish: number, total: number, item: cc.AssetManager.RequestItem) => {\r\n            let percent: number = Util.toFixed(finish / total * 100);\r\n            if (onProgress) {\r\n                onProgress(percent);\r\n            }\r\n        }, (error: Error, assets: cc.Asset | cc.Asset[]) => {\r\n            if (error) {\r\n                Logger.getInstance().warn(`加载路径失败 ${error.stack}`);\r\n                if (onComplete) {\r\n                    onComplete(null);\r\n                }\r\n            } else {\r\n                if (assets instanceof Array) {\r\n                    for (let i: number = 0; i < assets.length; ++i) {\r\n                        this.addAsset(path[i] as AssetsPathDefineType, assets[i]);\r\n                    }\r\n                } else {\r\n                    this.addAsset(path, assets);\r\n                }\r\n\r\n                if (onComplete) {\r\n                    onComplete(assets);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 卸载动态资源（完成后对资源的引用计数减 1）\r\n     * @param path {AssetsPathDefineType} 资源路径\r\n     * @param onComplete {Function} 卸载完成回调\r\n     * @param onProgress {(percent: number) => void} 卸载过程中的百分比（0-100）\r\n     */\r\n    public unload(path: AssetsPathDefineType, onComplete?: Function, onProgress?: (percent: number) => void): void {\r\n        if (!this.checkLegal(path)) {\r\n            Logger.getInstance().warn(`卸载非法路径 ${path}`);\r\n            if (onComplete) {\r\n                onComplete();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (path instanceof Array) {\r\n            let releaseSize: number = path.length;\r\n            for (let i: number = 0; i < path.length; ++i) {\r\n                if (onProgress) {\r\n                    onProgress(Util.toFixed((i + 1) / releaseSize * 100));\r\n                }\r\n                this.decAsset(path[i]);\r\n            }\r\n        } else {\r\n            this.decAsset(path);\r\n        }\r\n\r\n        if (onComplete) {\r\n            onComplete();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 释放已动态加载过的资源（把资源引用计数归 0，达到释放资源目的）\r\n     * @param path {AssetsPathDefineType} 资源路径\r\n     * @param onComplete {(items: cc.AssetManager.RequestItem[]) => void} 释放完成回调\r\n     * @param onProgress {(percent: number) => void} 释放过程中的百分比（0-100）\r\n     */\r\n    public release(path: AssetsPathDefineType, onComplete?: Function, onProgress?: (percent: number) => void): void {\r\n        if (!this.checkLegal(path)) {\r\n            Logger.getInstance().warn(`释放非法路径 ${path}`);\r\n            if (onComplete) {\r\n                onComplete();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (path instanceof Array) {\r\n            let releaseSize: number = path.length;\r\n            for (let i: number = 0; i < releaseSize; ++i) {\r\n                if (onProgress) {\r\n                    onProgress(Util.toFixed((i + 1) / releaseSize * 100));\r\n                }\r\n                let asset: cc.Asset = this.getCache(path[i]);\r\n                if (asset !== null && asset !== undefined) {\r\n                    for (let j: number = 0; j < asset.refCount; ++j) {\r\n                        this.decAsset(path[i]);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            let asset: cc.Asset = this.getCache(path);\r\n            if (asset !== null && asset !== undefined) {\r\n                for (let i: number = 0; i < asset.refCount; ++i) {\r\n                    this.decAsset(path);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (onComplete) {\r\n            onComplete();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 释放所有已动态加载过的资源（把所有加载过的资源引用计数归 0）\r\n     * @param onComplete {Function} 释放所有完成回调\r\n     * @param onProgress {(percent: number) => void} 释放所有过程中的百分比（0-100）\r\n     */\r\n    public releaseAll(onComplete?: Function, onProgress?: (percent: number) => void): void {\r\n        let size: number = this.m_cacheAssets.size;\r\n        if (this.m_cacheAssets && size > 0) {\r\n            let index: number = 0;\r\n            this.m_cacheAssets.forEach((value: cc.Asset, key: AssetsPathDefineType, map: Map<AssetsPathDefineType, cc.Asset>) => {\r\n                if (onProgress) {\r\n                    onProgress(Util.toFixed((++index / size) * 100));\r\n                }\r\n                for (let i: number = 0; i < value.refCount; ++i) {\r\n                    this.decAsset(key);\r\n                }\r\n            });\r\n            this.m_cacheAssets.clear();\r\n        }\r\n\r\n        if (onComplete) {\r\n            onComplete();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁 清理已经加载缓存的资源并置空（只允许通过 单例静态销毁调用，不允许使用成员方法进行 destroy）\r\n     */\r\n    public destroy(): void {\r\n        this.releaseAll(() => {\r\n            this.m_cacheAssets = null;\r\n        });\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-25 11:51:17\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-07 14:41:50\r\n * @FilePath     : \\client242\\assets\\src\\ui\\view\\animation\\LoadingClip.ts\r\n * @Description  : 加载转动的剪辑动画\r\n */\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n// 层级交换\r\nenum Order {\r\n    // 小球在下面\r\n    BELOW = 100,\r\n    // 小球在上面\r\n    ABOVE = 101\r\n}\r\n\r\n@ccclass\r\nexport default class LoadingClip extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    private imgBall1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    private imgBall2: cc.Sprite = null;\r\n\r\n    // 动画组件\r\n    private m_anim: cc.Animation = null;\r\n\r\n    protected onLoad(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n        this.m_anim = this.node.getComponent(cc.Animation)\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n        this.imgBall1.node.zIndex = Order.BELOW;\r\n        this.imgBall2.node.zIndex = Order.ABOVE;\r\n    }\r\n\r\n    /**\r\n     * 交叉动画时层级交换 回调函数\r\n     */\r\n    private onSwitchOrder(): void {\r\n        this.imgBall1.node.zIndex = this.imgBall1.node.zIndex === Order.BELOW ? Order.ABOVE : Order.BELOW;\r\n        this.imgBall2.node.zIndex = this.imgBall2.node.zIndex === Order.BELOW ? Order.ABOVE : Order.BELOW;\r\n    }\r\n\r\n    /**\r\n     * 播放加载动画\r\n     */\r\n    public play(): void {\r\n        if (this.m_anim) {\r\n            this.m_anim.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止加载动画\r\n     */\r\n    public stop(): void {\r\n        if (this.m_anim) {\r\n            this.m_anim.stop();\r\n        }\r\n        this.initView();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-23 17:27:05\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 22:08:41\r\n * @FilePath     : \\client242\\assets\\src\\ui\\view\\persist\\LoadingView.ts\r\n * @Description  : 加载等待节点\r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\nimport LoadingClip from \"../animation/LoadingClip\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingView extends ViewBase implements PersistInterface {\r\n\r\n    @property({ type: cc.Label, tooltip: \"文字提示\" })\r\n    private labTips: cc.Label = null;\r\n\r\n    @property({ type: cc.Node, tooltip: \"转动动画\" })\r\n    private loadingClip: cc.Node = null;\r\n\r\n    private m_loadingScript: LoadingClip = null;\r\n\r\n    protected onLoad(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n        this.hide();\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.initView();\r\n        this.m_loadingScript.stop();\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n        this.m_loadingScript = this.loadingClip.getComponent(\"LoadingClip\");\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n        this.labTips.string = \"\";\r\n    }\r\n\r\n    /**\r\n     * 打开加载界面\r\n     * @param content {string} 提示内容\r\n     */\r\n    public open(content?: string): void {\r\n        this.m_loadingScript.play();\r\n        if (content) {\r\n            this.labTips.string = content;\r\n        }\r\n        this.show();\r\n    }\r\n\r\n    /**\r\n     * 关闭加载界面\r\n     */\r\n    public close(): void {\r\n        this.hide();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-11 14:51:08\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-06 02:18:37\r\n * @FilePath     : \\client243\\assets\\src\\define\\LocalStorageDefine.ts\r\n * @Description  : 本地存储定义\r\n */\r\n\r\n// 本地存储定义\r\nenum LocalStorageDefine {\r\n    // 热更新搜索路径\r\n    LOCAL_UPDATE_SEARCH_PATH = \"LOCAL_UPDATE_SEARCH_PATH\",\r\n    // 音乐音量\r\n    LOCAL_MUSIC_VOLUME = \"LOCAL_MUSIC_VOLUME\",\r\n    // 音效音量\r\n    LOCAL_SOUND_VOLUME = \"LOCAL_SOUND_VOLUME\",\r\n    // 语言\r\n    LOCAL_LANGUAGE = \"LOCAL_LANGUAGE\",\r\n\r\n    // 登录令牌\r\n    LOCAL_LOGIN_TOKEN = \"LOCAL_LOGIN_TOKEN\",\r\n}\r\n\r\nexport default LocalStorageDefine;","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-13 15:56:35\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 01:43:28\r\n * @FilePath     : \\client243\\assets\\src\\define\\LocalizationDefine.ts\r\n * @Description  : 本地存储键值定义\r\n */\r\n\r\nenum LocalizationDefine {\r\n    INITIALIZATION_FAILED = \"INITIALIZATION_FAILED\",\r\n    LOAD_ASSETS = \"LOAD_ASSETS\",\r\n    CHECK_VERSION_INFO = \"CHECK_VERSION_INFO\",\r\n    UPDATING_ASSETS = \"UPDATING_ASSETS\",\r\n    NEED_UPDATE = \"NEED_UPDATE\",\r\n    DOWNING_APP = \"DOWNING_APP\",\r\n    NEED_ASSETS_UPDATE = \"NEED_ASSETS_UPDATE\",\r\n    NEED_STORE_UPDATE = \"NEED_STORE_UPDATE\",\r\n    UPDATE_FINISH = \"UPDATE_FINISH\",\r\n    ERROR = \"ERROR\",\r\n    UPDATE_FAILED_RETRY = \"UPDATE_FAILED_RETRY\",\r\n    NETWORK_ERROR_RETRY = \"NETWORK_ERROR_RETRY\",\r\n    TRANFFIC_DOWNLOAD = \"TRANFFIC_DOWNLOAD\",\r\n    UPDATE = \"UPDATE\",\r\n    STORE_DOWNLOAD = \"SOTRE_DOWNLOAD\",\r\n    CANCEL = \"CANCEL\",\r\n    CONFIRM = \"CONFIRM\",\r\n    HTTP_TIMEOUT = \"HTTP_TIMEOUT\",\r\n    HTTP_ERROR = \"HTTP_ERROR\",\r\n    REGISTER_OK = \"REGISTER_OK\",\r\n}\r\n\r\nexport default LocalizationDefine;","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-12 02:30:18\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-29 23:14:12\r\n * @FilePath     : \\client242\\assets\\src\\i18n\\Localization.ts\r\n * @Description  : \r\n */\r\n\r\nexport default class Localization {\r\n\r\n    private static s_instance: Localization = null;\r\n\r\n    // 本地话数据\r\n    private m_data: LocalizationDefineType = null;\r\n\r\n    public static getInstance(): Localization {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new Localization();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public set data(value: LocalizationDefineType) {\r\n        this.m_data = value;\r\n    }\r\n\r\n    /**\r\n     * 获取本地话内容\r\n     * @param key {LocalizationDefineType} 本地话 key\r\n     * @param format {string[]} 格式化参数\r\n     * @return {string} 本地话 value\r\n     */\r\n    public get(key: LocalizationDefineType, ...format: string[] | number[]): string {\r\n        let value: string = \"\";\r\n        if (this.m_data && this.m_data[key] !== undefined) {\r\n            value = this.m_data[key];\r\n        }\r\n\r\n        if (format.length > 0) {\r\n            value = value.replace(/{(\\d+)}/g, (_: string, matchIndex: string) => {\r\n                let index: number = Number(matchIndex);\r\n                let content: string | number | undefined = format[index];\r\n                let result: string = \"\";\r\n                if (content === undefined) {\r\n                    result = \"?\"\r\n                } else {\r\n                    if (typeof (content) === \"number\") {\r\n                        result = content.toString();\r\n                    } else {\r\n                        result = content;\r\n                    }\r\n                }\r\n                return result;\r\n            });\r\n        }\r\n        \r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    public destroy(): void {\r\n        this.m_data = null;\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-24 09:33:11\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-01 01:26:02\r\n * @FilePath     : \\client242\\assets\\src\\ui\\view\\persist\\LockTouchView.ts\r\n * @Description  : 屏幕短暂时间不能点击屏幕内容，当打开此节点时，最顶层遮挡了所有触摸事件\r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LockTouchNode extends ViewBase implements PersistInterface {\r\n\r\n    protected onLoad(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n        this.hide();\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 打开禁止点击界面\r\n     */\r\n    public open(): void {\r\n        this.show();\r\n    }\r\n\r\n    /**\r\n     * 关闭禁止点击界面\r\n     */\r\n    public close(): void {\r\n        this.hide();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-10 17:52:46\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-31 20:23:34\r\n * @FilePath     : \\client242\\assets\\src\\core\\machine\\Logger.ts\r\n * @Description  : 日志记录器，封装 JS 基础 console.log、console.warn、console.error 扩展写入日志数据\r\n */\r\n\r\nimport * as SystemConfig from \"../../config/SystemConfig\";\r\n\r\nexport default class Logger {\r\n\r\n    private static s_instance: Logger = null;\r\n    \r\n    public static getInstance(): Logger {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new Logger();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 打印正常信息\r\n     * @param data {...any[]} 多个任意数据\r\n     */\r\n    public log(...data: any[]): void {\r\n        if(!SystemConfig.DEBUG_LOG) {\r\n            return;\r\n        }\r\n\r\n        data.unshift(\"信息：\");\r\n        console.log.apply(console, data);\r\n    }\r\n\r\n    /**\r\n     * 打印警告信息\r\n     * @param data {...any[]} 多个任意数据\r\n     */\r\n    public warn(...data: any[]): void {\r\n        if(!SystemConfig.DEBUG_LOG) {\r\n            return;\r\n        }\r\n\r\n        data.unshift(\"警告：\");\r\n        console.warn.apply(console, data);\r\n    }\r\n\r\n    /**\r\n     * 打印错误信息\r\n     * @param data {...any[]} 多个任意数据\r\n     */\r\n    public error(...data: any[]): void {\r\n        if(!SystemConfig.DEBUG_LOG) {\r\n            return;\r\n        }\r\n        \r\n        data.unshift(\"错误：\");\r\n        console.error.apply(console, data);\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    public destroy(): void {\r\n\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-11 00:47:47\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 18:44:51\r\n * @FilePath     : \\client243\\assets\\src\\ui\\view\\account\\LoginView.ts\r\n * @Description  : \r\n */\r\n\r\nimport HttpRequest from \"../../../core/http/HttpRequest\";\r\nimport * as WebAPIConfig from \"../../../config/WebAPIConfig\";\r\nimport ViewBase from \"../../ViewBase\";\r\nimport * as HttpInterface from \"../../../interface/HttpInterface\";\r\nimport * as HttpDefine from \"../../../define/HttpDefine\";\r\nimport * as ServerConfig from \"../../../config/ServerConfig\";\r\nimport ViewDefine from \"../../../define/ViewDefine\";\r\nimport SceneDefine from \"../../../define/SceneDefine\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoginView extends ViewBase {\r\n\r\n    @property({ type: cc.EditBox, tooltip: \"用户名\" })\r\n    private edbUsername: cc.EditBox = null;\r\n\r\n    @property({ type: cc.EditBox, tooltip: \"密码\" })\r\n    private edbPassword: cc.EditBox = null;\r\n\r\n    protected onLoad(): void {\r\n        this.register();\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    private register(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注销事件\r\n     */\r\n    private unRegister(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 设置信息\r\n     * @param username {string} 用户名\r\n     * @param password {string} 密码\r\n     */\r\n    public setInfo(username?:string, password?:string):void {\r\n        this.edbUsername.string = username;\r\n        this.edbPassword.string = password;\r\n    }\r\n    /**\r\n     * 点击登录\r\n     */\r\n    private onClickLogin(): void {\r\n        let requestData: WebAPILoginRequest = {\r\n            username: this.edbUsername.string,\r\n            password: this.edbPassword.string,\r\n        }\r\n        let url:string = ServerConfig.WEB_API_SERVER + WebAPIConfig.WEB_API_LOGIN_REQUEST;\r\n        HttpRequest.post(url, JSON.stringify(requestData)).then((responseInfo: HttpInterface.ResponseInfo)=>{\r\n            if(responseInfo.state === HttpDefine.StateType.OK) {\r\n                let responseData: WebAPIResponse = JSON.parse(responseInfo.body as string);\r\n                if(responseData.code === 0) {\r\n                    G.UIMgr.openScene(SceneDefine.HomeScene);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 点击注册\r\n     */\r\n    private onClickRegister():void {\r\n        G.UIMgr.openView(ViewDefine.RegisterView, null, ()=>{\r\n            this.hide();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 销毁视图\r\n     */\r\n    protected onDestroy(): void {\r\n        this.unRegister();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-28 11:38:37\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 22:08:13\r\n * @FilePath     : \\client242\\assets\\src\\ui\\view\\common\\MaintainView.ts\r\n * @Description  : 通用用户交互弹窗\r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupsView extends ViewBase {\r\n\r\n    protected onLoad(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    private initData(): void {\r\n\r\n    }\r\n\r\n    private initView(): void {\r\n\r\n    }\r\n\r\n    private onClickBulletin(): void {\r\n        console.log(\"显示更新公告\");\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-28 22:24:11\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-08 01:51:08\r\n * @FilePath     : \\client242\\assets\\src\\interface\\ManagerInterface.ts\r\n * @Description  : 管理器接口\r\n */\r\n\r\ninterface ManagerInterface {\r\n    destroy(): void;\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-08 18:12:33\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-08-25 23:55:17\r\n * @FilePath     : \\client242\\assets\\src\\core\\manager\\Manager.ts\r\n * @Description  : 管理器父类\r\n */\r\n\r\nexport default class Manager {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-01 18:31:57\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-12 02:42:19\r\n * @FilePath     : \\client242\\assets\\src\\define\\NetworkDefine.ts\r\n * @Description  : 网络相关定义\r\n */\r\n\r\n/**\r\n * 网络断开状态\r\n */\r\nexport enum CloseState {\r\n    // 报错后断开\r\n    ERROR_CLOSE = 0,\r\n    // 客户端断开\r\n    CLIENT_CLOSE = 1,\r\n    // 服务器断开\r\n    SERVER_CLOSE = 2,\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-30 23:42:29\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-30 01:58:49\r\n * @FilePath     : \\client242\\assets\\src\\interface\\NetworkInterface.ts\r\n * @Description  : 网络相关接口\r\n */\r\n\r\n/**\r\n * Websocket 网络数据结构\r\n */\r\ninterface NetworkDataInterface {\r\n    // 序列号\r\n    serial: number,\r\n    // 协议名\r\n    msgName: string,\r\n    // 协议数据\r\n    msgData: any,\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-28 22:24:11\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-31 22:39:32\r\n * @FilePath     : \\client242\\assets\\src\\core\\manager\\network\\NetworkManager.ts\r\n * @Description  : 网络管理器，用于游戏中长连接发送和接收网络数据\r\n */\r\n\r\nimport Manager from \"../Manager\";\r\nimport EventDefine, { SystemEventDefine } from \"../../../define/EventDefine\";\r\nimport Logger from \"../../machine/Logger\";\r\nimport NetworkMessageTimer from \"./NetworkMessageTimer\";\r\nimport CodeUtil from \"../../../utils/CodeUtil\";\r\nimport EventManager from \"../event/EventManager\";\r\nimport * as NetworkDefine from \"../../../define/NetworkDefine\";\r\nimport Proto from \"../../../protobuf/Proto\";\r\n\r\n// 序列号 占用字节大小（4 byte）\r\nconst SERIAL_LENGTH_BYTE_SIZE: number = 1;\r\n// 协议名长度 占用字节大小（1 byte）\r\nconst MSG_NAME_LENGTH_BYTE_SIZE: number = 1;\r\n// 消息响应超时时间（单位：秒）\r\nconst MSG_RESPONSE_TIMEOUT_SEC: number = 1;\r\n// 消息超时等待时间（单位：秒）\r\nconst MSG_WAIT_TIMEOUT_SEC: number = 3;\r\n// 心跳超时时间（单位：秒）\r\nconst PONG_TIMEOUT_SEC: number = 10;\r\n// 起始消息发送序列号\r\nconst START_SERIAL: number = 1;\r\n\r\nexport default class NetworkManager extends Manager implements ManagerInterface {\r\n\r\n    private static s_instance: NetworkManager = null;\r\n\r\n    // WebSocket\r\n    private m_websocket: WebSocket = null;\r\n    // 网络注册结构 Mao<消息名, Map<注册脚本对象, 回调方法>>\r\n    private m_messageCallbackMap: Map<string, Map<any, Function>> = null;\r\n    // 消息响应超时定时器\r\n    private m_networkMessageTimer: NetworkMessageTimer = null;\r\n    // 心跳超时定时器 ID\r\n    private m_pongTimerId: NodeJS.Timeout = null;\r\n    // 消息超时等待定时器 ID\r\n    private m_messageWaitTimerId: NodeJS.Timeout = null;\r\n    // 发送累加序列号（服务器主动推送序列号为 0）\r\n    private m_serial: number = 0;\r\n    // 请求数据列表 Map<序列号, 网络数据结构>\r\n    private m_requestDataMap: Map<number, NetworkDataInterface> = null;\r\n    // 网络消息超时 Map<序列号, 网络数据结构>\r\n    private m_messageTimeoutMap: Map<number, NetworkDataInterface> = null;\r\n    // 网络断开状态\r\n    private m_closeState: NetworkDefine.CloseState = null;\r\n\r\n    public static getInstance(): NetworkManager {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new NetworkManager();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.m_messageCallbackMap = new Map();\r\n        this.m_networkMessageTimer = new NetworkMessageTimer(this.onMessageTimeout.bind(this));\r\n        this.m_requestDataMap = new Map();\r\n        this.m_messageTimeoutMap = new Map();\r\n    }\r\n\r\n    private initClose(): void {\r\n        this.m_websocket = null;\r\n        this.m_closeState = null;\r\n        this.m_serial = 0;\r\n        this.stopAllTimer();\r\n        this.m_requestDataMap.clear();\r\n        this.m_messageTimeoutMap.clear();\r\n    }\r\n\r\n    /**\r\n     * 注册网络\r\n     * @param msgClass {any} 消息类\r\n     * @param caller {any} 注册者的 this 对象\r\n     * @param callback {Function} 监听回调函数\r\n     */\r\n    public on(msgClass: any, caller: any, callback: Function): void {\r\n        let msgName: string = msgClass.name;\r\n        if (this.m_messageCallbackMap === null) {\r\n            Logger.getInstance().warn(`注册 ${msgName} 网络失败`);\r\n            return;\r\n        }\r\n\r\n        let listenMap: Map<any, Function> | undefined = this.m_messageCallbackMap.get(msgName);\r\n\r\n        if (listenMap === undefined) {\r\n            listenMap = new Map<any, Function>();\r\n            this.m_messageCallbackMap.set(msgName, listenMap);\r\n        }\r\n\r\n        let value: Function | undefined = listenMap.get(caller);\r\n\r\n        if (value !== undefined && value !== null) {\r\n            Logger.getInstance().warn(`${caller.name} 类中，重复注册网络 ${msgName}`);\r\n            return;\r\n        }\r\n\r\n        listenMap.set(caller, callback);\r\n    }\r\n\r\n    /**\r\n     * 释放网络\r\n     * @param msgClass {any} 消息类\r\n     * @param caller {any} 注册者的 this 对象\r\n     */\r\n    public off(msgClass: any, caller: any): void {\r\n        let msgName: string = msgClass.name;\r\n        if (this.m_messageCallbackMap === null) {\r\n            Logger.getInstance().warn(`释放 ${msgName} 网络失败`);\r\n            return;\r\n        }\r\n\r\n        let listenMap: Map<any, Function> | undefined = this.m_messageCallbackMap.get(msgName);\r\n        if (listenMap === undefined || listenMap === null) {\r\n            return;\r\n        }\r\n\r\n        if (listenMap.has(caller)) {\r\n            listenMap.delete(caller);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 消息超时回调\r\n     * @param serial {number} 超时序列号\r\n     */\r\n    private onMessageTimeout(serial: number): void {\r\n        if (this.m_messageTimeoutMap.size <= 0) {\r\n            EventManager.getInstance().emit(EventDefine.WS_MESSAGE_TIMEOUT);\r\n            this.startMessageWait();\r\n        }\r\n\r\n        let networkData: NetworkDataInterface | undefined = this.m_requestDataMap.get(serial);\r\n\r\n        if (networkData === undefined) {\r\n            Logger.getInstance().error(`网络超时数据不存在，由于没有任何地方可以删除数据，所以在这里必须有数据`);\r\n            return;\r\n        }\r\n\r\n        this.m_messageTimeoutMap.set(serial, networkData);\r\n\r\n        Logger.getInstance().warn(`消息超时，序列号：[${networkData.serial}] 消息名：[${networkData.msgName}]`);\r\n    }\r\n\r\n    /**\r\n     * 心跳超时回调\r\n     */\r\n    private onPongTimeout(): void {\r\n        EventManager.getInstance().emit(EventDefine.WS_PONG_TIMEOUT);\r\n        this.stopAllTimer();\r\n        this.close();\r\n\r\n        Logger.getInstance().warn(`心跳超时，消息名：[${Proto.Pong.name}]`);\r\n\r\n    }\r\n\r\n    /**\r\n     * 连接成功回调\r\n     */\r\n    private onOpen(ev: Event): void {\r\n        EventManager.getInstance().emit(EventDefine.WS_CONNECTED);\r\n\r\n        Logger.getInstance().log(`网络连接成功`);\r\n    }\r\n\r\n    /**\r\n     * 接收数据回调\r\n     */\r\n    private onMessage(ev: MessageEvent): void {\r\n        let responseData: NetworkDataInterface = this.decodeData(ev.data);\r\n\r\n        // 处理弱网超时消息\r\n        if (this.m_messageTimeoutMap.has(responseData.serial)) {\r\n            this.m_messageTimeoutMap.delete(responseData.serial);\r\n            if (this.m_messageTimeoutMap.size <= 0) {\r\n                this.stopMessageWait();\r\n                EventManager.getInstance().emit(EventDefine.WS_MESSAGE_NORMAL);\r\n            }\r\n        }\r\n\r\n        Logger.getInstance().log(`消息接收，序列号：[${responseData.serial}] 消息名：[${responseData.msgName}] 数据：[${JSON.stringify(responseData.msgData)}]`);\r\n\r\n        if (responseData.msgName === Proto.Pong.name) {\r\n            this.resetPong();\r\n            return;\r\n        }\r\n\r\n        this.m_networkMessageTimer.off(responseData.serial);\r\n        if (this.m_requestDataMap.has(responseData.serial)) {\r\n            this.m_requestDataMap.delete(responseData.serial);\r\n        }\r\n\r\n        let listenMap: Map<any, Function> | undefined = this.m_messageCallbackMap.get(responseData.msgName);\r\n        if (listenMap !== undefined) {\r\n            listenMap.forEach((callback: Function, caller: any) => {\r\n                callback.call(caller, responseData.msgData);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 连接断开回调\r\n     */\r\n    private onClose(ev: CloseEvent): void {\r\n        if (this.m_closeState === null) {\r\n            this.m_closeState = NetworkDefine.CloseState.SERVER_CLOSE;\r\n        }\r\n\r\n        let closeState: NetworkDefine.CloseState = this.m_closeState;\r\n        this.initClose();\r\n        EventManager.getInstance().emit(EventDefine.WS_CLOSED, closeState);\r\n        Logger.getInstance().log(`网络断开连接`);\r\n    }\r\n\r\n    /**\r\n     * 连接错误回调\r\n     */\r\n    private onError(ev: Event): void {\r\n        this.m_closeState = NetworkDefine.CloseState.ERROR_CLOSE;\r\n        EventManager.getInstance().emit(EventDefine.WS_ERROR);\r\n        Logger.getInstance().log(`网络连接错误`);\r\n    }\r\n\r\n    /**\r\n     * 建立连接\r\n     * @param protocol {WebSocketProtocol} 协议\r\n     * @param host {string} 地址\r\n     * @param port {number} 端口\r\n     * \r\n     * @param wsURL {string} 连接地址\r\n     */\r\n    public connect(protocol: WebSocketProtocol, host: string, port: number): void;\r\n    public connect(wsURL: string): void;\r\n    public connect(...args: any[]): void {\r\n        if (this.m_websocket !== null && this.m_websocket.readyState !== WebSocket.CLOSED) {\r\n            Logger.getInstance().warn(\"网络连接未关闭，请不要重复建立连接\");\r\n            return;\r\n        }\r\n\r\n        EventManager.getInstance().emit(SystemEventDefine.WS_CONNECTING);\r\n\r\n        let url: string = null;\r\n        if (args.length === 3 && typeof (args[0]) === \"string\" && typeof (args[1]) === \"string\" && typeof (args[2]) === \"number\") {\r\n            url = `${args[0]}://${args[1]}:${args[2]}`;\r\n        } else if (args.length === 1 && typeof (args[0]) === \"string\") {\r\n            url = args[0];\r\n        } else {\r\n            Logger.getInstance().warn(\"连接网络参数错误，请检查传入参数\");\r\n            return;\r\n        }\r\n\r\n        this.m_websocket = new WebSocket(url);\r\n        this.m_websocket.binaryType = \"arraybuffer\";\r\n        this.m_websocket.onopen = this.onOpen.bind(this);\r\n        this.m_websocket.onmessage = this.onMessage.bind(this);\r\n        this.m_websocket.onclose = this.onClose.bind(this);\r\n        this.m_websocket.onerror = this.onError.bind(this);\r\n\r\n        Logger.getInstance().log(`正在连接网络：${url}`);\r\n    }\r\n\r\n    /**\r\n     * 重新链接\r\n     * @param protocol {WebSocketProtocol} 协议\r\n     * @param host {string} 地址\r\n     * @param port {number} 端口\r\n     * \r\n     * @param wsURL {string} 连接地址\r\n     */\r\n    public reconnect(protocol: WebSocketProtocol, host: string, port: number): void;\r\n    public reconnect(wsURL: string): void;\r\n    public reconnect(...args: any[]): void {\r\n        this.connect.apply(this, args);\r\n    }\r\n\r\n    /**\r\n     * 发送数据\r\n     * @param msgClass {any} 协议类\r\n     * @param msgData {any} 协议数据\r\n     */\r\n    public send(msgClass: any, msgData: any): void {\r\n        if (this.m_websocket === null || this.m_websocket === undefined) {\r\n            Logger.getInstance().warn(`网络发送失败，未建立网络连接`);\r\n            return;\r\n        }\r\n\r\n        if (this.m_websocket.readyState !== WebSocket.OPEN) {\r\n            Logger.getInstance().warn(`网络状态异常：${this.m_websocket.readyState}`);\r\n            return;\r\n        }\r\n\r\n        this.addSerial();\r\n        let requestData: ArrayBuffer = this.encodeData(msgClass, msgData);\r\n        this.m_websocket.send(requestData);\r\n        // 留作输出请求数据的二进制流\r\n        // Logger.getInstance().log(new Uint8Array(requestData.slice(0, requestData.byteLength)));\r\n\r\n        try {\r\n            Logger.getInstance().log(`消息发送，序列号：[${this.m_serial}] 消息名：[${msgClass.name}] 数据：[${JSON.stringify(msgData)}]`);\r\n        } catch (e) {\r\n            Logger.getInstance().log(`消息发送，序列号：[${this.m_serial}] 消息名：[${msgClass.name}] 数据：[${msgData}]`);\r\n        }\r\n\r\n        this.m_networkMessageTimer.on(this.m_serial, MSG_RESPONSE_TIMEOUT_SEC);\r\n        this.m_requestDataMap.set(this.m_serial, {\r\n            serial: this.m_serial,\r\n            msgName: msgClass.name,\r\n            msgData: msgData,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 关闭连接\r\n     */\r\n    public close(): void {\r\n        if (this.m_websocket.readyState === WebSocket.CLOSING || this.m_websocket.readyState === WebSocket.CLOSED) {\r\n            Logger.getInstance().warn(`网络正在关闭，请不要重复关闭网络`);\r\n            return;\r\n        }\r\n\r\n        this.m_closeState = NetworkDefine.CloseState.CLIENT_CLOSE;\r\n\r\n        EventManager.getInstance().emit(SystemEventDefine.WS_CLOSING);\r\n        Logger.getInstance().log(\"网络正在断开\");\r\n        this.m_websocket.close();\r\n    }\r\n\r\n    /**\r\n     * 获取网络断开状态\r\n     * @return {NetworkDefine.CloseState | null}\r\n     */\r\n    public getCloseState(): NetworkDefine.CloseState | null {\r\n        return this.m_closeState;\r\n    }\r\n\r\n    /**\r\n     * 累加序列号\r\n     */\r\n    private addSerial():void {\r\n        if(++this.m_serial > 255) {\r\n            this.m_serial = START_SERIAL;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启动消息超时等待（提升弱网体验）\r\n     */\r\n    private startMessageWait(): void {\r\n        if (this.m_messageWaitTimerId === null || this.m_messageWaitTimerId === undefined) {\r\n            this.m_messageWaitTimerId = setTimeout(() => {\r\n                this.stopAllTimer();\r\n                this.close();\r\n                this.m_messageWaitTimerId = null;\r\n            }, MSG_WAIT_TIMEOUT_SEC * 1000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止消息超时等待\r\n     */\r\n    private stopMessageWait(): void {\r\n        if (this.m_messageWaitTimerId !== null && this.m_messageWaitTimerId !== undefined) {\r\n            clearTimeout(this.m_messageWaitTimerId);\r\n            this.m_messageWaitTimerId = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启动心跳\r\n     */\r\n    public startPong(): void {\r\n        if (this.m_pongTimerId === null || this.m_pongTimerId === undefined) {\r\n            this.m_pongTimerId = setTimeout(() => {\r\n                this.onPongTimeout();\r\n                this.m_pongTimerId = null;\r\n            }, PONG_TIMEOUT_SEC * 1000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置心跳\r\n     */\r\n    private resetPong(): void {\r\n        this.stopPong();\r\n        this.startPong();\r\n    }\r\n\r\n    /**\r\n     * 停止心跳\r\n     */\r\n    private stopPong(): void {\r\n        if (this.m_pongTimerId !== null && this.m_pongTimerId !== undefined) {\r\n            clearTimeout(this.m_pongTimerId);\r\n            this.m_pongTimerId = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止所有定时器\r\n     */\r\n    private stopAllTimer(): void {\r\n        this.stopPong();\r\n        this.m_networkMessageTimer.offAll();\r\n        this.stopMessageWait();\r\n    }\r\n\r\n    /**\r\n     * 数据编码\r\n     * @param msgClass {any} 协议类\r\n     * @param msgData {any} 协议数据\r\n     * @return {ArrayBuffer} 编码后的二进制流数据\r\n     */\r\n    private encodeData(msgClass: any, msgData?: any): ArrayBuffer {\r\n        let msgName: string = msgClass.name;\r\n        let msgNameUint8Array: Uint8Array = CodeUtil.stringToUint8Array(msgName);\r\n        let msgNameLen: number = msgNameUint8Array.byteLength;\r\n        let instance: any = msgClass.create(msgData);\r\n        let msgDataBuffer: Uint8Array = msgClass.encode(instance).finish();\r\n        let msgDataLen: number = msgDataBuffer.byteLength;\r\n\r\n        let bodyLen: number = SERIAL_LENGTH_BYTE_SIZE + MSG_NAME_LENGTH_BYTE_SIZE + msgNameLen + msgDataLen;\r\n        let dataLen: number = bodyLen;\r\n        let dataBuffer: ArrayBuffer = new ArrayBuffer(dataLen);\r\n        let dataView: DataView = new DataView(dataBuffer);\r\n\r\n        let bufferOffset: number = 0;\r\n\r\n        // 序列号\r\n        dataView.setUint8(bufferOffset, this.m_serial);\r\n        bufferOffset += SERIAL_LENGTH_BYTE_SIZE;\r\n        // 协议名长度\r\n        dataView.setUint8(bufferOffset, msgNameLen);\r\n        bufferOffset += MSG_NAME_LENGTH_BYTE_SIZE;\r\n        // 协议名\r\n        let nameBuffer: Uint8Array = new Uint8Array(dataBuffer, bufferOffset, msgNameLen);\r\n        nameBuffer.set(CodeUtil.stringToUint8Array(msgName), 0);\r\n        bufferOffset += msgNameLen;\r\n        // 协议数据\r\n        (new Uint8Array(dataBuffer, bufferOffset, msgDataLen)).set(msgDataBuffer, 0);\r\n        bufferOffset += msgDataLen;\r\n\r\n        return dataBuffer;\r\n    }\r\n\r\n    /**\r\n     * 数据解码\r\n     * @param bufffer {ArrayBuffer} 字节流\r\n     * @return {NetworkDataInterface} 网络数据结构\r\n     */\r\n    private decodeData(bufffer: ArrayBuffer): NetworkDataInterface {\r\n        let dataView: DataView = new DataView(bufffer);\r\n\r\n        let bufferOffset: number = 0;\r\n\r\n        // 序列号\r\n        let serial: number = dataView.getUint8(bufferOffset);\r\n        bufferOffset += SERIAL_LENGTH_BYTE_SIZE;\r\n        // 协议名长度\r\n        let msgNameLen: number = dataView.getUint8(bufferOffset);\r\n        bufferOffset += MSG_NAME_LENGTH_BYTE_SIZE;\r\n        // 协议名字\r\n        let msgName: string = CodeUtil.uint8ArrayToString(new Uint8Array(bufffer.slice(bufferOffset, bufferOffset += msgNameLen)));\r\n        // 协议数据\r\n        let msgDataLen: number = bufffer.byteLength - bufferOffset;\r\n        let msgData: any = Proto[msgName].decode(new Uint8Array(bufffer.slice(bufferOffset, bufferOffset += msgDataLen)));\r\n\r\n        let data: NetworkDataInterface = {\r\n            serial: serial,\r\n            msgName: msgName,\r\n            msgData: msgData,\r\n        };\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    public destroy(): void {\r\n\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-11 01:00:54\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-15 17:31:58\r\n * @FilePath     : \\client242\\assets\\src\\core\\manager\\network\\NetworkMessageTimer.ts\r\n * @Description  : 网络超时器\r\n */\r\n\r\nexport default class NetworkMessageTimer {\r\n\r\n    // 定时器 Map<序列号, 定时器ID>\r\n    private m_timerMap: Map<number, NodeJS.Timeout> = null;\r\n    // 消息超时回调\r\n    private m_messageTimeoutCallback: (serial: number) => void = null;\r\n\r\n    constructor(timeoutCallback: (serial: number) => void) {\r\n        this.m_timerMap = new Map();\r\n        this.m_messageTimeoutCallback = timeoutCallback;\r\n    }\r\n\r\n    /**\r\n     * 发送消息后 开启超时监听\r\n     * @param serial {number} 序列号\r\n     * @param timeout {number} 超时时间（单位：秒）\r\n     */\r\n    public on(serial: number, timeout: number): void {\r\n        let timerId: NodeJS.Timeout | undefined = this.m_timerMap.get(serial);\r\n        if (timerId === undefined || timerId === null) {\r\n            timerId = setTimeout(() => {\r\n                this.m_messageTimeoutCallback(serial);\r\n                this.m_timerMap.delete(serial);\r\n            }, timeout * 1000);\r\n            this.m_timerMap.set(serial, timerId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 收到了发送的消息响应 关闭超时监听\r\n     * @param serial {number} 序列号\r\n     */\r\n    public off(serial: number): void {\r\n        let timerId: NodeJS.Timeout | undefined = this.m_timerMap.get(serial);\r\n        if (timerId !== undefined && timerId !== null) {\r\n            clearTimeout(timerId);\r\n            this.m_timerMap.delete(serial);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭所有超时监听\r\n     */\r\n    public offAll(): void {\r\n        this.m_timerMap.forEach((timerId: NodeJS.Timeout, serial: number) => {\r\n            clearTimeout(timerId);\r\n            this.m_timerMap.delete(serial);\r\n        });\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-27 01:11:40\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-27 01:12:24\r\n * @FilePath     : \\client242\\assets\\src\\utils\\NetworkUtil.ts\r\n * @Description  : 网络工具\r\n */\r\n\r\nexport default class NetworkUtil {\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-11-01 02:11:39\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 23:12:31\r\n * @FilePath     : \\client242\\assets\\src\\ui\\view\\common\\NumKeyboardView.ts\r\n * @Description  : 数字键盘\r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NumKeyboardView extends ViewBase {\r\n\r\n    protected onLoad(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化界面\r\n     */\r\n    private initView(): void {\r\n\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-04 00:02:08\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-08 01:50:57\r\n * @FilePath     : \\client242\\assets\\src\\interface\\PersistInterface.ts\r\n * @Description  : 常驻节点约束接口\r\n */\r\n\r\ninterface PersistInterface {\r\n    open(...args: any[]): void;\r\n    close(): void;\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-08 00:48:37\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-08 01:41:46\r\n * @FilePath     : \\client242\\assets\\src\\interface\\PoolInterface.ts\r\n * @Description  : 对象池约束接口\r\n */\r\n\r\ninterface PoolInterface<T> {\r\n    readonly size: number;\r\n    get(): T;\r\n    put(obj: T): void;\r\n    clear(): void;\r\n}","\r\n/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-08 00:11:52\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-21 02:42:14\r\n * @FilePath     : \\client242\\assets\\src\\pattern\\Pool.ts\r\n * @Description  : 对象池\r\n */\r\n\r\nimport Logger from \"../core/machine/Logger\";\r\nimport Factory from \"./Factory\";\r\n\r\nexport default class Pool<T extends PoolItemInterface> implements PoolInterface<T> {\r\n\r\n    // 最大对象数量\r\n    private m_maxSize: number = null;\r\n    // 池子\r\n    private m_poolList: T[] = null;\r\n\r\n    constructor(private type: (new () => T), maxSize: number = 1024) {\r\n        if (maxSize <= 0) {\r\n            Logger.getInstance().error(\"对象池初始化最大容纳数量需大于0\");\r\n            return;\r\n        }\r\n        this.m_maxSize = maxSize;\r\n        this.m_poolList = [];\r\n\r\n        for (let i: number = 0; i < maxSize; ++i) {\r\n            this.m_poolList.push(Factory.create(this.type));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取当前对象数量\r\n     */\r\n    public get size(): number {\r\n        return this.m_poolList.length;\r\n    }\r\n\r\n    /**\r\n     * 获取一个空闲对象\r\n     * @return {T} 空闲对象\r\n     */\r\n    public get(): T {\r\n        let isNew: boolean = false;\r\n        if (this.m_poolList.length <= 0) {\r\n            this.m_poolList.push(Factory.create(this.type));\r\n            isNew = true;\r\n        }\r\n        let item: T = this.m_poolList.shift();\r\n\r\n        if (!isNew) {\r\n            item.clear();\r\n        }\r\n        return item;\r\n    }\r\n\r\n    /**\r\n     * 放入空闲并初始化后的对象\r\n     * @param obj {T} 空闲对象\r\n     */\r\n    public put(obj: T): void {\r\n        if (obj !== null && obj !== undefined && obj instanceof this.type) {\r\n            this.m_poolList.push(obj);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理池内多余对象\r\n     */\r\n    public clear(): void {\r\n        if (this.m_poolList.length > this.m_maxSize) {\r\n            let clearList: T[] = this.m_poolList.slice(this.m_maxSize, this.m_poolList.length);\r\n            for (let i: number = 0; i < clearList.length; ++i) {\r\n                let item: T = clearList[i];\r\n                item.release();\r\n            }\r\n            clearList.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理池内所有对象\r\n     */\r\n    public clearAll(): void {\r\n        for (let i: number = 0; i < this.m_poolList.length; ++i) {\r\n            let item: T = this.m_poolList[i];\r\n            item.release();\r\n        }\r\n        this.m_poolList.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    public destroy(): void {\r\n        this.clearAll();\r\n        this.m_maxSize = null;\r\n        this.m_poolList = null;\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-28 11:38:37\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-10 10:48:53\r\n * @FilePath     : \\client242\\assets\\src\\ui\\view\\common\\PopupsView.ts\r\n * @Description  : 通用用户交互弹窗\r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupsView extends ViewBase {\r\n\r\n    @property({ type: cc.Label, tooltip: \"标题\" })\r\n    labTitle: cc.Label = null;\r\n\r\n    @property({ type: cc.Label, tooltip: \"内容\" })\r\n    labContent: cc.Label = null;\r\n\r\n    @property({ type: cc.Button, tooltip: \"取消\" })\r\n    btnCancel: cc.Label = null;\r\n\r\n    @property({ type: cc.Button, tooltip: \"确定\" })\r\n    btnConfirm: cc.Label = null;\r\n\r\n    // 确定回调\r\n    private m_confirmCallback: Function = null;\r\n    // 取消回调\r\n    private m_cancelCallback: Function = null;\r\n\r\n    protected onLoad(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    private initData(): void {\r\n        this.m_confirmCallback = null;\r\n        this.m_cancelCallback = null;\r\n    }\r\n\r\n    private initView(): void {\r\n        this.labTitle.string = \"\";\r\n        this.labContent.string = \"\";\r\n        this.btnCancel.node.active = false;\r\n        this.btnConfirm.node.active = false;\r\n    }\r\n\r\n    /**\r\n     * 设置内容 弹窗高度动态随着文字长度改变\r\n     * @param data {string} 内容\r\n     */\r\n    private setContent(data: string): void {\r\n        this.labContent.string = data;\r\n    }\r\n\r\n    /**\r\n     * 设置标题\r\n     * @param data \r\n     */\r\n    private setTitle(data?: string): void {\r\n        let title: string = \"\";\r\n        if (typeof (data) === \"string\") {\r\n            title = data;\r\n        }\r\n        this.labTitle.string = title;\r\n    }\r\n\r\n    private setButton(confirmCallback: Function, cancelCallback?: Function): void {\r\n        if (confirmCallback) {\r\n            this.m_confirmCallback = confirmCallback;\r\n        }\r\n        if (cancelCallback) {\r\n            this.m_cancelCallback = cancelCallback;\r\n            // 分布排列（取消在左，确定在右）\r\n            let parent: cc.Node = this.btnCancel.node.parent;\r\n            let intervalWidth: number = (parent.width - this.btnCancel.node.width - this.btnConfirm.node.width) / 3;\r\n            let cancelX: number = ((parent.width / 2) * -1) + intervalWidth + (this.btnCancel.node.width / 2);\r\n            let confirmX: number = cancelX + (this.btnCancel.node.width / 2) + intervalWidth + (this.btnConfirm.node.width / 2);\r\n            this.btnCancel.node.x = cancelX;\r\n            this.btnConfirm.node.x = confirmX;\r\n            this.btnCancel.node.active = true;\r\n        } else {\r\n            // 确定按钮居中\r\n            this.btnConfirm.node.x = 0;\r\n            this.btnCancel.node.active = false;\r\n        }\r\n\r\n        this.btnConfirm.node.active = true;\r\n    }\r\n\r\n    /**\r\n     * 打开弹窗界面\r\n     * @param content {string} 内容\r\n     * @param title {string} 标题\r\n     * @param confirmCallback {Function} 确定回调方法\r\n     * @param cancelCallback {Function} 取消回调方法\r\n     */\r\n    public open(content: string, title?: string, confirmCallback?: Function, cancelCallback?: Function): void {\r\n        this.setContent(content);\r\n        this.setTitle(title);\r\n        this.setButton(confirmCallback, cancelCallback);\r\n    }\r\n\r\n    /**\r\n     * 绑定点击取消按钮回调\r\n     */\r\n    private onClickCancel(): void {\r\n        if (this.m_cancelCallback) {\r\n            this.m_cancelCallback();\r\n        }\r\n        this.node.destroy();\r\n    }\r\n\r\n    /**\r\n     * 绑定点击确定按钮回调\r\n     */\r\n    private onClickConfirm(): void {\r\n        if (this.m_confirmCallback) {\r\n            this.m_confirmCallback();\r\n        }\r\n        this.node.destroy();\r\n    }\r\n    \r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-24 09:33:11\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 22:08:52\r\n * @FilePath     : \\client242\\assets\\src\\ui\\view\\persist\\ProgressView.ts\r\n * @Description  : 加载进度节点\r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n// 最小百分比\r\nconst MIN_PERCENT = 0;\r\n// 最大百分比\r\nconst MAX_PERCENT = 100;\r\n// 最小步长 低于这个值就不进行平滑动画\r\nconst MIN_SMOOTH_STEP = 1;\r\n// 总步长 百分比 a 到百分比 b，平滑过渡需要多少步\r\nconst TOTAL_CMOOTH_STEP = 10;\r\n\r\n@ccclass\r\nexport default class ProgressNode extends ViewBase implements PersistInterface {\r\n\r\n    @property({ type: cc.ProgressBar, tooltip: \"加载资源进度条\" })\r\n    private pobLoad: cc.ProgressBar = null;\r\n\r\n    // 当前进度百分比\r\n    private m_currPercent: number = null;\r\n    // 实时进度百分比\r\n    private m_realTimePercent: number = null;\r\n\r\n    protected onLoad(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n        this.hide();\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (this.m_realTimePercent > this.m_currPercent) {\r\n            let differencePercent: number = this.m_realTimePercent - this.m_currPercent;\r\n            let intervalStep = 0;\r\n            if (differencePercent < MIN_SMOOTH_STEP) {\r\n                intervalStep = differencePercent;\r\n            } else if (this.m_realTimePercent >= MAX_PERCENT) {\r\n                intervalStep = differencePercent;\r\n            } else {\r\n                intervalStep = differencePercent / TOTAL_CMOOTH_STEP;\r\n            }\r\n            this.m_currPercent += intervalStep;\r\n            this.pobLoad.progress = this.m_currPercent / MAX_PERCENT;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n        this.m_currPercent = 0;\r\n        this.m_realTimePercent = 0;\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n        this.pobLoad.progress = this.m_currPercent;\r\n    }\r\n\r\n    /**\r\n     * 打开进度条界面（只做单纯显示，百分比增加需要调用 setPercent 方法）\r\n     */\r\n    public open(): void {\r\n        this.show();\r\n    }\r\n\r\n    /**\r\n     * 关闭进度条界面（不销毁）\r\n     */\r\n    public close(): void {\r\n        this.hide();\r\n    }\r\n\r\n    /**\r\n     * 显示时 回调\r\n     */\r\n    protected onEnable():void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    /**\r\n     * 传入进度条的百分比（要求：0-100之间的任意小数和整数）\r\n     * @param value {number} 百分比值\r\n     */\r\n    public setPercent(value: number): void {\r\n        if (value < MIN_PERCENT) {\r\n            value = MIN_PERCENT;\r\n        } else if (value > MAX_PERCENT) {\r\n            value = MAX_PERCENT;\r\n        }\r\n        this.m_realTimePercent = value;\r\n    }\r\n\r\n}","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\r\n\"use strict\";\r\n\r\nvar $protobuf = require(\"protobuf\");\r\n\r\n// Common aliases\r\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\r\n\r\n// Exported root namespace\r\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\r\n\r\nexport const C2SSignIn = $root.C2SSignIn = (() => {\r\n\r\n    /**\r\n     * Properties of a C2SSignIn.\r\n     * @exports IC2SSignIn\r\n     * @interface IC2SSignIn\r\n     * @property {string|null} [user] C2SSignIn user\r\n     * @property {string|null} [password] C2SSignIn password\r\n     */\r\n\r\n    /**\r\n     * Constructs a new C2SSignIn.\r\n     * @exports C2SSignIn\r\n     * @classdesc Represents a C2SSignIn.\r\n     * @implements IC2SSignIn\r\n     * @constructor\r\n     * @param {IC2SSignIn=} [p] Properties to set\r\n     */\r\n    function C2SSignIn(p) {\r\n        if (p)\r\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\r\n                if (p[ks[i]] != null)\r\n                    this[ks[i]] = p[ks[i]];\r\n    }\r\n\r\n    /**\r\n     * C2SSignIn user.\r\n     * @member {string} user\r\n     * @memberof C2SSignIn\r\n     * @instance\r\n     */\r\n    C2SSignIn.prototype.user = \"\";\r\n\r\n    /**\r\n     * C2SSignIn password.\r\n     * @member {string} password\r\n     * @memberof C2SSignIn\r\n     * @instance\r\n     */\r\n    C2SSignIn.prototype.password = \"\";\r\n\r\n    /**\r\n     * Creates a new C2SSignIn instance using the specified properties.\r\n     * @function create\r\n     * @memberof C2SSignIn\r\n     * @static\r\n     * @param {IC2SSignIn=} [properties] Properties to set\r\n     * @returns {C2SSignIn} C2SSignIn instance\r\n     */\r\n    C2SSignIn.create = function create(properties) {\r\n        return new C2SSignIn(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified C2SSignIn message. Does not implicitly {@link C2SSignIn.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof C2SSignIn\r\n     * @static\r\n     * @param {IC2SSignIn} m C2SSignIn message or plain object to encode\r\n     * @param {$protobuf.Writer} [w] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    C2SSignIn.encode = function encode(m, w) {\r\n        if (!w)\r\n            w = $Writer.create();\r\n        if (m.user != null && Object.hasOwnProperty.call(m, \"user\"))\r\n            w.uint32(10).string(m.user);\r\n        if (m.password != null && Object.hasOwnProperty.call(m, \"password\"))\r\n            w.uint32(18).string(m.password);\r\n        return w;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified C2SSignIn message, length delimited. Does not implicitly {@link C2SSignIn.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof C2SSignIn\r\n     * @static\r\n     * @param {IC2SSignIn} message C2SSignIn message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    C2SSignIn.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes a C2SSignIn message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof C2SSignIn\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\r\n     * @param {number} [l] Message length if known beforehand\r\n     * @returns {C2SSignIn} C2SSignIn\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    C2SSignIn.decode = function decode(r, l) {\r\n        if (!(r instanceof $Reader))\r\n            r = $Reader.create(r);\r\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.C2SSignIn();\r\n        while (r.pos < c) {\r\n            var t = r.uint32();\r\n            switch (t >>> 3) {\r\n            case 1:\r\n                m.user = r.string();\r\n                break;\r\n            case 2:\r\n                m.password = r.string();\r\n                break;\r\n            default:\r\n                r.skipType(t & 7);\r\n                break;\r\n            }\r\n        }\r\n        return m;\r\n    };\r\n\r\n    /**\r\n     * Decodes a C2SSignIn message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof C2SSignIn\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {C2SSignIn} C2SSignIn\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    C2SSignIn.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies a C2SSignIn message.\r\n     * @function verify\r\n     * @memberof C2SSignIn\r\n     * @static\r\n     * @param {Object.<string,*>} m Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    C2SSignIn.verify = function verify(m) {\r\n        if (typeof m !== \"object\" || m === null)\r\n            return \"object expected\";\r\n        if (m.user != null && m.hasOwnProperty(\"user\")) {\r\n            if (!$util.isString(m.user))\r\n                return \"user: string expected\";\r\n        }\r\n        if (m.password != null && m.hasOwnProperty(\"password\")) {\r\n            if (!$util.isString(m.password))\r\n                return \"password: string expected\";\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return C2SSignIn;\r\n})();\r\n\r\nexport const Ping = $root.Ping = (() => {\r\n\r\n    /**\r\n     * Properties of a Ping.\r\n     * @exports IPing\r\n     * @interface IPing\r\n     */\r\n\r\n    /**\r\n     * Constructs a new Ping.\r\n     * @exports Ping\r\n     * @classdesc Represents a Ping.\r\n     * @implements IPing\r\n     * @constructor\r\n     * @param {IPing=} [p] Properties to set\r\n     */\r\n    function Ping(p) {\r\n        if (p)\r\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\r\n                if (p[ks[i]] != null)\r\n                    this[ks[i]] = p[ks[i]];\r\n    }\r\n\r\n    /**\r\n     * Creates a new Ping instance using the specified properties.\r\n     * @function create\r\n     * @memberof Ping\r\n     * @static\r\n     * @param {IPing=} [properties] Properties to set\r\n     * @returns {Ping} Ping instance\r\n     */\r\n    Ping.create = function create(properties) {\r\n        return new Ping(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified Ping message. Does not implicitly {@link Ping.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof Ping\r\n     * @static\r\n     * @param {IPing} m Ping message or plain object to encode\r\n     * @param {$protobuf.Writer} [w] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    Ping.encode = function encode(m, w) {\r\n        if (!w)\r\n            w = $Writer.create();\r\n        return w;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified Ping message, length delimited. Does not implicitly {@link Ping.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof Ping\r\n     * @static\r\n     * @param {IPing} message Ping message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    Ping.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes a Ping message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof Ping\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\r\n     * @param {number} [l] Message length if known beforehand\r\n     * @returns {Ping} Ping\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    Ping.decode = function decode(r, l) {\r\n        if (!(r instanceof $Reader))\r\n            r = $Reader.create(r);\r\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Ping();\r\n        while (r.pos < c) {\r\n            var t = r.uint32();\r\n            switch (t >>> 3) {\r\n            default:\r\n                r.skipType(t & 7);\r\n                break;\r\n            }\r\n        }\r\n        return m;\r\n    };\r\n\r\n    /**\r\n     * Decodes a Ping message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof Ping\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {Ping} Ping\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    Ping.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies a Ping message.\r\n     * @function verify\r\n     * @memberof Ping\r\n     * @static\r\n     * @param {Object.<string,*>} m Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    Ping.verify = function verify(m) {\r\n        if (typeof m !== \"object\" || m === null)\r\n            return \"object expected\";\r\n        return null;\r\n    };\r\n\r\n    return Ping;\r\n})();\r\n\r\nexport const Pong = $root.Pong = (() => {\r\n\r\n    /**\r\n     * Properties of a Pong.\r\n     * @exports IPong\r\n     * @interface IPong\r\n     */\r\n\r\n    /**\r\n     * Constructs a new Pong.\r\n     * @exports Pong\r\n     * @classdesc Represents a Pong.\r\n     * @implements IPong\r\n     * @constructor\r\n     * @param {IPong=} [p] Properties to set\r\n     */\r\n    function Pong(p) {\r\n        if (p)\r\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\r\n                if (p[ks[i]] != null)\r\n                    this[ks[i]] = p[ks[i]];\r\n    }\r\n\r\n    /**\r\n     * Creates a new Pong instance using the specified properties.\r\n     * @function create\r\n     * @memberof Pong\r\n     * @static\r\n     * @param {IPong=} [properties] Properties to set\r\n     * @returns {Pong} Pong instance\r\n     */\r\n    Pong.create = function create(properties) {\r\n        return new Pong(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified Pong message. Does not implicitly {@link Pong.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof Pong\r\n     * @static\r\n     * @param {IPong} m Pong message or plain object to encode\r\n     * @param {$protobuf.Writer} [w] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    Pong.encode = function encode(m, w) {\r\n        if (!w)\r\n            w = $Writer.create();\r\n        return w;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified Pong message, length delimited. Does not implicitly {@link Pong.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof Pong\r\n     * @static\r\n     * @param {IPong} message Pong message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    Pong.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes a Pong message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof Pong\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\r\n     * @param {number} [l] Message length if known beforehand\r\n     * @returns {Pong} Pong\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    Pong.decode = function decode(r, l) {\r\n        if (!(r instanceof $Reader))\r\n            r = $Reader.create(r);\r\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Pong();\r\n        while (r.pos < c) {\r\n            var t = r.uint32();\r\n            switch (t >>> 3) {\r\n            default:\r\n                r.skipType(t & 7);\r\n                break;\r\n            }\r\n        }\r\n        return m;\r\n    };\r\n\r\n    /**\r\n     * Decodes a Pong message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof Pong\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {Pong} Pong\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    Pong.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies a Pong message.\r\n     * @function verify\r\n     * @memberof Pong\r\n     * @static\r\n     * @param {Object.<string,*>} m Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    Pong.verify = function verify(m) {\r\n        if (typeof m !== \"object\" || m === null)\r\n            return \"object expected\";\r\n        return null;\r\n    };\r\n\r\n    return Pong;\r\n})();\r\n\r\nmodule.exports = $root;\r\n","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-11 00:47:47\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 01:57:56\r\n * @FilePath     : \\client243\\assets\\src\\ui\\view\\account\\RegisterView.ts\r\n * @Description  : \r\n */\r\n\r\nimport HttpRequest from \"../../../core/http/HttpRequest\";\r\nimport * as WebAPIConfig from \"../../../config/WebAPIConfig\";\r\nimport ViewBase from \"../../ViewBase\";\r\nimport * as HttpInterface from \"../../../interface/HttpInterface\";\r\nimport * as HttpDefine from \"../../../define/HttpDefine\";\r\nimport * as ServerConfig from \"../../../config/ServerConfig\";\r\nimport ViewDefine from \"../../../define/ViewDefine\";\r\nimport LocalizationDefine from \"../../../define/LocalizationDefine\";\r\nimport LoginView from \"./LoginView\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RegisterView extends ViewBase {\r\n\r\n    // 密码框是否明文\r\n    private m_isPwdPlain: boolean = null;\r\n\r\n    @property({ type: cc.EditBox, tooltip: \"用户名\" })\r\n    private edbUsername: cc.EditBox = null;\r\n\r\n    @property({ type: cc.EditBox, tooltip: \"密码\" })\r\n    private edbPassword: cc.EditBox = null;\r\n\r\n    @property({ type: cc.Label, tooltip: \"显隐密码\" })\r\n    private labPasswordPlain: cc.Label = null;\r\n\r\n    protected onLoad(): void {\r\n        this.register();\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    private register(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注销事件\r\n     */\r\n    private unRegister(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n        this.m_isPwdPlain = false;\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n        this.setPwdPlain(this.m_isPwdPlain);\r\n    }\r\n\r\n    /**\r\n     * 设置密码显隐\r\n     * @param isPlain {boolean} 是否明文\r\n     */\r\n    private setPwdPlain(isPlain: boolean): void {\r\n        let inputFlag: cc.EditBox.InputFlag;\r\n        let strPasswordPlain: string;\r\n        if (isPlain) {\r\n            inputFlag = cc.EditBox.InputFlag.DEFAULT;\r\n            strPasswordPlain = \"隐藏密码\";\r\n        } else {\r\n            inputFlag = cc.EditBox.InputFlag.PASSWORD;\r\n            strPasswordPlain= \"显示密码\";\r\n        }\r\n        this.edbPassword.inputFlag = inputFlag;\r\n        this.labPasswordPlain.string = strPasswordPlain;\r\n        this.m_isPwdPlain = isPlain;\r\n    }\r\n\r\n    /**\r\n     * 点击注册\r\n     */\r\n    private onClickRegister(): void {\r\n        let requestData: WebAPILoginRequest = {\r\n            username: this.edbUsername.string,\r\n            password: this.edbPassword.string,\r\n        }\r\n        let url: string = ServerConfig.WEB_API_SERVER + WebAPIConfig.WEB_API_REGISTER_REQUEST;\r\n        HttpRequest.post(url, JSON.stringify(requestData)).then((responseInfo: HttpInterface.ResponseInfo) => {\r\n            if (responseInfo.state === HttpDefine.StateType.OK) {\r\n                let responseData: WebAPIResponse = JSON.parse(responseInfo.body as string);\r\n                if(responseData.code === 0) {\r\n                    G.UIMgr.openTips(G.Localization.get(LocalizationDefine.REGISTER_OK));\r\n                    let loginView: cc.Node = G.UIMgr.getView(ViewDefine.LoginView);\r\n                    let loginScript: LoginView = loginView.getComponent(\"LoginView\");\r\n                    loginScript.setInfo(requestData.username, requestData.password);\r\n                    this.onClickGoback();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 返回\r\n     */\r\n    private onClickGoback(): void {\r\n        G.UIMgr.showView(ViewDefine.LoginView);\r\n        this.close();\r\n    }\r\n\r\n    /**\r\n     * 点击显隐密码\r\n     */\r\n    private onClickPwdPlain(): void {\r\n        this.setPwdPlain(!this.m_isPwdPlain);\r\n    }\r\n\r\n    /**\r\n     * 销毁视图\r\n     */\r\n    protected onDestroy(): void {\r\n        this.unRegister();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-31 22:42:14\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-31 22:26:21\r\n * @FilePath     : \\client242\\assets\\src\\ui\\view\\common\\RollNoticeView.ts\r\n * @Description  : 跑马灯滚动通知\r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RollNoticeView extends ViewBase {\r\n\r\n    public data: any = null;\r\n\r\n    protected onLoad(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化界面\r\n     */\r\n    private initView(): void {\r\n\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-11-03 21:55:31\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 23:43:58\r\n * @FilePath     : \\client242\\assets\\src\\ui\\SceneBase.ts\r\n * @Description  : 场景父类\r\n */\r\n\r\nimport UIBase from \"./UIBase\";\r\n\r\nexport default class SceneBase extends UIBase implements SceneInterface {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public onLanguage(): void {\r\n\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-28 22:24:11\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 01:58:56\r\n * @FilePath     : \\client243\\assets\\src\\define\\SceneDefine.ts\r\n * @Description  : 场景名定义\r\n */\r\n\r\n// 系统场景\r\nexport enum SystemSceneDefine {\r\n    // 启动场景\r\n    BootScene = \"BootScene\",\r\n}\r\n\r\n// 自定义的游戏场景都放这里\r\nexport enum CustomSceneDefine {\r\n    AccountScene = \"AccountScene\",\r\n    HomeScene = \"HomeScene\",\r\n}\r\n\r\n// 场景定义\r\nexport default { ...SystemSceneDefine, ...CustomSceneDefine };","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-11-03 22:09:57\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 23:26:52\r\n * @FilePath     : \\client242\\assets\\src\\interface\\SceneInterface.ts\r\n * @Description  : \r\n */\r\n\r\ninterface SceneInterface extends UIInterface {\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-11-06 02:30:59\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-11 23:48:08\r\n * @FilePath     : \\client243\\assets\\src\\config\\ServerConfig.ts\r\n * @Description  : \r\n */\r\n\r\n// WEB 接口服务器\r\nexport const WEB_API_SERVER: string = \"http://p.sswanv.com:8090\";","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-11 15:52:09\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-13 22:16:12\r\n * @FilePath     : \\client242\\assets\\src\\config\\SystemConfig.ts\r\n * @Description  : 系统框架常量配置\r\n */\r\n\r\n// 是否打印日志\r\nexport const DEBUG_LOG: boolean = true;","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-11 00:47:47\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 19:28:45\r\n * @FilePath     : \\client243\\assets\\src\\ui\\view\\persist\\TestView.ts\r\n * @Description  : \r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n// 判定移动的距离（单位：像素）\r\nconst MOVE_PIXEL: number = 50;\r\n\r\n@ccclass\r\nexport default class TestView extends ViewBase implements PersistInterface {\r\n\r\n    @property({ type: cc.Node, tooltip: \"根节点\" })\r\n    private nodRoot: cc.Node = null;\r\n\r\n    @property({ type: cc.Label, tooltip: \"测试开关文字\" })\r\n    private labSwitch: cc.Label = null;\r\n\r\n    @property({ type: cc.Button, tooltip: \"测试开关按钮\" })\r\n    private btnSwitch: cc.Button = null;\r\n\r\n    // 开关按钮原始位置\r\n    private m_switchBtnOriginPos: cc.Vec2 = null;\r\n    // 开关是否打开\r\n    private m_isOpen: boolean = null;\r\n\r\n    protected onLoad(): void {\r\n        this.register();\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    private register(): void {\r\n        this.btnSwitch.node.on(cc.Node.EventType.TOUCH_START, this.onSwitchTouchStart, this);\r\n        this.btnSwitch.node.on(cc.Node.EventType.TOUCH_MOVE, this.onSwitchTouchMove, this);\r\n        this.btnSwitch.node.on(cc.Node.EventType.TOUCH_END, this.onSwitchTouchEnd, this);\r\n        this.btnSwitch.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onSwitchTouchCancel, this);\r\n    }\r\n\r\n    /**\r\n     * 注销事件\r\n     */\r\n    private unRegister(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n        this.m_isOpen = false;\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n        this.setSwitch(this.m_isOpen);\r\n    }\r\n\r\n    /**\r\n     * 设置开关\r\n     * @param isOpen {boolean} 是否打开\r\n     */\r\n    private setSwitch(isOpen: boolean): void {\r\n        let strSwitch: string = \"\";\r\n        if (isOpen) {\r\n            strSwitch = \"关闭测试\";\r\n        } else {\r\n            strSwitch = \"开启测试\";\r\n        }\r\n        this.labSwitch.string = strSwitch;\r\n        this.nodRoot.active = isOpen;\r\n    }\r\n\r\n    /**\r\n     * 打开\r\n     */\r\n    public open(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 关闭\r\n     */\r\n    public close(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 测试开关按钮 按下回调\r\n     */\r\n    private onSwitchTouchStart(event: cc.Event.EventTouch): void {\r\n        this.m_switchBtnOriginPos = this.btnSwitch.node.getPosition();\r\n    }\r\n\r\n    /**\r\n     * 测试开关按钮 移动回调\r\n     */\r\n    private onSwitchTouchMove(event: cc.Event.EventTouch): void {\r\n        let startLocation: cc.Vec2 = event.getStartLocation();\r\n        let moveLocation: cc.Vec2 = event.getLocation();\r\n\r\n        if (Math.abs(moveLocation.x - startLocation.x) < MOVE_PIXEL && Math.abs(moveLocation.y - startLocation.y) < MOVE_PIXEL) {\r\n            return;\r\n        }\r\n        this.btnSwitch.interactable = false;\r\n        let movePos: cc.Vec2 = this.btnSwitch.node.parent.convertToNodeSpaceAR(moveLocation);\r\n        this.btnSwitch.node.setPosition(movePos);\r\n    }\r\n\r\n    /**\r\n     * 测试开关按钮 抬起回调\r\n     */\r\n    private onSwitchTouchEnd(event: cc.Event.EventTouch): void {\r\n        this.btnSwitch.interactable = true;\r\n        let node: cc.Node = event.target;\r\n        this.m_switchBtnOriginPos = node.getPosition();\r\n    }\r\n\r\n    /**\r\n     * 测试开关按钮 移出回调\r\n     */\r\n    private onSwitchTouchCancel(event: cc.Event.EventTouch): void {\r\n        this.btnSwitch.interactable = true;\r\n        let node: cc.Node = event.target;\r\n        node.setPosition(this.m_switchBtnOriginPos);\r\n    }\r\n\r\n    /**\r\n     * 点击开关\r\n     */\r\n    private onClickSwitch(): void {\r\n        this.m_isOpen = !this.m_isOpen;\r\n        this.setSwitch(this.m_isOpen);\r\n    }\r\n\r\n    /**\r\n     * 打开提示视图\r\n     */\r\n    private onClickOpenTips(): void {\r\n        let timestamp: number = new Date().getTime();\r\n        let content: string = timestamp.toString();;\r\n        G.UIMgr.openTips(content);\r\n    }\r\n\r\n    /**\r\n     * 销毁视图\r\n     */\r\n    protected onDestroy(): void {\r\n        this.unRegister();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-10 17:16:17\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-04 23:19:22\r\n * @FilePath     : \\client242\\assets\\src\\utils\\TimeUtil.ts\r\n * @Description  : 时间工具\r\n */\r\n\r\nexport default class TimeUtil {\r\n\r\n    /**\r\n     * 记录运行时间\r\n     * @param timestamp 上一个运行时间戳（毫秒）\r\n     * @return {number} 当前时间戳（毫秒）| 运行时间（毫秒）\r\n     */\r\n    public static markTime(timestamp?: number): number {\r\n        let currTime: number = performance.now();\r\n        if (timestamp === undefined) {\r\n            // 开始标记\r\n            return currTime;\r\n        } else {\r\n            // 结束标记\r\n            return currTime - timestamp;\r\n        }\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-30 17:59:51\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 01:08:52\r\n * @FilePath     : \\client243\\assets\\src\\ui\\view\\common\\TipsView.ts\r\n * @Description  : 向上飘动文字提示\r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n// 移动时间（单位：秒）\r\nconst MOVE_TIME: number = 0.5;\r\n// 停留时间（单位：秒）\r\nconst STAY_TIME: number = 2;\r\n// 渐显时间（单位：秒）\r\nconst FADE_IN_TIME: number = 0.1;\r\n// 渐隐时间（单位：秒）\r\nconst FADE_OUT_TIME: number = 0.5;\r\n// 底框上下左右边距（单位：像素）\r\nconst CASE_PADDING: number = 15;\r\n\r\n@ccclass\r\nexport default class TipsView extends ViewBase {\r\n\r\n    @property({ type: cc.Node, tooltip: \"飘动提示底框\" })\r\n    private nodCase: cc.Node = null;\r\n\r\n    @property({ type: cc.Label, tooltip: \"提示内容\" })\r\n    private labContent: cc.Label = null;\r\n\r\n    protected onLoad(): void {\r\n        this.initData();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    private initData(): void {\r\n\r\n    }\r\n\r\n    private initView(): void {\r\n        this.hide();\r\n        this.labContent.string = \"\";\r\n    }\r\n\r\n    private playAnimation(): void {\r\n        this.nodCase.opacity = 0;\r\n        cc.tween(this.nodCase)\r\n            .to(FADE_IN_TIME, { opacity: 255 })\r\n            .to(STAY_TIME, {})\r\n            .to(FADE_OUT_TIME, { opacity: 0 })\r\n            .call(() => {\r\n                this.close();\r\n            })\r\n            .start();\r\n    }\r\n\r\n    /**\r\n     * 打开提示视图\r\n     * @param content {string} 内容\r\n     */\r\n    public open(content: string): void {\r\n        this.labContent.string = content;\r\n        (this.labContent as any)._forceUpdateRenderData();\r\n        if (this.labContent.node.width >= this.nodCase.width) {\r\n            this.labContent.node.width = this.nodCase.width - (CASE_PADDING * 2);\r\n            this.labContent.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n            (this.labContent as any)._forceUpdateRenderData();\r\n        } else {\r\n            this.nodCase.width = this.labContent.node.width + (CASE_PADDING * 2);\r\n        }\r\n        this.nodCase.height = this.labContent.node.height + (CASE_PADDING * 2);\r\n        this.show();\r\n        this.playAnimation();\r\n    }\r\n\r\n    /**\r\n     * 关闭提示视图\r\n     */\r\n    protected close(): void {\r\n        if (this.node && this.node.isValid) {\r\n            this.node.destroy();\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-01 18:11:11\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-07 16:34:43\r\n * @FilePath     : \\client242\\assets\\src\\utils\\TweenUtil.ts\r\n * @Description  : 动画效果工具\r\n */\r\n\r\nimport ViewStyleDefine from \"../define/ViewStyleDefine\";\r\nimport Logger from \"../core/machine/Logger\";\r\n\r\n// 渐显渐隐时间（单位：秒）\r\nconst FADE_TIME = 0.2;\r\n\r\nexport default class TweenUtil {\r\n\r\n    /**\r\n     * 缩放打开动画\r\n     * @param node {cc.Node} 运动节点\r\n     */\r\n    private static openScale(node: cc.Node, completeCallback?: Function): void {\r\n        completeCallback();\r\n    }\r\n\r\n    /**\r\n     * 缩放关闭动画\r\n     * @param node {cc.Node} 运动节点\r\n     */\r\n    private static closeScale(node: cc.Node, completeCallback?: Function): void {\r\n        completeCallback();\r\n    }\r\n\r\n    /**\r\n     * 渐显动画\r\n     * @param node {cc.Node} 运动节点\r\n     */\r\n    private static openFade(node: cc.Node, completeCallback?: Function): void {\r\n        node.opacity = 0;\r\n        node.active = true;\r\n        \r\n        cc.tween(node)\r\n        .to(FADE_TIME, {opacity: 255})\r\n        .call(()=>{\r\n            completeCallback();\r\n        })\r\n        .start();\r\n    }\r\n\r\n    /**\r\n     * 渐隐动画\r\n     * @param node {cc.Node} 运动节点\r\n     */\r\n    private static closeFade(node: cc.Node, completeCallback?: Function): void {\r\n        cc.tween(node)\r\n        .to(FADE_TIME, {opacity: 0})\r\n        .call(()=>{\r\n            completeCallback();\r\n        })\r\n        .start();\r\n    }\r\n    \r\n    /**\r\n     * 播放打开动画\r\n     * @param node {cc.Node} 运动节点\r\n     * @param style {ViewStyleDefine} 动画风格\r\n     * @param completeCallback {Function} 播放完成回调\r\n     */\r\n    public static playOpen(node: cc.Node, style: ViewStyleDefine, completeCallback?: Function): void {\r\n        switch (style) {\r\n            case ViewStyleDefine.FADE:\r\n                this.openFade(node, completeCallback);\r\n                break;\r\n            case ViewStyleDefine.SCALE:\r\n                this.openScale(node, completeCallback);\r\n                break;\r\n            case ViewStyleDefine.LEFT_RIGHT:\r\n\r\n                break;\r\n            case ViewStyleDefine.RIGHT_LEFT:\r\n\r\n                break;\r\n            case ViewStyleDefine.BOTTOM_TOP:\r\n\r\n                break;\r\n            case ViewStyleDefine.TOP_BOTTOM:\r\n\r\n                break;\r\n            default:\r\n                Logger.getInstance().warn(`视图关闭动画 ${ViewStyleDefine[ViewStyleDefine[style]]} 风格不存在`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放关闭动画\r\n     * @param node {cc.Node} 运动节点\r\n     * @param style {ViewStyleDefine} 动画风格\r\n     * @param completeCallback {Function} 播放完成回调\r\n     */\r\n    public static playClose(node: cc.Node, style: ViewStyleDefine, completeCallback?: Function): void {\r\n        switch (style) {\r\n            case ViewStyleDefine.FADE:\r\n                this.closeFade(node, completeCallback);\r\n                break;\r\n            case ViewStyleDefine.SCALE:\r\n                this.closeScale(node, completeCallback);\r\n                break;\r\n            case ViewStyleDefine.LEFT_RIGHT:\r\n\r\n                break;\r\n            case ViewStyleDefine.RIGHT_LEFT:\r\n\r\n                break;\r\n            case ViewStyleDefine.BOTTOM_TOP:\r\n\r\n                break;\r\n            case ViewStyleDefine.TOP_BOTTOM:\r\n\r\n                break;\r\n            default:\r\n                Logger.getInstance().warn(`视图打开动画 ${ViewStyleDefine[ViewStyleDefine[style]]} 风格不存在`);\r\n                break;\r\n        }\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-08 15:44:28\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 23:18:42\r\n * @FilePath     : \\client242\\assets\\src\\ui\\UIBase.ts\r\n * @Description  : 界面的父类，用于统一处理界面需要扩展的调用\r\n */\r\n\r\nexport default class UIBase extends cc.Component {\r\n\r\n    // 打开界面时传入的数据\r\n    public data: any = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    /**\r\n     * 如果该组件启用，则每帧调用 update。\r\n     * @param dt the delta time in seconds it took to complete the last frame \r\n     */\r\n    protected update(dt: number): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 如果该组件启用，则每帧调用 lateUpdate。\r\n     */\r\n    protected lateUpdate(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当附加到一个激活的节点上或者其节点第一次激活时候调用。onLoad 总是会在任何 start 方法调用前执行，这能用于安排脚本的初始化顺序。\r\n     */\r\n    protected onLoad(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 如果该组件第一次启用，则在所有组件的 update 之前调用。通常用于需要在所有组件的 onLoad 初始化完毕后执行的逻辑。\r\n     */\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当该组件被启用，并且它的节点也激活时。\r\n     */\r\n    protected onEnable(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当该组件被禁用或节点变为无效时调用。\r\n     */\r\n    protected onDisable(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当该组件被销毁时调用 \r\n     */\r\n    protected onDestroy(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当该组件被销毁时调用 \r\n     */\r\n    protected onFocusInEditor(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当该组件被销毁时调用 \r\n     */\r\n    protected onLostFocusInEditor(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 用来初始化组件或节点的一些属性，当该组件被第一次添加到节点上或用户点击了它的 Reset 菜单时调用。这个回调只会在编辑器下调用。\r\n     */\r\n    protected resetInEditor(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 显示子类界面\r\n     */\r\n    protected show(): void {\r\n        this.node.active = true;\r\n    }\r\n\r\n    /**\r\n     * 隐藏子类界面\r\n     */\r\n    protected hide(): void {\r\n        this.node.active = false;\r\n    }\r\n\r\n}\r\n","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-30 00:16:51\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 23:39:59\r\n * @FilePath     : \\client242\\assets\\src\\interface\\UIInterface.ts\r\n * @Description  : 界面接口\r\n */\r\n\r\n/**\r\n * 接收外部打开界面时传入的数据参数\r\n */\r\ninterface UIInterface {\r\n    // 切换语言回调\r\n    onLanguage: () => void;\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-08 18:14:35\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-08 18:50:00\r\n * @FilePath     : \\client243\\assets\\src\\core\\manager\\ui\\UIManager.ts\r\n * @Description  : 视图管理器，用于游戏中所有视图模块的打开和关闭\r\n */\r\n\r\nimport Manager from \"../Manager\";\r\nimport Logger from \"../../machine/Logger\";\r\nimport * as ViewDefine from \"../../../define/ViewDefine\";\r\nimport ViewLayerDefine from \"../../../define/ViewLayerDefine\";\r\nimport { ORDER_INTERVAL } from \"../../../define/ViewLayerDefine\";\r\nimport TweenUtil from \"../../../utils/TweenUtil\";\r\nimport Loader from \"../../machine/Loader\";\r\nimport Util from \"../../../utils/Util\";\r\nimport LoadingView from \"../../../ui/view/persist/LoadingView\";\r\nimport ProgressView from \"../../../ui/view/persist/ProgressView\";\r\nimport LockTouchView from \"../../../ui/view/persist/LockTouchView\";\r\nimport PopupsView from \"../../../ui/view/common/PopupsView\";\r\nimport TipsView from \"../../../ui/view/common/TipsView\";\r\nimport ViewBase from \"../../../ui/ViewBase\";\r\nimport SceneBase from \"../../../ui/SceneBase\";\r\n\r\n// 预加载场景等待多少秒未完成，就显示进度条界面\r\nconst PRELOAD_SCENE_WAITIMG_TIME: number = 1;\r\n\r\nexport default class UIManager extends Manager implements ManagerInterface {\r\n\r\n    private static s_instance: UIManager = null;\r\n\r\n    // 视图节点 map\r\n    private m_viewMap: Map<ViewDefineType, cc.Node> = null;\r\n\r\n    public static getInstance(): UIManager {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new UIManager();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.m_viewMap = new Map();\r\n    }\r\n\r\n    /**\r\n     * 获取层级上的所有视图并排序返回\r\n     * @param layer {ViewLayerDefine} 层\r\n     * @returns {cc.Node[]}\r\n     */\r\n    private getLayerChild(layer: ViewLayerDefine): cc.Node[] {\r\n        let views: cc.Node[] = [];\r\n\r\n        // 找出同一个层的视图\r\n        this.m_viewMap.forEach((value: cc.Node, key: ViewDefineType, map: Map<ViewDefineType, cc.Node>) => {\r\n            let layerDiff: number = value.zIndex - layer;\r\n            let isLayerInView: boolean = layerDiff >= 0 && layerDiff < ORDER_INTERVAL;\r\n            if (isLayerInView) {\r\n                views.push(value);\r\n            }\r\n        });\r\n\r\n        // 层级排序\r\n        views.sort((a: cc.Node, b: cc.Node) => {\r\n            if (a.zIndex < b.zIndex) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n\r\n        return views;\r\n    }\r\n\r\n    /**\r\n     * 通过 order 获取 layer\r\n     * @param order {number} 层级\r\n     * @return {ViewLayerDefine} 图层\r\n     */\r\n    private getLayerByOrder(order: number): ViewLayerDefine {\r\n        return Math.floor(order / ORDER_INTERVAL) * ORDER_INTERVAL;\r\n    }\r\n\r\n    /**\r\n     * 获取视图层 的 最高层级+1\r\n     * @param layer {ViewLayerDefine} 层\r\n     * @return {number}\r\n     */\r\n    private getLayerTopOrder(layer: ViewLayerDefine): number {\r\n        if (layer === null || layer === undefined) {\r\n            layer = ViewLayerDefine.UI\r\n        }\r\n        let order: number = layer;\r\n        let views: cc.Node[] = this.getLayerChild(layer);\r\n        let size: number = views.length;\r\n        if (size <= 0) {\r\n            return order;\r\n        } else if (views.length > ORDER_INTERVAL) {\r\n            Logger.getInstance().warn(`${ViewLayerDefine[ViewLayerDefine[layer]]} 层容量不足，超过了原本设定的 ${ORDER_INTERVAL} 个`);\r\n            return ORDER_INTERVAL - 1;\r\n        }\r\n        return views[size - 1].zIndex + 1;\r\n    }\r\n\r\n    /**\r\n     * 重置视图层 的 层级，返回相应的最高层级 +1\r\n     * @param layer {ViewLayerDefine} 层\r\n     * @return {number}\r\n     */\r\n    private resetLayerOrder(layer: ViewLayerDefine): number {\r\n        let order: number = layer;\r\n        let views: cc.Node[] = this.getLayerChild(layer);\r\n\r\n        if (views.length <= 0) {\r\n            return order;\r\n        } else if (views.length > ORDER_INTERVAL) {\r\n            Logger.getInstance().warn(`${ViewLayerDefine[ViewLayerDefine[layer]]} 层容量不足，超过了原本设定的 ${ORDER_INTERVAL} 个`);\r\n            return ORDER_INTERVAL - 1;\r\n        }\r\n\r\n        for (let i: number = 0; i < views.length; ++i) {\r\n            views[i].zIndex = order++;\r\n        }\r\n\r\n        return order;\r\n    }\r\n\r\n    /**\r\n     * 检测层级是否超过了间隔单位\r\n     * @param layer {ViewLayerDefine} 视图层\r\n     * @param order {number} 层级\r\n     * @return {boolean}\r\n     */\r\n    private checkOrderBounds(layer: ViewLayerDefine, order: number): boolean {\r\n        return (order - layer) >= ORDER_INTERVAL;\r\n    }\r\n\r\n    /**\r\n     * 获取场景根节点\r\n     * @return {cc.Node}\r\n     */\r\n    private getRootNode(): cc.Node {\r\n        let rootNode: cc.Node = cc.director.getScene().getChildByName(\"Canvas\");\r\n        return rootNode;\r\n    }\r\n\r\n    /**\r\n     * 判断是否常驻视图路径\r\n     * @param path {ViewDefineType} 路径\r\n     */\r\n    private isPersistPath(path: ViewDefineType): boolean {\r\n        let is: boolean = false;\r\n        for (let value in ViewDefine.PersistViewDefine) {\r\n            if (ViewDefine.PersistViewDefine[value] === path) {\r\n                is = true;\r\n                break;\r\n            }\r\n        }\r\n        return is;\r\n    }\r\n\r\n    /**\r\n     * 设置常驻视图\r\n     * @param viewPath {ViewDefine.PersistViewDefine} 常驻视图路径\r\n     * @param viewNode {cc.Node} 常驻视图节点\r\n     */\r\n    public setPersistView(viewPath: ViewDefine.PersistViewDefine, viewNode: cc.Node): void {\r\n        let script: ViewBase = viewNode.getComponent(viewNode.name);\r\n        if (script && script.path) {\r\n            script.path = viewPath;\r\n        }\r\n        this.m_viewMap.set(viewPath, viewNode);\r\n    }\r\n\r\n    /**\r\n     * 加载视图\r\n     */\r\n    private async loadView(path: ViewDefineType): Promise<cc.Node> {\r\n        return new Promise((resolve: (node: cc.Node) => void, reject: () => void) => {\r\n            let preloadTimer: NodeJS.Timeout = null;\r\n            let startPreloadTimer: Function = () => {\r\n                if (preloadTimer === null || preloadTimer === undefined) {\r\n                    preloadTimer = setTimeout(() => {\r\n                        this.openProgress();\r\n                    }, PRELOAD_SCENE_WAITIMG_TIME * 1000);\r\n                }\r\n            }\r\n            let stopPreloadTimer: Function = () => {\r\n                if (preloadTimer !== null && preloadTimer !== undefined) {\r\n                    this.closeProgress();\r\n                    clearTimeout(preloadTimer);\r\n                    preloadTimer = null;\r\n                }\r\n            }\r\n\r\n            startPreloadTimer();\r\n            let view: cc.Node = this.m_viewMap.get(path);\r\n            if (view) {\r\n                stopPreloadTimer();\r\n                resolve(view);\r\n            } else {\r\n                Loader.getInstance().load(path, (prefab: cc.Prefab) => {\r\n                    if (prefab) {\r\n                        view = cc.instantiate(prefab);\r\n                        this.m_viewMap.set(path, view);\r\n                        stopPreloadTimer();\r\n                        resolve(view);\r\n                    } else {\r\n                        stopPreloadTimer();\r\n                        reject();\r\n                    }\r\n                }, (percent: number) => {\r\n                    this.setProgress(percent);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 打开加载界面\r\n     * @param content {string} 内容\r\n     */\r\n    public openLoading(content?: string): void {\r\n        let loadingView: cc.Node = this.m_viewMap.get(ViewDefine.PersistViewDefine.LoadingView);\r\n        if (loadingView) {\r\n            let script: LoadingView = loadingView.getComponent(\"LoadingView\");\r\n            script.open(content);\r\n        } else {\r\n            Logger.getInstance().warn(\"LoadingView 常驻视图未加载\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭加载界面\r\n     */\r\n    public closeLoading(): void {\r\n        let loadingView: cc.Node = this.m_viewMap.get(ViewDefine.PersistViewDefine.LoadingView);\r\n        if (loadingView) {\r\n            let script: LoadingView = loadingView.getComponent(\"LoadingView\");\r\n            script.close();\r\n        } else {\r\n            Logger.getInstance().warn(\"LoadingView 常驻视图未加载\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开进度界面\r\n     */\r\n    public openProgress(): void {\r\n        let progressView: cc.Node = this.m_viewMap.get(ViewDefine.PersistViewDefine.ProgressView);\r\n        if (progressView) {\r\n            let script: ProgressView = progressView.getComponent(\"ProgressView\");\r\n            script.open();\r\n        } else {\r\n            Logger.getInstance().warn(\"ProgressView 常驻视图未加载\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置进度界面百分比\r\n     * @param percent {number} 百分比 0-100\r\n     */\r\n    public setProgress(percent: number): void {\r\n        let progressView: cc.Node = this.m_viewMap.get(ViewDefine.PersistViewDefine.ProgressView);\r\n        if (progressView) {\r\n            let script: ProgressView = progressView.getComponent(\"ProgressView\");\r\n            script.setPercent(percent);\r\n        } else {\r\n            Logger.getInstance().warn(\"ProgressView 常驻视图未加载\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭进度界面\r\n     */\r\n    public closeProgress(): void {\r\n        let progressView: cc.Node = this.m_viewMap.get(ViewDefine.PersistViewDefine.ProgressView);\r\n        if (progressView) {\r\n            let script: ProgressView = progressView.getComponent(\"ProgressView\");\r\n            script.close();\r\n        } else {\r\n            Logger.getInstance().warn(\"ProgressView 常驻视图未加载\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开禁止点击界面（在最顶部覆盖一层防止点击）\r\n     */\r\n    public openLockTouch(): void {\r\n        let lockTouchView: cc.Node = this.m_viewMap.get(ViewDefine.PersistViewDefine.LockTouchView);\r\n        if (lockTouchView) {\r\n            let script: LockTouchView = lockTouchView.getComponent(\"LockTouchView\");\r\n            script.open();\r\n        } else {\r\n            Logger.getInstance().warn(\"LockTouchView 常驻视图未加载\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭禁止点击界面\r\n     */\r\n    public closeLockTouch(): void {\r\n        let lockTouchView: cc.Node = this.m_viewMap.get(ViewDefine.PersistViewDefine.LockTouchView);\r\n        if (lockTouchView) {\r\n            let script: LockTouchView = lockTouchView.getComponent(\"LockTouchView\");\r\n            script.close();\r\n        } else {\r\n            Logger.getInstance().warn(\"LockTouchView 常驻视图未加载\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开弹窗界面\r\n     * @param content {string} 内容\r\n     * @param title {string} 标题\r\n     * @param parent {cc.Node} 在指定父节点上弹出（默认在 POPUP 层级最顶层弹出）\r\n     * @param confirmCallback {Function} 确定回调方法\r\n     * @param cancelCallback {Function} 取消回调方法\r\n     */\r\n    public openPopups(content: string, title?: string, parent?: cc.Node, confirmCallback?: Function, cancelCallback?: Function): void {\r\n        this.openLockTouch();\r\n        Loader.getInstance().load(ViewDefine.CommonViewDefine.PopupsView, (prefab: cc.Prefab) => {\r\n            if (prefab === null) {\r\n                Logger.getInstance().warn(\"打开弹窗界面失败\");\r\n            } else {\r\n                let layer: ViewLayerDefine = null;\r\n                if (parent === undefined || parent === null) {\r\n                    parent = this.getRootNode();\r\n                    layer = ViewLayerDefine.POPUP;\r\n                } else {\r\n                    layer = this.getLayerByOrder(parent.zIndex);\r\n                }\r\n\r\n                let node: cc.Node = cc.instantiate(prefab);\r\n                node.zIndex = this.getLayerTopOrder(layer);\r\n                node.parent = parent;\r\n                let script: PopupsView = node.getComponent(\"PopupsView\");\r\n                script.open(content, title, confirmCallback, cancelCallback);\r\n            }\r\n            this.closeLockTouch();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 打开瓢字提示界面\r\n     * @param content {string} 内容\r\n     */\r\n    public openTips(content: string): void {\r\n        Loader.getInstance().load(ViewDefine.CommonViewDefine.TipsView, (prefab: cc.Prefab) => {\r\n            if (prefab === null) {\r\n                Logger.getInstance().warn(\"打开瓢字提示界面失败\");\r\n            } else {\r\n                let node: cc.Node = cc.instantiate(prefab);\r\n                node.zIndex = this.getLayerTopOrder(ViewLayerDefine.TOP);\r\n                node.parent = this.getRootNode();\r\n                let script: TipsView = node.getComponent(\"TipsView\");\r\n                script.open(content);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 打开数字键盘\r\n     * @param inputBox {cc.Label | cc.RichText} 输入框\r\n     * @param decimal {boolean} 可否输入小数\r\n     * @param parent {cc.Node} 父类节点（默认是 UI 层的最顶层）\r\n     */\r\n    public openNumKeyboard(inputBox: cc.Label | cc.RichText, decimal?: boolean, parent?: cc.Node): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 关闭数字键盘\r\n     */\r\n    public closeNumKeyboard(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 打开跑马灯界面\r\n     * @param content {string} 内容\r\n     */\r\n    public openRollNotice(content: string): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 切换场景内部方法\r\n     * @param name {SceneDefineType} 场景名\r\n     * @param completeCallback {(scene: cc.Scene) => void} 完成后的场景\r\n     * @param progressCallback {(percent: number) => void} 场景预加载进度（保留 2 位小数）\r\n     */\r\n    private replaceScene<T>(name: SceneDefineType, data: T, completeCallback?: (error: Error, scene: cc.Scene) => void, progressCallback?: (percent: number) => void): void {\r\n        cc.director.preloadScene(name, (completedCount: number, totalCount: number, item: any) => {\r\n            if (progressCallback) {\r\n                progressCallback(Util.toFixed((completedCount / totalCount) * 100));\r\n            }\r\n        }, (error: Error) => {\r\n            if (!error) {\r\n                cc.director.loadScene(name, (error: Error, scene: cc.Scene) => {\r\n                    if (!error) {\r\n                        if (data !== undefined && data !== null) {\r\n                            let script: SceneBase = scene.getChildByName(\"Canvas\").getComponent(scene.name);\r\n                            if (script) {\r\n                                script.data = data;\r\n                            } else {\r\n                                Logger.getInstance().warn(`${name} 场景未挂载 ${name} 脚本`);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        Logger.getInstance().warn(`切换 ${name} 场景失败`, error);\r\n                    }\r\n                    if (completeCallback) {\r\n                        completeCallback(error, scene);\r\n                    }\r\n                });\r\n            } else {\r\n                Logger.getInstance().warn(`预加载 ${name} 场景失败`, error);\r\n                if (completeCallback) {\r\n                    completeCallback(error, null);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 打开场景\r\n     * @param name {SceneDefineType} 场景名\r\n     * @param data {T} 任意数据\r\n     * @param progressCallback {(percent: number) => void} 加载百分比回调\r\n     * @param completeCallback {(error: Error, scene: cc.Scene) => void,} 加载完成回调\r\n     * @param preload {AssetsPathDefineType} 预加载文件 或者 预加载列表\r\n     */\r\n    public openScene<T>(name: SceneDefineType, data?: T, completeCallback?: (error: Error, scene: cc.Scene) => void, progressCallback?: (percent: number) => void, preload?: AssetsPathDefineType): void {\r\n        this.openLockTouch();\r\n        let preloadTimer: NodeJS.Timeout = setTimeout(() => {\r\n            this.openProgress();\r\n        }, PRELOAD_SCENE_WAITIMG_TIME * 1000);\r\n\r\n        let preloadTotal: number = 0;\r\n        if (preload !== null && preload !== undefined) {\r\n            if (preload instanceof Array) {\r\n                preloadTotal = preload.length;\r\n            } else {\r\n                preloadTotal = 1;\r\n            }\r\n        }\r\n\r\n        let done: Function = (error: Error, scene: cc.Scene) => {\r\n            if (preloadTimer !== null && preloadTimer !== undefined) {\r\n                clearTimeout(preloadTimer);\r\n                preloadTimer = null;\r\n                this.closeProgress();\r\n            }\r\n\r\n            if (completeCallback) {\r\n                completeCallback(error, scene);\r\n            }\r\n            this.closeLockTouch();\r\n\r\n            Logger.getInstance().log(`场景 ${name} 切换成功`)\r\n        }\r\n\r\n        // 先释放之前加载的所有资源\r\n        Loader.getInstance().releaseAll(() => {\r\n            if (preloadTotal > 0) {\r\n                let firstHalfPercent: number = 0;\r\n                let lastHalfPercent: number = 0;\r\n                Loader.getInstance().preload(preload, (items: cc.AssetManager.RequestItem[]) => {\r\n                    this.replaceScene(name, data, (error: Error, scene: cc.Scene) => {\r\n                        done(error, scene);\r\n                    }, (percent: number) => {\r\n                        // 后半段百分比\r\n                        lastHalfPercent = Util.toFixed(firstHalfPercent + ((percent / 100) * (100 - firstHalfPercent)));\r\n                        this.setProgress(lastHalfPercent);\r\n                        if (progressCallback) {\r\n                            progressCallback(lastHalfPercent);\r\n                        }\r\n                    });\r\n                }, (percent: number) => {\r\n                    // 前半段百分比\r\n                    firstHalfPercent = Util.toFixed((100 / (preloadTotal + 1) * preloadTotal) * percent / 100);\r\n                    this.setProgress(firstHalfPercent);\r\n                    if (progressCallback) {\r\n                        progressCallback(firstHalfPercent);\r\n                    }\r\n                });\r\n            } else {\r\n                this.replaceScene(name, data, (error: Error, scene: cc.Scene) => {\r\n                    done(error, scene);\r\n                }, (percent: number) => {\r\n                    this.setProgress(percent);\r\n                    if (progressCallback) {\r\n                        progressCallback(percent);\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 获取视图\r\n     * @param path {ViewDefineType} 路径\r\n     * @return {cc.Node | null}\r\n     */\r\n    public getView(path: ViewDefineType): cc.Node | null {\r\n        let view: cc.Node = this.m_viewMap.get(path);\r\n        if (!view) {\r\n            view = null;\r\n        }\r\n        return view;\r\n    }\r\n\r\n    /**\r\n     * 打开单个视图使用\r\n     * @param path {ViewDefineType} 路径\r\n     * @param data {any} 渲染数据\r\n     * @param completeCallback {Function} 完成后的回调\r\n     * @param layer {ViewLayerDefine} 层\r\n     * @param style {ViewStyleType} 显示时动画风格\r\n     */\r\n    public openView(path: ViewDefineType, data?: any, completeCallback?: (node: cc.Node) => void, layer?: ViewLayerDefine, style?: ViewStyleType): void {\r\n        this.openLockTouch();\r\n\r\n        let isPersist: boolean = this.isPersistPath(path);\r\n        if (isPersist) {\r\n            Logger.getInstance().warn(\"无法使用 openView 打开常驻视图\");\r\n            this.closeLockTouch();\r\n            return;\r\n        }\r\n\r\n        this.loadView(path).then((view: cc.Node) => {\r\n            // 赋值到场景根节点\r\n            if (view.parent === null || view.parent === undefined) {\r\n                let rootNode: cc.Node = this.getRootNode();\r\n                if (rootNode === null || rootNode === undefined) {\r\n                    Logger.getInstance().warn(`${cc.director.getScene()} 场景根节点，要求命名为 Canvas`);\r\n                    return;\r\n                }\r\n                view.parent = rootNode;\r\n            }\r\n\r\n            // 数据赋值\r\n            let script: ViewBase = view.getComponent(view.name);\r\n            if (script) {\r\n                script.path = path;\r\n                if (data !== null && data !== undefined) {\r\n                    script.data = data;\r\n                }\r\n            }\r\n\r\n            // 添加到父层最高层级\r\n            let topOrder: number = this.getLayerTopOrder(layer);\r\n            if (this.checkOrderBounds(ViewLayerDefine.SYSTEM, topOrder)) {\r\n                topOrder = this.resetLayerOrder(ViewLayerDefine.SYSTEM);\r\n            }\r\n            view.zIndex = topOrder;\r\n\r\n            if (style !== null && style !== undefined) {\r\n                view.active = false;\r\n                TweenUtil.playOpen(view, style, () => {\r\n                    this.closeLockTouch();\r\n                    if(completeCallback) {\r\n                        completeCallback(view);\r\n                    }\r\n                });\r\n            } else {\r\n                this.closeLockTouch();\r\n                if(completeCallback) {\r\n                    completeCallback(view);\r\n                }\r\n            }\r\n        }).catch(() => {\r\n            Logger.getInstance().warn(`加载 ${path} 视图失败`);\r\n            this.closeLockTouch();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 关闭单个视图使用\r\n     * @param path {ViewDefineType} 路径\r\n     * @param completeCallback {Function} 完成后的回调\r\n     * @param style {ViewStyleType} 显示时动画风格\r\n     */\r\n    public closeView(path: ViewDefineType, completeCallback?: Function, style?: ViewStyleType): void {\r\n        this.openLockTouch();\r\n        let view: cc.Node = this.m_viewMap.get(path);\r\n\r\n        let done: Function = () => {\r\n            view.destroy();\r\n            view = null;\r\n            if (completeCallback) {\r\n                completeCallback();\r\n            }\r\n            this.m_viewMap.delete(path);\r\n\r\n            // Loader.getInstance().unload(path);\r\n\r\n            this.closeLockTouch();\r\n        }\r\n\r\n        if (view) {\r\n            if (style !== null && style !== undefined) {\r\n                TweenUtil.playClose(view, style, () => {\r\n                    done();\r\n                });\r\n            } else {\r\n                done();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示视图\r\n     * @param path {ViewDefineType} 路径\r\n     * @param completeCallback {Function} 完成后的回调\r\n     * @param isAbove {boolean} 是否在当前图层最上层\r\n     */\r\n    public showView(path: ViewDefineType, completeCallback?: Function, isAbove?: boolean): void {\r\n        let view: cc.Node = this.m_viewMap.get(path);\r\n        if (view && view.isValid) {\r\n            if (isAbove) {\r\n                let layer: ViewLayerDefine = this.getLayerByOrder(view.zIndex);\r\n                let topOrder: number = this.getLayerTopOrder(layer);\r\n                if (this.checkOrderBounds(layer, topOrder)) {\r\n                    topOrder = this.resetLayerOrder(layer);\r\n                }\r\n                view.zIndex = topOrder;\r\n            }\r\n            view.active = true;\r\n        }\r\n        if (completeCallback) {\r\n            completeCallback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 隐藏视图\r\n     */\r\n    public hideView(path: ViewDefineType, completeCallback?: Function): void {\r\n        let view: cc.Node = this.m_viewMap.get(path);\r\n        if (view && view.isValid) {\r\n            view.active = false;\r\n        }\r\n        if (completeCallback) {\r\n            completeCallback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    public destroy(): void {\r\n        this.m_viewMap.forEach((value: cc.Node, key: ViewDefineType) => {\r\n            if (value.isValid) {\r\n                value.destroy();\r\n            }\r\n            Loader.getInstance().release(key);\r\n        });\r\n        this.m_viewMap.clear();\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-28 03:11:02\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-29 00:54:41\r\n * @FilePath     : \\client242\\assets\\src\\config\\UpdateConfig.ts\r\n * @Description  : 更新配置（app 下载地址、渠道下载地址）\r\n */\r\n\r\n// 苹果商店下载链接\r\nexport const APP_STORE_URL: string = \"https://www.appstore.com/\";\r\n// 谷歌商店下载链接\r\nexport const GOOGLE_PLAY_STORE_URL: string = \"https://www.google.com/\";\r\n// 安卓整包下载地址\r\nexport const ANDROID_APK_URL: string = \"https://static.sswanv.com:8443/app/android/ougato.apk\";\r\n// 苹果整包下载地址\r\nexport const IOS_IPA_URL: string = \"http://www.baidu.com/app.ipa\"\r\n\r\n// 在 Win32 模拟器 manifest 文件路径（测试用途）\r\nexport const WIN32_MANIFEST_IN_APP_PATH: string = \"D:\\\\public-desktop\\\\client242\\\\build\\\\jsb-default\\\\assets\\\\project.manifest\";\r\n","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-12 17:40:58\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-28 10:43:41\r\n * @FilePath     : \\client242\\assets\\src\\define\\UpdateDefine.ts\r\n * @Description  : 热更新定义\r\n */\r\n\r\n/**\r\n * 版本号\r\n */\r\nexport enum VersionNumber {\r\n    // 主版本号\r\n    X = 0,\r\n    // 次版本号\r\n    Y,\r\n    // 修订版本号\r\n    Z,\r\n}\r\n\r\nexport enum ErrorState {\r\n    // 加载本地 manifest 失败\r\n    LOAD_LOCAL_MANIFEST = 0,\r\n    // 下载远程 manifest 失败\r\n    DOWNLOAD_MANIFEST,\r\n    // 解析远程 manifest 失败\r\n    PARSE_MANIFEST,\r\n    // 解压远程资源文件失败\r\n    DECOMPRESS_FILE,\r\n    // 下载远程资源文件失败\r\n    DOWNLOAD_FILE,\r\n    // 校验远程资源文件失败\r\n    VERIFY_FILE,\r\n    // 重试失败\r\n    RETRY,\r\n}\r\n\r\n/**\r\n * 检测结果\r\n */\r\nexport enum CheckState {\r\n    // 不更新（已是最新版本或 H5 不需要更新）\r\n    NOT = 0,\r\n    // 静默更新（小版本更新时，在 WIFI 情况下静默更新）\r\n    QUIET,\r\n    // 提示更新（小版本更新时，在 4G 情况下提示用户需要更新文件大小，让用户决定是否继续更新）\r\n    PROMPT,\r\n    // 链接更新（大版本更新时，用户跳转到内部链接更新）\r\n    URL,\r\n    // 商店更新（大版本更新时，用户跳转到商店更新）\r\n    STORE,\r\n}\r\n\r\n/**\r\n * 更新结果\r\n */\r\nexport enum UpdateState {\r\n    // 更新完成\r\n    UPDATE_FINISH = 0,\r\n    // 已是最新版本\r\n    ALREADY_NEW,\r\n    // 再次更新\r\n    AGENT,\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-13 02:34:21\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-28 01:33:44\r\n * @FilePath     : \\client242\\assets\\src\\interface\\UpdateInterface.ts\r\n * @Description  : \r\n */\r\n\r\nimport * as UpdateDefine from \"../define/UpdateDefine\";\r\n\r\nexport interface CheckResult {\r\n    error?: UpdateDefine.ErrorState,\r\n    state?: UpdateDefine.CheckState,\r\n    downloadBytes?: number,\r\n}\r\n\r\nexport interface UpdateResult {\r\n    error?: UpdateDefine.ErrorState,\r\n    state?: UpdateDefine.UpdateState,\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-10-11 23:17:49\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-10 10:40:45\r\n * @FilePath     : \\client242\\assets\\src\\core\\manager\\update\\UpdateManager.ts\r\n * @Description  : 更新管理器\r\n */\r\n\r\nimport * as UpdateDefine from \"../../../define/UpdateDefine\";\r\nimport * as UpdateInterface from \"../../../interface/UpdateInterface\";\r\nimport * as UpdateConfig from \"../../../config/UpdateConfig\";\r\nimport Manager from \"../Manager\";\r\nimport Logger from \"../../machine/Logger\";\r\nimport CodeUtil from \"../../../utils/CodeUtil\";\r\nimport LocalStorageDefine from \"../../../define/LocalStorageDefine\";\r\nimport Util from \"../../../utils/Util\";\r\nimport EventManager from \"../event/EventManager\";\r\nimport EventDefine from \"../../../define/EventDefine\";\r\n\r\n// 原生热更新资源文件夹\r\nconst NATIVE_UPDATE_ASSETS_FOLDER: string = \"hot-update\";\r\n// 文本文件后缀\r\nconst TEXT_FILE_SUFFIX: string[] = [\"json\"];\r\n// 最大文件失败数\r\nconst MAX_FAILED_FILE_COUNT: number = 3;\r\n// project.manifest 文件名\r\nconst PROJECT_MANIFEST_FILENAME: string = \"project.manifest\";\r\n\r\nexport default class UpdateManager extends Manager implements ManagerInterface {\r\n\r\n    private static s_instance: UpdateManager = null;\r\n\r\n    // 原生资源管理器\r\n    private m_jsbAssetsManager: jsb.AssetsManager = null;\r\n    // 差异版本号\r\n    private m_diffVersionNum: UpdateDefine.VersionNumber = null;\r\n    // 失败文件\r\n    private m_failedFiles: string[] = null;\r\n    // 错误状态\r\n    private m_errorState: UpdateDefine.ErrorState = null;\r\n    // 更新进度\r\n    private m_percent: number = null;\r\n\r\n    public static getInstance(): UpdateManager {\r\n        if (this.s_instance === null) {\r\n            this.s_instance = new UpdateManager();\r\n        }\r\n        return this.s_instance;\r\n    }\r\n\r\n    public static destroy(): void {\r\n        if (this.s_instance !== null) {\r\n            this.s_instance.destroy();\r\n        }\r\n        this.s_instance = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.initData();\r\n    }\r\n\r\n    /**\r\n     * 初始化数据\r\n     */\r\n    private initData(): void {\r\n        this.m_diffVersionNum = null;\r\n        this.m_failedFiles = [];\r\n        this.m_errorState = null;\r\n        this.m_percent = 0;\r\n    }\r\n\r\n    /**\r\n     * 检测是否需要更新\r\n     * @return {Promise<UpdateInterface.CheckResult>} 检测结果\r\n     */\r\n    public async check(): Promise<UpdateInterface.CheckResult> {\r\n        if (!cc.sys.isNative) {\r\n            return {\r\n                state: UpdateDefine.CheckState.NOT,\r\n            };\r\n        }\r\n\r\n        return new Promise((resolve: (result: UpdateInterface.CheckResult) => void) => {\r\n            if (this.m_jsbAssetsManager === null) {\r\n                this.m_jsbAssetsManager = jsb.AssetsManager.create(this.getLocalManifestPath(), this.getUpdateSearchPath());\r\n                this.m_jsbAssetsManager.setVersionCompareHandle(this.onVersionCompare.bind(this));\r\n                this.m_jsbAssetsManager.setVerifyCallback(this.onVerifyMD5.bind(this));\r\n            }\r\n\r\n            let jsbState: jsb.AssetsManager.State = this.m_jsbAssetsManager.getState();\r\n            if (jsbState >= jsb.AssetsManager.State.PREDOWNLOAD_VERSION && jsbState !== jsb.AssetsManager.State.FAIL_TO_UPDATE) {\r\n                Logger.getInstance().warn(`已检测过版本，请不要重复检测更新数据`);\r\n            }\r\n\r\n            if (!this.m_jsbAssetsManager.getLocalManifest() || !this.m_jsbAssetsManager.getLocalManifest().isLoaded()) {\r\n                Logger.getInstance().warn(\"加载本地 manifest 失败\");\r\n                return resolve({\r\n                    error: UpdateDefine.ErrorState.LOAD_LOCAL_MANIFEST,\r\n                });\r\n            }\r\n\r\n            Logger.getInstance().log(`正在检测资源更新`);\r\n\r\n            let checkState: UpdateDefine.CheckState = null;\r\n            let failedState: UpdateDefine.ErrorState = null;\r\n            this.m_jsbAssetsManager.setEventCallback((event: jsb.EventAssetsManager) => {\r\n                switch (event.getEventCode()) {\r\n                    case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST: {\r\n                        Logger.getInstance().warn(\"加载本地文件 Manifest 失败\");\r\n                        failedState = UpdateDefine.ErrorState.LOAD_LOCAL_MANIFEST;\r\n                    }\r\n                        break;\r\n                    case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST: {\r\n                        Logger.getInstance().warn(\"下载远程 Manifest 失败\");\r\n                        Logger.getInstance().warn(event.getAssetsManagerEx().getLocalManifest().getManifestFileUrl());\r\n                        failedState = UpdateDefine.ErrorState.DOWNLOAD_MANIFEST;\r\n                    }\r\n                        break;\r\n                    case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST: {\r\n                        Logger.getInstance().warn(\"解析远程 Manifest 失败\");\r\n                        failedState = UpdateDefine.ErrorState.PARSE_MANIFEST;\r\n                    }\r\n                        break;\r\n                    case jsb.EventAssetsManager.ALREADY_UP_TO_DATE: {\r\n                        Logger.getInstance().log(\"已是最新版本\");\r\n                        checkState = UpdateDefine.CheckState.NOT;\r\n                    }\r\n                        break;\r\n                    case jsb.EventAssetsManager.NEW_VERSION_FOUND: {\r\n                        Logger.getInstance().log(\"发现新版本更新\");\r\n                        switch (this.m_diffVersionNum) {\r\n                            case UpdateDefine.VersionNumber.X:\r\n                                checkState = UpdateDefine.CheckState.URL;\r\n                                break;\r\n                            case UpdateDefine.VersionNumber.Y:\r\n                            case UpdateDefine.VersionNumber.Z:\r\n                                checkState = UpdateDefine.CheckState.QUIET;\r\n                                if (cc.sys.getNetworkType() === cc.sys.NetworkType.WWAN) {\r\n                                    checkState = UpdateDefine.CheckState.PROMPT;\r\n                                }\r\n                                break;\r\n                            default:\r\n                                Logger.getInstance().warn(\"版本号错误\");\r\n                                break;\r\n                        }\r\n                    }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                if (checkState !== null) {\r\n                    this.m_jsbAssetsManager.setEventCallback(null);\r\n                    return resolve({\r\n                        state: checkState,\r\n                        downloadBytes: event.getTotalBytes(),\r\n                    });\r\n                }\r\n\r\n                if (failedState !== null) {\r\n                    this.m_jsbAssetsManager.setEventCallback(null);\r\n                    this.m_errorState = failedState;\r\n                    return resolve({\r\n                        error: failedState,\r\n                    });\r\n                }\r\n            });\r\n\r\n            this.m_jsbAssetsManager.checkUpdate();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 更新最新资源和脚本\r\n     * @return {Promise<UpdateInterface.UpdateResult>}\r\n     */\r\n    public async update(): Promise<UpdateInterface.UpdateResult> {\r\n        return new Promise((resolve: (result: UpdateInterface.UpdateResult) => void) => {\r\n\r\n            let jsbState: jsb.AssetsManager.State = this.m_jsbAssetsManager.getState();\r\n            if (jsbState > jsb.AssetsManager.State.READY_TO_UPDATE && jsbState !== jsb.AssetsManager.State.FAIL_TO_UPDATE) {\r\n                Logger.getInstance().warn(`正在更新最新资源，请不要重复执行更新`);\r\n            }\r\n\r\n            Logger.getInstance().log(\"正在更新最新资源\");\r\n\r\n            let failedCount: number = 0;\r\n            let finishState: UpdateDefine.UpdateState = null;\r\n            let failedState: UpdateDefine.ErrorState = null;\r\n            let percent: number = this.m_percent;\r\n            this.m_jsbAssetsManager.setEventCallback((event: jsb.EventAssetsManager) => {\r\n                let eventCode: number = event.getEventCode();\r\n                switch (eventCode) {\r\n                    // 加载本地 manifest 失败\r\n                    case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST: {\r\n                        Logger.getInstance().warn(\"加载本地文件 Manifest 失败\");\r\n                        failedState = UpdateDefine.ErrorState.LOAD_LOCAL_MANIFEST;\r\n                    }\r\n                        break;\r\n                    // 下载远程 manifest 失败\r\n                    case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST: {\r\n                        Logger.getInstance().warn(\"下载远程 Manifest 失败\");\r\n                        failedState = UpdateDefine.ErrorState.DOWNLOAD_MANIFEST;\r\n                    }\r\n                        break;\r\n                    // 解析远程 manifest 失败\r\n                    case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST: {\r\n                        Logger.getInstance().warn(\"解析远程 Manifest 失败\");\r\n                        failedState = UpdateDefine.ErrorState.PARSE_MANIFEST;\r\n                    }\r\n                        break;\r\n                    // 解压远程资源文件失败\r\n                    case jsb.EventAssetsManager.ERROR_DECOMPRESS: {\r\n                        Logger.getInstance().log(`解压文件失败：${event.getAssetId()}`);\r\n                        this.m_failedFiles.push(event.getAssetId());\r\n                        if (failedCount++ >= MAX_FAILED_FILE_COUNT) {\r\n                            failedState = UpdateDefine.ErrorState.DECOMPRESS_FILE;\r\n                        }\r\n                    }\r\n                        break;\r\n                    // 更新进度（我需要文件数量的百分比，所以就不在这里做百分比获取了，留作以后使用）\r\n                    case jsb.EventAssetsManager.UPDATE_PROGRESSION:\r\n                        break;\r\n                    // 单个文件更新完成\r\n                    case jsb.EventAssetsManager.ASSET_UPDATED: {\r\n                        percent = Util.toFixed(event.getPercentByFile() * 100);\r\n                        Logger.getInstance().log(`文件完成：${event.getAssetId()} （${percent}%）`);\r\n                    }\r\n                        break;\r\n                    // 下载远程资源文件失败\r\n                    case jsb.EventAssetsManager.ERROR_UPDATING: {\r\n                        Logger.getInstance().warn(`下载文件失败：${event.getAssetId()}`);\r\n                        this.m_failedFiles.push(event.getAssetId());\r\n                        if (++failedCount >= MAX_FAILED_FILE_COUNT) {\r\n                            failedState = UpdateDefine.ErrorState.DOWNLOAD_FILE;\r\n                        }\r\n                    }\r\n                        break;\r\n                    // 校验远程资源文件失败\r\n                    case jsb.EventAssetsManager.UPDATE_FAILED:\r\n                        Logger.getInstance().log(`文件校验失败：${event.getAssetId()}`);\r\n                        this.m_failedFiles.push(event.getAssetId());\r\n                        if (++failedCount >= MAX_FAILED_FILE_COUNT) {\r\n                            failedState = UpdateDefine.ErrorState.VERIFY_FILE;\r\n                        }\r\n                        break;\r\n                    // 已是最新\r\n                    case jsb.EventAssetsManager.ALREADY_UP_TO_DATE: {\r\n                        Logger.getInstance().log(\"已是最新版本\");\r\n                        finishState = UpdateDefine.UpdateState.ALREADY_NEW;\r\n                    }\r\n                        break;\r\n                    // 更新完成\r\n                    case jsb.EventAssetsManager.UPDATE_FINISHED: {\r\n                        Logger.getInstance().log(\"更新完成，自动重启客户端\");\r\n                        this.resetSearchPath();\r\n                        percent = 100;\r\n                        finishState = UpdateDefine.UpdateState.UPDATE_FINISH;\r\n                    }\r\n                        break;\r\n                    default:\r\n                        Logger.getInstance().warn(`热更新中未捕获的事件 ${eventCode}`);\r\n                        break;\r\n                }\r\n\r\n                if (this.m_percent < percent) {\r\n                    this.m_percent = percent;\r\n                    EventManager.getInstance().emit(EventDefine.UPDATE_PROGRESS, this.m_percent);\r\n                }\r\n\r\n                if (finishState !== null) {\r\n                    this.m_jsbAssetsManager.setEventCallback(null);\r\n                    this.initData();\r\n                    resolve({\r\n                        state: finishState,\r\n                    });\r\n                }\r\n\r\n                if (failedState !== null) {\r\n                    this.m_jsbAssetsManager.setEventCallback(null);\r\n                    this.initData();\r\n                    this.m_errorState = failedState;\r\n                    resolve({\r\n                        error: failedState,\r\n                    });\r\n                }\r\n            });\r\n\r\n            this.m_jsbAssetsManager.update();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 重试更新\r\n     * @return {Promise<UpdateInterface.UpdateResult>}\r\n     */\r\n    public async retry(): Promise<UpdateInterface.UpdateResult> {\r\n        return new Promise((resolve: (state: UpdateInterface.UpdateResult) => void) => {\r\n            if (this.m_jsbAssetsManager.getState() !== jsb.AssetsManager.State.FAIL_TO_UPDATE) {\r\n                Logger.getInstance().warn(`无法执行热更重试，要求在失败状态下才能执行`);\r\n            }\r\n\r\n            Logger.getInstance().log(\"正在重试更新资源\");\r\n\r\n            switch (this.m_errorState) {\r\n                case UpdateDefine.ErrorState.LOAD_LOCAL_MANIFEST:\r\n                    // TODO 本地文件错误\r\n                    // 1.删除搜索路径的 hot-update_temp 和 hot-update 目录\r\n                    // 2.完整更新流程\r\n                    this.cleanUpdateDir();\r\n                    resolve({\r\n                        state: UpdateDefine.UpdateState.AGENT,\r\n                    });\r\n                    break;\r\n                case UpdateDefine.ErrorState.DOWNLOAD_MANIFEST:\r\n                    // TODO 资源服维护\r\n                    // 1.切换资源服线路\r\n                    // 2.完整更新流程\r\n                    resolve({\r\n                        state: UpdateDefine.UpdateState.AGENT,\r\n                    });\r\n                    break;\r\n                case UpdateDefine.ErrorState.PARSE_MANIFEST:\r\n                    // TODO 远程文件错误\r\n                    // 1.切换资源服线路\r\n                    // 2.完整更新流程\r\n                    resolve({\r\n                        state: UpdateDefine.UpdateState.AGENT,\r\n                    });\r\n                    break;\r\n                case UpdateDefine.ErrorState.DECOMPRESS_FILE:\r\n                case UpdateDefine.ErrorState.DOWNLOAD_FILE:\r\n                case UpdateDefine.ErrorState.VERIFY_FILE: {\r\n                    this.m_jsbAssetsManager.setEventCallback((event: jsb.EventAssetsManager) => {\r\n                        let percent: number = 0;\r\n                        let failedState: UpdateDefine.ErrorState = null;\r\n                        let finishState: UpdateDefine.UpdateState = null;\r\n                        switch (event.getEventCode()) {\r\n                            // 单个文件更新完成\r\n                            case jsb.EventAssetsManager.ASSET_UPDATED: {\r\n                                percent = Util.toFixed(event.getPercentByFile() * 100);\r\n                                Logger.getInstance().log(`文件完成：${event.getAssetId()} （${percent}%）`);\r\n                            }\r\n                                break;\r\n                            // 下载远程资源文件失败\r\n                            case jsb.EventAssetsManager.ERROR_UPDATING: {\r\n                                Logger.getInstance().warn(`下载文件失败：${event.getAssetId()}`);\r\n                                this.m_failedFiles.push(event.getAssetId());\r\n                                failedState = UpdateDefine.ErrorState.DOWNLOAD_FILE;\r\n                            }\r\n                                break;\r\n                            // 解压远程资源文件失败\r\n                            case jsb.EventAssetsManager.ERROR_DECOMPRESS: {\r\n                                Logger.getInstance().log(`解压文件失败：${event.getAssetId()}`);\r\n                                this.m_failedFiles.push(event.getAssetId());\r\n                                failedState = UpdateDefine.ErrorState.DECOMPRESS_FILE;\r\n                            }\r\n                            // 校验远程资源文件失败\r\n                            case jsb.EventAssetsManager.UPDATE_FAILED:\r\n                                Logger.getInstance().log(`文件校验失败：${event.getAssetId()}`);\r\n                                this.m_failedFiles.push(event.getAssetId());\r\n                                failedState = UpdateDefine.ErrorState.VERIFY_FILE;\r\n                                break;\r\n                            // 已是最新\r\n                            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE: {\r\n                                Logger.getInstance().log(\"已是最新版本\");\r\n                                finishState = UpdateDefine.UpdateState.ALREADY_NEW;\r\n                            }\r\n                                break;\r\n                            // 更新完成\r\n                            case jsb.EventAssetsManager.UPDATE_FINISHED: {\r\n                                Logger.getInstance().log(\"更新完成，自动重启客户端\");\r\n                                this.resetSearchPath();\r\n                                percent = 100;\r\n                            }\r\n                                break;\r\n                            default:\r\n\r\n                                break;\r\n                        }\r\n\r\n                        if (this.m_percent < percent) {\r\n                            this.m_percent = percent;\r\n                            EventManager.getInstance().emit(EventDefine.UPDATE_PROGRESS, this.m_percent);\r\n                        }\r\n\r\n                        if (finishState !== null && finishState !== undefined) {\r\n                            this.m_jsbAssetsManager.setEventCallback(null);\r\n                            this.initData();\r\n                            resolve({\r\n                                state: finishState,\r\n                            });\r\n                        }\r\n\r\n                        if (failedState !== null && failedState !== undefined) {\r\n                            this.m_jsbAssetsManager.setEventCallback(null);\r\n                            this.initData();\r\n                            this.m_errorState = failedState;\r\n                            resolve({\r\n                                error: failedState,\r\n                            });\r\n                        }\r\n                    });\r\n                    this.m_jsbAssetsManager.downloadFailedAssets();\r\n                }\r\n                    break;\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取不同平台的 app 整包链接\r\n     * @return {string}\r\n     */\r\n    public getAppURL(): string {\r\n        let appURL: string = \"\"\r\n        switch (cc.sys.os) {\r\n            case cc.sys.OS_ANDROID:\r\n                appURL = UpdateConfig.ANDROID_APK_URL;\r\n                break;\r\n            case cc.sys.OS_IOS:\r\n                appURL = UpdateConfig.IOS_IPA_URL;\r\n                break;\r\n            default:\r\n                Logger.getInstance().warn(`当前平台 ${cc.sys.os} 未定义整包下载链接`);\r\n                break;\r\n        }\r\n        return appURL;\r\n    }\r\n\r\n    /**\r\n     * 获取不同平台的商店整包链接\r\n     * @return {string}\r\n     */\r\n    public getAppStoreURL(): string {\r\n        let appStoreURL: string = \"\"\r\n        switch (cc.sys.os) {\r\n            case cc.sys.OS_ANDROID:\r\n                appStoreURL = UpdateConfig.GOOGLE_PLAY_STORE_URL;\r\n                break;\r\n            case cc.sys.OS_IOS:\r\n                appStoreURL = UpdateConfig.APP_STORE_URL;\r\n                break;\r\n            default:\r\n                Logger.getInstance().warn(`当前平台 ${cc.sys.os} 未定义整包下载链接`);\r\n                break;\r\n        }\r\n        return appStoreURL;\r\n    }\r\n\r\n    /**\r\n     * 清理更新目录 update-hot 和 update-hot_temp 目录\r\n     * @return {boolean} 是否清理成功\r\n     */\r\n    public cleanUpdateDir(): boolean {\r\n        return this.removeUpdateTempDir() && this.removeUpdateSearchDir();\r\n    }\r\n\r\n    /**\r\n     * 删除搜索路径 update-hot 目录\r\n     * @return {boolean} 是否删除成功\r\n     */\r\n    private removeUpdateSearchDir(): boolean {\r\n        let succeed: boolean = false;\r\n        let updateSearchPath: string = this.getUpdateSearchPath();\r\n        if (jsb.fileUtils.isDirectoryExist(updateSearchPath)) {\r\n            succeed = jsb.fileUtils.removeDirectory(updateSearchPath);\r\n        }\r\n        return succeed;\r\n    }\r\n\r\n    /**\r\n     * 删除热更临时 update-hot_temp 目录\r\n     * @return {boolean} 是否删除成功\r\n     */\r\n    private removeUpdateTempDir(): boolean {\r\n        let succeed: boolean = false;\r\n        let updateTempPath: string = this.getUpdateTempPath();\r\n        if (jsb.fileUtils.isDirectoryExist(updateTempPath)) {\r\n            succeed = jsb.fileUtils.removeDirectory(updateTempPath);\r\n        }\r\n        return succeed;\r\n    }\r\n\r\n    /**\r\n     * 获取热更新临时存放目录的路径\r\n     * @return {string}\r\n     */\r\n    private getUpdateTempPath(): string {\r\n        let searchTempPath: string = \"\";\r\n        switch (cc.sys.os) {\r\n            case cc.sys.OS_WINDOWS:\r\n            case cc.sys.OS_IOS:\r\n            case cc.sys.OS_ANDROID: {\r\n                searchTempPath = this.getAssetsWritePath() + NATIVE_UPDATE_ASSETS_FOLDER + \"_temp\";\r\n            }\r\n                break;\r\n            case cc.sys.OS_OSX:\r\n\r\n                break;\r\n            default:\r\n                Logger.getInstance().warn(\"系统不支持获取本地 manifest 文件路径\");\r\n                break;\r\n        }\r\n        return searchTempPath;\r\n    }\r\n\r\n    /**\r\n     * 获取热更新写入新资源目录的路径\r\n     * @return {string}\r\n     */\r\n    private getUpdateSearchPath(): string {\r\n        return this.getAssetsWritePath() + NATIVE_UPDATE_ASSETS_FOLDER;\r\n    }\r\n\r\n    /**\r\n     * 获取 manifest 文件，在搜索路径内\r\n     * @return {string}\r\n     */\r\n    private getManifestPathInSearch(): string {\r\n        let manifestPath: string = \"\";\r\n        switch (cc.sys.os) {\r\n            case cc.sys.OS_WINDOWS:\r\n                manifestPath = this.getAssetsWritePath() + NATIVE_UPDATE_ASSETS_FOLDER + \"\\\\\" + PROJECT_MANIFEST_FILENAME;\r\n                break;\r\n            case cc.sys.OS_OSX:\r\n\r\n                break;\r\n            case cc.sys.OS_IOS:\r\n            case cc.sys.OS_ANDROID:\r\n                manifestPath = this.getAssetsWritePath() + PROJECT_MANIFEST_FILENAME;\r\n                break;\r\n            default:\r\n                Logger.getInstance().warn(\"系统不支持获取本地 manifest 文件路径\");\r\n                break;\r\n        }\r\n        return manifestPath;\r\n    }\r\n\r\n    /**\r\n     * 获取 manifest 文件，在 APP 内\r\n     * @return {string}\r\n     */\r\n    private getManifestPathInApp(): string {\r\n        let manifestPath: string = \"\";\r\n        switch (cc.sys.os) {\r\n            case cc.sys.OS_WINDOWS:\r\n                manifestPath = UpdateConfig.WIN32_MANIFEST_IN_APP_PATH;\r\n                break;\r\n            case cc.sys.OS_OSX:\r\n\r\n                break;\r\n            case cc.sys.OS_ANDROID: {\r\n                let rootPath: string = jsb.fileUtils.getDefaultResourceRootPath();\r\n                if (rootPath) {\r\n                    if (rootPath[0] === \"@\") {\r\n                        rootPath = rootPath.slice(1, rootPath.length);\r\n                    }\r\n                    manifestPath = rootPath + PROJECT_MANIFEST_FILENAME;\r\n                }\r\n            }\r\n                break;\r\n            case cc.sys.OS_IOS:\r\n                let rootPath: string = \"assets/\";\r\n                manifestPath = rootPath + PROJECT_MANIFEST_FILENAME;\r\n                break;\r\n            default:\r\n                Logger.getInstance().warn(\"系统不支持获取本地 manifest 文件路径\");\r\n                break;\r\n        }\r\n        return manifestPath;\r\n    }\r\n\r\n    /**\r\n     * 获取本地 manifest 文件路径\r\n     * @return {string}\r\n     */\r\n    private getLocalManifestPath(): string {\r\n        let manifestPath: string = \"\";\r\n        let searchTempPath: string = this.getUpdateTempPath();\r\n        let manifestPathSearch: string = this.getManifestPathInSearch();\r\n        let manifestPathApp: string = this.getManifestPathInApp();\r\n\r\n        if (jsb.fileUtils.isDirectoryExist(searchTempPath) || !jsb.fileUtils.isFileExist(manifestPathSearch)) {\r\n            manifestPath = manifestPathApp;\r\n        } else {\r\n            if (jsb.fileUtils.isFileExist(manifestPathApp)) {\r\n                manifestPath = manifestPathApp;\r\n            }\r\n        }\r\n\r\n        if (!jsb.fileUtils.isFileExist(manifestPath)) {\r\n            manifestPath = this.getManifestPathInApp();\r\n            if (!jsb.fileUtils.isFileExist(manifestPath)) {\r\n                Logger.getInstance().warn(\"无法找到 APP 内和 搜索路径内的 manifest 文件\");\r\n                manifestPath = \"\";\r\n            }\r\n        }\r\n        return manifestPath;\r\n    }\r\n\r\n    /**\r\n     * 获取资源写入路径\r\n     * @return {string} 可写入路径\r\n     */\r\n    private getAssetsWritePath(): string {\r\n        let path: string = \"\";\r\n\r\n        if (jsb && jsb.fileUtils) {\r\n            path = jsb.fileUtils.getWritablePath();\r\n        } else {\r\n            path = \"/\";\r\n        }\r\n\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * 搜索路径去重\r\n     * @param searchPaths {string[]} 需要去重的搜索路径\r\n     * @return {string[]} 去重后新的搜索路径\r\n     */\r\n    private uniqueSearchPath(searchPaths: string[]): string[] {\r\n        let newSearchPath: string[] = [];\r\n        let flagPathMap: Map<string, string> = new Map();\r\n        for (let i: number = 0; i < searchPaths.length; ++i) {\r\n            let key: string = searchPaths[i];\r\n            if (!flagPathMap.has(key)) {\r\n                flagPathMap.set(key, key);\r\n                newSearchPath.push(key);\r\n            }\r\n        }\r\n\r\n        flagPathMap.clear();\r\n        return newSearchPath;\r\n    }\r\n\r\n\r\n    /**\r\n     * 重置搜索路径（并去重）\r\n     */\r\n    private resetSearchPath(): void {\r\n        let searchPaths: string[] = this.uniqueSearchPath(jsb.fileUtils.getSearchPaths());\r\n        let insertSearchPaths: string[] = this.m_jsbAssetsManager.getLocalManifest().getSearchPaths();\r\n        for (let i: number = 0; i < insertSearchPaths.length; ++i) {\r\n            let insertSearchPath: string = insertSearchPaths[i];\r\n            let sameSearchPathIndex: number = searchPaths.indexOf(insertSearchPath);\r\n            if (sameSearchPathIndex >= 0) {\r\n                searchPaths.splice(sameSearchPathIndex, 1);\r\n            }\r\n        }\r\n        Array.prototype.unshift.apply(searchPaths, insertSearchPaths);\r\n        cc.sys.localStorage.setItem(LocalStorageDefine.LOCAL_UPDATE_SEARCH_PATH, JSON.stringify(searchPaths));\r\n        jsb.fileUtils.setSearchPaths(searchPaths);\r\n    }\r\n\r\n    /**\r\n     * 版本号对比回调\r\n     * @param a {string} 本地版本号\r\n     * @param b {string} 远程版本号\r\n     * @return {number} （大于 0，则 a 大）（小于 0，则 b 大）（等于 0，则相等）\r\n     * 如果小于 0，代表远程版本高于本地版本，会收到 NEW_VERSION_FOUND 检测事件，提示用户更新\r\n     * 如果等于 0，或者大于 0，本地版本大于或者等于远程版本，会收到 ALREADY_UP_TO_DATE 检测事件，表示用户本地已经是最新版本\r\n     */\r\n    private onVersionCompare(a: string, b: string): number {\r\n        Logger.getInstance().log(`本地版本号：${a}`);\r\n        Logger.getInstance().log(`远程版本号：${b}`);\r\n\r\n        let aSplit: string[] = a.split(\".\");\r\n        let bSplit: string[] = b.split(\".\");\r\n\r\n        for (let i: number = 0; i < aSplit.length; ++i) {\r\n            let aNum: number = Number(aSplit[i]);\r\n            let bNum: number = Number(bSplit[i]);\r\n            if (aNum < bNum) {\r\n                this.m_diffVersionNum = UpdateDefine.VersionNumber[UpdateDefine.VersionNumber[i]];\r\n                return -1;\r\n            } else if (aNum > bNum) {\r\n                break;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 校验文件是否完整回调\r\n     * @param path {string} 文件路径\r\n     * @param asset {jsb.ManifestAsset} 资源信息\r\n     * @retrun {boolean} 文件是否完整\r\n     */\r\n    private onVerifyMD5(path: string, asset: jsb.ManifestAsset): boolean {\r\n        if (!jsb.fileUtils.isFileExist(path)) {\r\n            return false;\r\n        }\r\n\r\n        let fileData: Uint8Array | string = null;\r\n\r\n        let filePathSuffix: string = path.slice(path.lastIndexOf(\".\"), path.length);\r\n        if (TEXT_FILE_SUFFIX.indexOf[filePathSuffix] >= 0) {\r\n            fileData = jsb.fileUtils.getStringFromFile(path);\r\n        } else {\r\n            fileData = (jsb.fileUtils as any).getDataFromFile(path);\r\n        }\r\n        let fileMD5: string = CodeUtil.md5(fileData);\r\n\r\n        if (fileMD5 !== asset.md5) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    public destroy(): void {\r\n        this.m_jsbAssetsManager = null;\r\n        this.m_diffVersionNum = null;\r\n        this.m_failedFiles = null;\r\n        this.m_errorState = null;\r\n        this.m_percent = null;\r\n    }\r\n}","import EventDefine from \"../../../define/EventDefine\";\r\n/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-28 22:24:11\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 22:08:34\r\n * @FilePath     : \\client242\\assets\\src\\ui\\view\\update\\UpdateView.ts\r\n * @Description  : 热更新界面\r\n */\r\n\r\nimport ViewBase from \"../../ViewBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UpdateView extends ViewBase {\r\n\r\n    @property(cc.Label)\r\n    private labTips: cc.Label = null;\r\n\r\n    protected onLoad(): void {\r\n        this.register();\r\n        this.initView();\r\n    }\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    private register(): void {\r\n        G.EventMgr.on(EventDefine.UPDATE_PROGRESS, this, this.onUpdateProgress);\r\n    }\r\n\r\n    /**\r\n     * 初始化视图\r\n     */\r\n    private initView(): void {\r\n        this.labTips.string = \"\";\r\n    }\r\n\r\n    /**\r\n     * 热更进度回调\r\n     */\r\n    private onUpdateProgress(percent: number): void {\r\n        this.labTips.string = percent.toString();\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-04 16:04:51\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-01 00:22:55\r\n * @FilePath     : \\client242\\assets\\src\\utils\\Util.ts\r\n * @Description  : 工具类\r\n */\r\n\r\nimport Logger from \"../core/machine/Logger\";\r\n\r\nexport default class Util {\r\n\r\n    /**\r\n     * 保留小数点后的位数（不四舍五入）\r\n     * @param value {number | string} 需要保留的小数\r\n     * @param digit {number} 小数后的位数（默认 2 位）\r\n     * @return {number}\r\n     */\r\n    public static toFixed(value: number | string, digit: number = 2): number {\r\n        if (digit <= 0) {\r\n            Logger.getInstance().warn(`bit 参数位数错误：${digit}`);\r\n            return null;\r\n        }\r\n\r\n        let num: number = Number(value)\r\n        if (value === null || value === undefined || isNaN(num)) {\r\n            return null;\r\n        }\r\n\r\n        let multiple: number = 1;\r\n        for (let i: number = 0; i < digit; ++i) {\r\n            multiple *= 10;\r\n        }\r\n\r\n        let result: number = Math.floor(num * multiple) / multiple;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 通过字节流大小 转换 文件单位\r\n     * @param bytesSize {number} 字节大小（保留 2 位小数）\r\n     * @return {string} 带文件单位的大小\r\n     */\r\n    public static bytesToFileUnit(bytesSize: number): string {\r\n        // 进位数\r\n        const CARRY: number = 1024;\r\n        // 文件大小单位\r\n        const SYMBOLS: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n        let value: number = bytesSize;\r\n        let unit: string = SYMBOLS[0];\r\n        let index: number = 0;\r\n        while (index < (SYMBOLS.length - 1) && (value / CARRY) >= 1) {\r\n            value /= CARRY;\r\n            unit = SYMBOLS[++index];\r\n        }\r\n\r\n        return `${Util.toFixed(value)} ${unit}`;\r\n    }\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-11-03 21:55:31\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 23:38:15\r\n * @FilePath     : \\client242\\assets\\src\\ui\\ViewBase.ts\r\n * @Description  : 视图父类\r\n */\r\n\r\nimport UIBase from \"./UIBase\";\r\n\r\nexport default class ViewBase extends UIBase implements ViewInterface {\r\n\r\n    // 视图路径\r\n    public path: ViewDefineType = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * 语言切换回调\r\n     */\r\n    public onLanguage(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 关闭子类界面\r\n     */\r\n    protected close(): void {\r\n        G.UIMgr.closeView(this.path);\r\n    }\r\n\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-22 11:03:13\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-07 17:39:57\r\n * @FilePath     : \\client242\\assets\\src\\define\\ViewDefine.ts\r\n * @Description  : 视图路径定义\r\n */\r\n\r\n// 常驻视图\r\nexport enum PersistViewDefine {\r\n    TestView = \"prefab/persist/TestView\",\r\n    LoadingView = \"prefab/persist/LoadingView\",\r\n    LockTouchView = \"prefab/persist/LockTouchView\",\r\n    ProgressView = \"prefab/persist/ProgressView\",\r\n}\r\n\r\n// 通用视图\r\nexport enum CommonViewDefine {\r\n    // 热更视图\r\n    UpdateView = \"prefab/common/UpdateView\",\r\n    // 弹窗视图\r\n    PopupsView = \"prefab/common/PopupsView\",\r\n    // 提示视图\r\n    TipsView = \"prefab/common/TipsView\",\r\n    // 滚动公告视图（跑马灯）\r\n    RollNoticeView = \"prefab/common/RollNoticeView\",\r\n    // 主页维护视图\r\n    MaintainView = \"prefab/common/MaintainView\",\r\n}\r\n\r\n// 自定义的视图都放这里\r\nexport enum CustomViewDefine {\r\n    // 登陆视图\r\n    LoginView = \"prefab/account/LoginView\",\r\n    // 注册视图\r\n    RegisterView = \"prefab/account/RegisterView\",\r\n}\r\n\r\n// 视图定义\r\nexport default { ...PersistViewDefine, ...CommonViewDefine, ...CustomViewDefine };","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-11-03 22:09:57\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-03 23:13:16\r\n * @FilePath     : \\client242\\assets\\src\\interface\\ViewInterface.ts\r\n * @Description  : \r\n */\r\n\r\ninterface ViewInterface extends UIInterface {\r\n    // 界面子类的路径\r\n    path: ViewDefineType;\r\n}","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-08-31 02:06:47\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-10-22 23:00:25\r\n * @FilePath     : \\client242\\assets\\src\\define\\ViewLayerDefine.ts\r\n * @Description  : 视图层级定义\r\n */\r\n\r\n// 层级间隔\r\nexport const ORDER_INTERVAL: number = 100;\r\n\r\n// 层级定义\r\nenum ViewLayerDefine {\r\n    BOTTOM = 0,\r\n    UI = 1 * ORDER_INTERVAL,\r\n    POPUP = 2 * ORDER_INTERVAL,\r\n    TOP = 3 * ORDER_INTERVAL,\r\n    SYSTEM = 4 * ORDER_INTERVAL,\r\n}\r\n\r\nexport default ViewLayerDefine;","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-09-01 17:29:22\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-09-01 23:57:03\r\n * @FilePath     : \\client242\\assets\\src\\define\\ViewStyleDefine.ts\r\n * @Description  : 视图打开动画风格定义\r\n */\r\n\r\nenum ViewStyleDefine {\r\n    // 渐显/渐隐\r\n    FADE,\r\n    // 缩放\r\n    SCALE,\r\n    // 从左到右\r\n    LEFT_RIGHT,\r\n    // 从右到左\r\n    RIGHT_LEFT,\r\n    // 从下到上\r\n    BOTTOM_TOP,\r\n    // 从上到下\r\n    TOP_BOTTOM,\r\n}\r\n\r\nexport default ViewStyleDefine;","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-11-06 01:43:01\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-06 23:19:28\r\n * @FilePath     : \\client243\\assets\\src\\config\\WebAPIConfig.ts\r\n * @Description  : \r\n */\r\n\r\n// 登录\r\nexport const WEB_API_LOGIN_REQUEST: string = \"/base/login\";\r\n// 注册\r\nexport const WEB_API_REGISTER_REQUEST: string = \"/base/register\";","/*\r\n * @Author       : ougato\r\n * @Date         : 2020-11-06 01:47:10\r\n * @LastEditors  : ougato\r\n * @LastEditTime : 2020-11-06 02:35:44\r\n * @FilePath     : \\client243\\assets\\src\\interface\\WebAPIInterface.ts\r\n * @Description  : \r\n */\r\n\r\ninterface WebAPIDataInfo {\r\n    user: WebAPIUserInfo,\r\n    token: string,\r\n    expiresAt: number,\r\n}\r\n\r\ninterface WebAPIUserInfo {\r\n    id: number,\r\n    created_at: string,\r\n    updated_at: string,\r\n    uuid: string,\r\n    username: string,\r\n    nick_name: string,\r\n}\r\n\r\ninterface WebAPIResponse {\r\n    code: number,\r\n    data?: WebAPIDataInfo,\r\n    msg?: string,\r\n}\r\n\r\n/**\r\n * 登录请求\r\n */\r\ninterface WebAPILoginRequest {\r\n    // 用户名\r\n    username: string,\r\n    // 密码\r\n    password: string,\r\n}","/**\r\n * [js-md5]{@link https://github.com/emn178/js-md5}\r\n *\r\n * @namespace md5\r\n * @version 0.7.3\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2014-2017\r\n * @license MIT\r\n */\r\n(function () {\r\n  'use strict';\r\n\r\n  var ERROR = 'input is invalid type';\r\n  var WINDOW = typeof window === 'object';\r\n  var root = WINDOW ? window : {};\r\n  if (root.JS_MD5_NO_WINDOW) {\r\n    WINDOW = false;\r\n  }\r\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\r\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = global;\r\n  } else if (WEB_WORKER) {\r\n    root = self;\r\n  }\r\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n  var AMD = typeof define === 'function' && define.amd;\r\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var EXTRA = [128, 32768, 8388608, -2147483648];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\r\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\r\n\r\n  var blocks = [], buffer8;\r\n  if (ARRAY_BUFFER) {\r\n    var buffer = new ArrayBuffer(68);\r\n    buffer8 = new Uint8Array(buffer);\r\n    blocks = new Uint32Array(buffer);\r\n  }\r\n\r\n  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {\r\n    Array.isArray = function (obj) {\r\n      return Object.prototype.toString.call(obj) === '[object Array]';\r\n    };\r\n  }\r\n\r\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\r\n    ArrayBuffer.isView = function (obj) {\r\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @method hex\r\n   * @memberof md5\r\n   * @description Output hash as hex string\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {String} Hex string\r\n   * @example\r\n   * md5.hex('The quick brown fox jumps over the lazy dog');\r\n   * // equal to\r\n   * md5('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  /**\r\n   * @method digest\r\n   * @memberof md5\r\n   * @description Output hash as bytes array\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {Array} Bytes array\r\n   * @example\r\n   * md5.digest('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  /**\r\n   * @method array\r\n   * @memberof md5\r\n   * @description Output hash as bytes array\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {Array} Bytes array\r\n   * @example\r\n   * md5.array('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  /**\r\n   * @method arrayBuffer\r\n   * @memberof md5\r\n   * @description Output hash as ArrayBuffer\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {ArrayBuffer} ArrayBuffer\r\n   * @example\r\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  /**\r\n   * @method buffer\r\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\r\n   * @memberof md5\r\n   * @description Output hash as ArrayBuffer\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {ArrayBuffer} ArrayBuffer\r\n   * @example\r\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  /**\r\n   * @method base64\r\n   * @memberof md5\r\n   * @description Output hash as base64 string\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {String} base64 string\r\n   * @example\r\n   * md5.base64('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  var createOutputMethod = function (outputType) {\r\n    return function (message) {\r\n      return new Md5(true).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @method create\r\n   * @memberof md5\r\n   * @description Create Md5 object\r\n   * @returns {Md5} Md5 object.\r\n   * @example\r\n   * var hash = md5.create();\r\n   */\r\n  /**\r\n   * @method update\r\n   * @memberof md5\r\n   * @description Create and update Md5 object\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {Md5} Md5 object.\r\n   * @example\r\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\r\n   * // equal to\r\n   * var hash = md5.create();\r\n   * hash.update('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  var createMethod = function () {\r\n    var method = createOutputMethod('hex');\r\n    if (NODE_JS) {\r\n      method = nodeWrap(method);\r\n    }\r\n    method.create = function () {\r\n      return new Md5();\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var nodeWrap = function (method) {\r\n    var crypto = eval(\"require('crypto')\");\r\n    var Buffer = eval(\"require('buffer').Buffer\");\r\n    var nodeMethod = function (message) {\r\n      if (typeof message === 'string') {\r\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\r\n      } else {\r\n        if (message === null || message === undefined) {\r\n          throw ERROR;\r\n        } else if (message.constructor === ArrayBuffer) {\r\n          message = new Uint8Array(message);\r\n        }\r\n      }\r\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\r\n        message.constructor === Buffer) {\r\n        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');\r\n      } else {\r\n        return method(message);\r\n      }\r\n    };\r\n    return nodeMethod;\r\n  };\r\n\r\n  /**\r\n   * Md5 class\r\n   * @class Md5\r\n   * @description This is internal class.\r\n   * @see {@link md5.create}\r\n   */\r\n  function Md5(sharedMemory) {\r\n    if (sharedMemory) {\r\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n      this.blocks = blocks;\r\n      this.buffer8 = buffer8;\r\n    } else {\r\n      if (ARRAY_BUFFER) {\r\n        var buffer = new ArrayBuffer(68);\r\n        this.buffer8 = new Uint8Array(buffer);\r\n        this.blocks = new Uint32Array(buffer);\r\n      } else {\r\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n      }\r\n    }\r\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\r\n    this.finalized = this.hashed = false;\r\n    this.first = true;\r\n  }\r\n\r\n  /**\r\n   * @method update\r\n   * @memberof Md5\r\n   * @instance\r\n   * @description Update hash\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {Md5} Md5 object.\r\n   * @see {@link md5.update}\r\n   */\r\n  Md5.prototype.update = function (message) {\r\n    if (this.finalized) {\r\n      return;\r\n    }\r\n\r\n    var notString, type = typeof message;\r\n    if (type !== 'string') {\r\n      if (type === 'object') {\r\n        if (message === null) {\r\n          throw ERROR;\r\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\r\n          message = new Uint8Array(message);\r\n        } else if (!Array.isArray(message)) {\r\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\r\n            throw ERROR;\r\n          }\r\n        }\r\n      } else {\r\n        throw ERROR;\r\n      }\r\n      notString = true;\r\n    }\r\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\r\n    var buffer8 = this.buffer8;\r\n\r\n    while (index < length) {\r\n      if (this.hashed) {\r\n        this.hashed = false;\r\n        blocks[0] = blocks[16];\r\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n      }\r\n\r\n      if (notString) {\r\n        if (ARRAY_BUFFER) {\r\n          for (i = this.start; index < length && i < 64; ++index) {\r\n            buffer8[i++] = message[index];\r\n          }\r\n        } else {\r\n          for (i = this.start; index < length && i < 64; ++index) {\r\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      } else {\r\n        if (ARRAY_BUFFER) {\r\n          for (i = this.start; index < length && i < 64; ++index) {\r\n            code = message.charCodeAt(index);\r\n            if (code < 0x80) {\r\n              buffer8[i++] = code;\r\n            } else if (code < 0x800) {\r\n              buffer8[i++] = 0xc0 | (code >> 6);\r\n              buffer8[i++] = 0x80 | (code & 0x3f);\r\n            } else if (code < 0xd800 || code >= 0xe000) {\r\n              buffer8[i++] = 0xe0 | (code >> 12);\r\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\r\n              buffer8[i++] = 0x80 | (code & 0x3f);\r\n            } else {\r\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n              buffer8[i++] = 0xf0 | (code >> 18);\r\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\r\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\r\n              buffer8[i++] = 0x80 | (code & 0x3f);\r\n            }\r\n          }\r\n        } else {\r\n          for (i = this.start; index < length && i < 64; ++index) {\r\n            code = message.charCodeAt(index);\r\n            if (code < 0x80) {\r\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n            } else if (code < 0x800) {\r\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n            } else if (code < 0xd800 || code >= 0xe000) {\r\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n            } else {\r\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      this.bytes += i - this.start;\r\n      if (i >= 64) {\r\n        this.start = i - 64;\r\n        this.hash();\r\n        this.hashed = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    if (this.bytes > 4294967295) {\r\n      this.hBytes += this.bytes / 4294967296 << 0;\r\n      this.bytes = this.bytes % 4294967296;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Md5.prototype.finalize = function () {\r\n    if (this.finalized) {\r\n      return;\r\n    }\r\n    this.finalized = true;\r\n    var blocks = this.blocks, i = this.lastByteIndex;\r\n    blocks[i >> 2] |= EXTRA[i & 3];\r\n    if (i >= 56) {\r\n      if (!this.hashed) {\r\n        this.hash();\r\n      }\r\n      blocks[0] = blocks[16];\r\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n    }\r\n    blocks[14] = this.bytes << 3;\r\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\r\n    this.hash();\r\n  };\r\n\r\n  Md5.prototype.hash = function () {\r\n    var a, b, c, d, bc, da, blocks = this.blocks;\r\n\r\n    if (this.first) {\r\n      a = blocks[0] - 680876937;\r\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\r\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\r\n      d = (d << 12 | d >>> 20) + a << 0;\r\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\r\n      c = (c << 17 | c >>> 15) + d << 0;\r\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\r\n      b = (b << 22 | b >>> 10) + c << 0;\r\n    } else {\r\n      a = this.h0;\r\n      b = this.h1;\r\n      c = this.h2;\r\n      d = this.h3;\r\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\r\n      a = (a << 7 | a >>> 25) + b << 0;\r\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\r\n      d = (d << 12 | d >>> 20) + a << 0;\r\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\r\n      c = (c << 17 | c >>> 15) + d << 0;\r\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\r\n      b = (b << 22 | b >>> 10) + c << 0;\r\n    }\r\n\r\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\r\n    a = (a << 7 | a >>> 25) + b << 0;\r\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\r\n    d = (d << 12 | d >>> 20) + a << 0;\r\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\r\n    c = (c << 17 | c >>> 15) + d << 0;\r\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\r\n    b = (b << 22 | b >>> 10) + c << 0;\r\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\r\n    a = (a << 7 | a >>> 25) + b << 0;\r\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\r\n    d = (d << 12 | d >>> 20) + a << 0;\r\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\r\n    c = (c << 17 | c >>> 15) + d << 0;\r\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\r\n    b = (b << 22 | b >>> 10) + c << 0;\r\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\r\n    a = (a << 7 | a >>> 25) + b << 0;\r\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\r\n    d = (d << 12 | d >>> 20) + a << 0;\r\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\r\n    c = (c << 17 | c >>> 15) + d << 0;\r\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\r\n    b = (b << 22 | b >>> 10) + c << 0;\r\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\r\n    a = (a << 5 | a >>> 27) + b << 0;\r\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\r\n    d = (d << 9 | d >>> 23) + a << 0;\r\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\r\n    c = (c << 14 | c >>> 18) + d << 0;\r\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\r\n    b = (b << 20 | b >>> 12) + c << 0;\r\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\r\n    a = (a << 5 | a >>> 27) + b << 0;\r\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\r\n    d = (d << 9 | d >>> 23) + a << 0;\r\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\r\n    c = (c << 14 | c >>> 18) + d << 0;\r\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\r\n    b = (b << 20 | b >>> 12) + c << 0;\r\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\r\n    a = (a << 5 | a >>> 27) + b << 0;\r\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\r\n    d = (d << 9 | d >>> 23) + a << 0;\r\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\r\n    c = (c << 14 | c >>> 18) + d << 0;\r\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\r\n    b = (b << 20 | b >>> 12) + c << 0;\r\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\r\n    a = (a << 5 | a >>> 27) + b << 0;\r\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\r\n    d = (d << 9 | d >>> 23) + a << 0;\r\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\r\n    c = (c << 14 | c >>> 18) + d << 0;\r\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\r\n    b = (b << 20 | b >>> 12) + c << 0;\r\n    bc = b ^ c;\r\n    a += (bc ^ d) + blocks[5] - 378558;\r\n    a = (a << 4 | a >>> 28) + b << 0;\r\n    d += (bc ^ a) + blocks[8] - 2022574463;\r\n    d = (d << 11 | d >>> 21) + a << 0;\r\n    da = d ^ a;\r\n    c += (da ^ b) + blocks[11] + 1839030562;\r\n    c = (c << 16 | c >>> 16) + d << 0;\r\n    b += (da ^ c) + blocks[14] - 35309556;\r\n    b = (b << 23 | b >>> 9) + c << 0;\r\n    bc = b ^ c;\r\n    a += (bc ^ d) + blocks[1] - 1530992060;\r\n    a = (a << 4 | a >>> 28) + b << 0;\r\n    d += (bc ^ a) + blocks[4] + 1272893353;\r\n    d = (d << 11 | d >>> 21) + a << 0;\r\n    da = d ^ a;\r\n    c += (da ^ b) + blocks[7] - 155497632;\r\n    c = (c << 16 | c >>> 16) + d << 0;\r\n    b += (da ^ c) + blocks[10] - 1094730640;\r\n    b = (b << 23 | b >>> 9) + c << 0;\r\n    bc = b ^ c;\r\n    a += (bc ^ d) + blocks[13] + 681279174;\r\n    a = (a << 4 | a >>> 28) + b << 0;\r\n    d += (bc ^ a) + blocks[0] - 358537222;\r\n    d = (d << 11 | d >>> 21) + a << 0;\r\n    da = d ^ a;\r\n    c += (da ^ b) + blocks[3] - 722521979;\r\n    c = (c << 16 | c >>> 16) + d << 0;\r\n    b += (da ^ c) + blocks[6] + 76029189;\r\n    b = (b << 23 | b >>> 9) + c << 0;\r\n    bc = b ^ c;\r\n    a += (bc ^ d) + blocks[9] - 640364487;\r\n    a = (a << 4 | a >>> 28) + b << 0;\r\n    d += (bc ^ a) + blocks[12] - 421815835;\r\n    d = (d << 11 | d >>> 21) + a << 0;\r\n    da = d ^ a;\r\n    c += (da ^ b) + blocks[15] + 530742520;\r\n    c = (c << 16 | c >>> 16) + d << 0;\r\n    b += (da ^ c) + blocks[2] - 995338651;\r\n    b = (b << 23 | b >>> 9) + c << 0;\r\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\r\n    a = (a << 6 | a >>> 26) + b << 0;\r\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\r\n    d = (d << 10 | d >>> 22) + a << 0;\r\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\r\n    c = (c << 15 | c >>> 17) + d << 0;\r\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\r\n    b = (b << 21 | b >>> 11) + c << 0;\r\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\r\n    a = (a << 6 | a >>> 26) + b << 0;\r\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\r\n    d = (d << 10 | d >>> 22) + a << 0;\r\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\r\n    c = (c << 15 | c >>> 17) + d << 0;\r\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\r\n    b = (b << 21 | b >>> 11) + c << 0;\r\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\r\n    a = (a << 6 | a >>> 26) + b << 0;\r\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\r\n    d = (d << 10 | d >>> 22) + a << 0;\r\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\r\n    c = (c << 15 | c >>> 17) + d << 0;\r\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\r\n    b = (b << 21 | b >>> 11) + c << 0;\r\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\r\n    a = (a << 6 | a >>> 26) + b << 0;\r\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\r\n    d = (d << 10 | d >>> 22) + a << 0;\r\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\r\n    c = (c << 15 | c >>> 17) + d << 0;\r\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\r\n    b = (b << 21 | b >>> 11) + c << 0;\r\n\r\n    if (this.first) {\r\n      this.h0 = a + 1732584193 << 0;\r\n      this.h1 = b - 271733879 << 0;\r\n      this.h2 = c - 1732584194 << 0;\r\n      this.h3 = d + 271733878 << 0;\r\n      this.first = false;\r\n    } else {\r\n      this.h0 = this.h0 + a << 0;\r\n      this.h1 = this.h1 + b << 0;\r\n      this.h2 = this.h2 + c << 0;\r\n      this.h3 = this.h3 + d << 0;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @method hex\r\n   * @memberof Md5\r\n   * @instance\r\n   * @description Output hash as hex string\r\n   * @returns {String} Hex string\r\n   * @see {@link md5.hex}\r\n   * @example\r\n   * hash.hex();\r\n   */\r\n  Md5.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\r\n\r\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\r\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\r\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\r\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\r\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\r\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\r\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\r\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\r\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\r\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\r\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\r\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\r\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\r\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\r\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\r\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\r\n  };\r\n\r\n  /**\r\n   * @method toString\r\n   * @memberof Md5\r\n   * @instance\r\n   * @description Output hash as hex string\r\n   * @returns {String} Hex string\r\n   * @see {@link md5.hex}\r\n   * @example\r\n   * hash.toString();\r\n   */\r\n  Md5.prototype.toString = Md5.prototype.hex;\r\n\r\n  /**\r\n   * @method digest\r\n   * @memberof Md5\r\n   * @instance\r\n   * @description Output hash as bytes array\r\n   * @returns {Array} Bytes array\r\n   * @see {@link md5.digest}\r\n   * @example\r\n   * hash.digest();\r\n   */\r\n  Md5.prototype.digest = function () {\r\n    this.finalize();\r\n\r\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\r\n    return [\r\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\r\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\r\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\r\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * @method array\r\n   * @memberof Md5\r\n   * @instance\r\n   * @description Output hash as bytes array\r\n   * @returns {Array} Bytes array\r\n   * @see {@link md5.array}\r\n   * @example\r\n   * hash.array();\r\n   */\r\n  Md5.prototype.array = Md5.prototype.digest;\r\n\r\n  /**\r\n   * @method arrayBuffer\r\n   * @memberof Md5\r\n   * @instance\r\n   * @description Output hash as ArrayBuffer\r\n   * @returns {ArrayBuffer} ArrayBuffer\r\n   * @see {@link md5.arrayBuffer}\r\n   * @example\r\n   * hash.arrayBuffer();\r\n   */\r\n  Md5.prototype.arrayBuffer = function () {\r\n    this.finalize();\r\n\r\n    var buffer = new ArrayBuffer(16);\r\n    var blocks = new Uint32Array(buffer);\r\n    blocks[0] = this.h0;\r\n    blocks[1] = this.h1;\r\n    blocks[2] = this.h2;\r\n    blocks[3] = this.h3;\r\n    return buffer;\r\n  };\r\n\r\n  /**\r\n   * @method buffer\r\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\r\n   * @memberof Md5\r\n   * @instance\r\n   * @description Output hash as ArrayBuffer\r\n   * @returns {ArrayBuffer} ArrayBuffer\r\n   * @see {@link md5.buffer}\r\n   * @example\r\n   * hash.buffer();\r\n   */\r\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\r\n\r\n  /**\r\n   * @method base64\r\n   * @memberof Md5\r\n   * @instance\r\n   * @description Output hash as base64 string\r\n   * @returns {String} base64 string\r\n   * @see {@link md5.base64}\r\n   * @example\r\n   * hash.base64();\r\n   */\r\n  Md5.prototype.base64 = function () {\r\n    var v1, v2, v3, base64Str = '', bytes = this.array();\r\n    for (var i = 0; i < 15;) {\r\n      v1 = bytes[i++];\r\n      v2 = bytes[i++];\r\n      v3 = bytes[i++];\r\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\r\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\r\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\r\n        BASE64_ENCODE_CHAR[v3 & 63];\r\n    }\r\n    v1 = bytes[i];\r\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\r\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\r\n      '==';\r\n    return base64Str;\r\n  };\r\n\r\n  var exports = createMethod();\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = exports;\r\n  } else {\r\n    /**\r\n     * @method md5\b\r\n     * @description Md5 hash function, export to global in browsers.\r\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n     * @returns {String} md5 hashes\r\n     * @example\r\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\r\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\r\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\r\n     *\r\n     * // It also supports UTF-8 encoding\r\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\r\n     *\r\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\r\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\r\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\r\n     */\r\n    root.md5 = exports;\r\n    if (AMD) {\r\n      define(function () {\r\n        return exports;\r\n      });\r\n    }\r\n  }\r\n})();\r\n","/*!\r\n * protobuf.js v6.10.0 (c) 2016, daniel wirtz\r\n * compiled wed, 15 jul 2020 23:34:13 utc\r\n * licensed under the bsd-3-clause license\r\n * see: https://github.com/dcodeio/protobuf.js for details\r\n */\r\n(function(undefined){\"use strict\";(function prelude(modules, cache, entries) {\r\n\r\n    // This is the prelude used to bundle protobuf.js for the browser. Wraps up the CommonJS\r\n    // sources through a conflict-free require shim and is again wrapped within an iife that\r\n    // provides a minification-friendly `undefined` var plus a global \"use strict\" directive\r\n    // so that minification can remove the directives of each module.\r\n\r\n    function $require(name) {\r\n        var $module = cache[name];\r\n        if (!$module)\r\n            modules[name][0].call($module = cache[name] = { exports: {} }, $require, $module, $module.exports);\r\n        return $module.exports;\r\n    }\r\n\r\n    var protobuf = $require(entries[0]);\r\n\r\n    // Expose globally\r\n    protobuf.util.global.protobuf = protobuf;\r\n\r\n    // Be nice to AMD\r\n    if (typeof define === \"function\" && define.amd)\r\n        define([\"long\"], function(Long) {\r\n            if (Long && Long.isLong) {\r\n                protobuf.util.Long = Long;\r\n                protobuf.configure();\r\n            }\r\n            return protobuf;\r\n        });\r\n\r\n    // Be nice to CommonJS\r\n    if (typeof module === \"object\" && module && module.exports)\r\n        module.exports = protobuf;\r\n\r\n})/* end of prelude */({1:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n},{}],2:[function(require,module,exports){\r\n\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\r\n},{}],3:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\r\n},{}],4:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\r\n},{}],5:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(1),\r\n    inquire   = require(7);\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\r\n},{\"1\":1,\"7\":7}],6:[function(require,module,exports){\r\n\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\r\n},{}],7:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\r\n},{}],8:[function(require,module,exports){\r\n\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\r\n},{}],9:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\r\n},{}],10:[function(require,module,exports){\r\n\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\r\n},{}],11:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = common;\r\n\r\nvar commonRe = /\\/|\\./;\r\n\r\n/**\r\n * Provides common type definitions.\r\n * Can also be used to provide additional google types or your own custom types.\r\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\r\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\r\n * @returns {undefined}\r\n * @property {INamespace} google/protobuf/any.proto Any\r\n * @property {INamespace} google/protobuf/duration.proto Duration\r\n * @property {INamespace} google/protobuf/empty.proto Empty\r\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\r\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\r\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\r\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\r\n * @example\r\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\r\n * protobuf.common(\"descriptor\", descriptorJson);\r\n *\r\n * // manually provides a custom definition (uses my.foo namespace)\r\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\r\n */\r\nfunction common(name, json) {\r\n    if (!commonRe.test(name)) {\r\n        name = \"google/protobuf/\" + name + \".proto\";\r\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\r\n    }\r\n    common[name] = json;\r\n}\r\n\r\n// Not provided because of limited use (feel free to discuss or to provide yourself):\r\n//\r\n// google/protobuf/descriptor.proto\r\n// google/protobuf/source_context.proto\r\n// google/protobuf/type.proto\r\n//\r\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\r\n// the repository or package within the google/protobuf directory.\r\n\r\ncommon(\"any\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Any message.\r\n     * @interface IAny\r\n     * @type {Object}\r\n     * @property {string} [typeUrl]\r\n     * @property {Uint8Array} [bytes]\r\n     * @memberof common\r\n     */\r\n    Any: {\r\n        fields: {\r\n            type_url: {\r\n                type: \"string\",\r\n                id: 1\r\n            },\r\n            value: {\r\n                type: \"bytes\",\r\n                id: 2\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nvar timeType;\r\n\r\ncommon(\"duration\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Duration message.\r\n     * @interface IDuration\r\n     * @type {Object}\r\n     * @property {number|Long} [seconds]\r\n     * @property {number} [nanos]\r\n     * @memberof common\r\n     */\r\n    Duration: timeType = {\r\n        fields: {\r\n            seconds: {\r\n                type: \"int64\",\r\n                id: 1\r\n            },\r\n            nanos: {\r\n                type: \"int32\",\r\n                id: 2\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"timestamp\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Timestamp message.\r\n     * @interface ITimestamp\r\n     * @type {Object}\r\n     * @property {number|Long} [seconds]\r\n     * @property {number} [nanos]\r\n     * @memberof common\r\n     */\r\n    Timestamp: timeType\r\n});\r\n\r\ncommon(\"empty\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Empty message.\r\n     * @interface IEmpty\r\n     * @memberof common\r\n     */\r\n    Empty: {\r\n        fields: {}\r\n    }\r\n});\r\n\r\ncommon(\"struct\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Struct message.\r\n     * @interface IStruct\r\n     * @type {Object}\r\n     * @property {Object.<string,IValue>} [fields]\r\n     * @memberof common\r\n     */\r\n    Struct: {\r\n        fields: {\r\n            fields: {\r\n                keyType: \"string\",\r\n                type: \"Value\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Value message.\r\n     * @interface IValue\r\n     * @type {Object}\r\n     * @property {string} [kind]\r\n     * @property {0} [nullValue]\r\n     * @property {number} [numberValue]\r\n     * @property {string} [stringValue]\r\n     * @property {boolean} [boolValue]\r\n     * @property {IStruct} [structValue]\r\n     * @property {IListValue} [listValue]\r\n     * @memberof common\r\n     */\r\n    Value: {\r\n        oneofs: {\r\n            kind: {\r\n                oneof: [\r\n                    \"nullValue\",\r\n                    \"numberValue\",\r\n                    \"stringValue\",\r\n                    \"boolValue\",\r\n                    \"structValue\",\r\n                    \"listValue\"\r\n                ]\r\n            }\r\n        },\r\n        fields: {\r\n            nullValue: {\r\n                type: \"NullValue\",\r\n                id: 1\r\n            },\r\n            numberValue: {\r\n                type: \"double\",\r\n                id: 2\r\n            },\r\n            stringValue: {\r\n                type: \"string\",\r\n                id: 3\r\n            },\r\n            boolValue: {\r\n                type: \"bool\",\r\n                id: 4\r\n            },\r\n            structValue: {\r\n                type: \"Struct\",\r\n                id: 5\r\n            },\r\n            listValue: {\r\n                type: \"ListValue\",\r\n                id: 6\r\n            }\r\n        }\r\n    },\r\n\r\n    NullValue: {\r\n        values: {\r\n            NULL_VALUE: 0\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.ListValue message.\r\n     * @interface IListValue\r\n     * @type {Object}\r\n     * @property {Array.<IValue>} [values]\r\n     * @memberof common\r\n     */\r\n    ListValue: {\r\n        fields: {\r\n            values: {\r\n                rule: \"repeated\",\r\n                type: \"Value\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"wrappers\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.DoubleValue message.\r\n     * @interface IDoubleValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    DoubleValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"double\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.FloatValue message.\r\n     * @interface IFloatValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    FloatValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"float\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Int64Value message.\r\n     * @interface IInt64Value\r\n     * @type {Object}\r\n     * @property {number|Long} [value]\r\n     * @memberof common\r\n     */\r\n    Int64Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"int64\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.UInt64Value message.\r\n     * @interface IUInt64Value\r\n     * @type {Object}\r\n     * @property {number|Long} [value]\r\n     * @memberof common\r\n     */\r\n    UInt64Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"uint64\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.Int32Value message.\r\n     * @interface IInt32Value\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    Int32Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"int32\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.UInt32Value message.\r\n     * @interface IUInt32Value\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    UInt32Value: {\r\n        fields: {\r\n            value: {\r\n                type: \"uint32\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.BoolValue message.\r\n     * @interface IBoolValue\r\n     * @type {Object}\r\n     * @property {boolean} [value]\r\n     * @memberof common\r\n     */\r\n    BoolValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"bool\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.StringValue message.\r\n     * @interface IStringValue\r\n     * @type {Object}\r\n     * @property {string} [value]\r\n     * @memberof common\r\n     */\r\n    StringValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"string\",\r\n                id: 1\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Properties of a google.protobuf.BytesValue message.\r\n     * @interface IBytesValue\r\n     * @type {Object}\r\n     * @property {Uint8Array} [value]\r\n     * @memberof common\r\n     */\r\n    BytesValue: {\r\n        fields: {\r\n            value: {\r\n                type: \"bytes\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\ncommon(\"field_mask\", {\r\n\r\n    /**\r\n     * Properties of a google.protobuf.FieldMask message.\r\n     * @interface IDoubleValue\r\n     * @type {Object}\r\n     * @property {number} [value]\r\n     * @memberof common\r\n     */\r\n    FieldMask: {\r\n        fields: {\r\n            paths: {\r\n                rule: \"repeated\",\r\n                type: \"string\",\r\n                id: 1\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Gets the root definition of the specified common proto file.\r\n *\r\n * Bundled definitions are:\r\n * - google/protobuf/any.proto\r\n * - google/protobuf/duration.proto\r\n * - google/protobuf/empty.proto\r\n * - google/protobuf/field_mask.proto\r\n * - google/protobuf/struct.proto\r\n * - google/protobuf/timestamp.proto\r\n * - google/protobuf/wrappers.proto\r\n *\r\n * @param {string} file Proto file name\r\n * @returns {INamespace|null} Root definition or `null` if not defined\r\n */\r\ncommon.get = function get(file) {\r\n    return common[file] || null;\r\n};\r\n\r\n},{}],12:[function(require,module,exports){\r\n\"use strict\";\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = require(15),\r\n    util = require(37);\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\r\n                (\"default:\");\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) {\r\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\r\n                gen\r\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\r\n        (\"else{\")\r\n            (\"d%s=%s\", prop, arrayDefault)\r\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\r\n        (\"}\");\r\n            } else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n},{\"15\":15,\"37\":37}],13:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = require(15),\r\n    types   = require(36),\r\n    util    = require(37);\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i:\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"var c2 = r.uint32()+r.pos\");\r\n\r\n            if (types.defaults[field.keyType] !== undefined) gen\r\n                (\"k=%j\", types.defaults[field.keyType]);\r\n            else gen\r\n                (\"k=null\");\r\n\r\n            if (types.defaults[type] !== undefined) gen\r\n                (\"value=%j\", types.defaults[type]);\r\n            else gen\r\n                (\"value=null\");\r\n\r\n            gen\r\n                (\"while(r.pos<c2){\")\r\n                    (\"var tag2=r.uint32()\")\r\n                    (\"switch(tag2>>>3){\")\r\n                        (\"case 1: k=r.%s(); break\", field.keyType)\r\n                        (\"case 2:\");\r\n\r\n            if (types.basic[type] === undefined) gen\r\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\r\n            else gen\r\n                            (\"value=r.%s()\", type);\r\n\r\n            gen\r\n                            (\"break\")\r\n                        (\"default:\")\r\n                            (\"r.skipType(tag2&7)\")\r\n                            (\"break\")\r\n                    (\"}\")\r\n                (\"}\");\r\n\r\n            if (types.long[field.keyType] !== undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\r\n            else gen\r\n                (\"%s[k]=value\", ref);\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\");\r\n    // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n},{\"15\":15,\"36\":36,\"37\":37}],14:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = require(15),\r\n    types    = require(36),\r\n    util     = require(37);\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n},{\"15\":15,\"36\":36,\"37\":37}],15:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(24);\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = require(23),\r\n    util = require(37);\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"  , this.options,\r\n        \"values\"   , this.values,\r\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"  , keepComments ? this.comment : undefined,\r\n        \"comments\" , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n},{\"23\":23,\"24\":24,\"37\":37}],16:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(24);\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = require(15),\r\n    types = require(36),\r\n    util  = require(37);\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n\r\n},{\"15\":15,\"24\":24,\"36\":36,\"37\":37}],17:[function(require,module,exports){\r\n\"use strict\";\r\nvar protobuf = module.exports = require(18);\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = require(14);\r\nprotobuf.decoder          = require(13);\r\nprotobuf.verifier         = require(40);\r\nprotobuf.converter        = require(12);\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = require(24);\r\nprotobuf.Namespace        = require(23);\r\nprotobuf.Root             = require(29);\r\nprotobuf.Enum             = require(15);\r\nprotobuf.Type             = require(35);\r\nprotobuf.Field            = require(16);\r\nprotobuf.OneOf            = require(25);\r\nprotobuf.MapField         = require(20);\r\nprotobuf.Service          = require(33);\r\nprotobuf.Method           = require(22);\r\n\r\n// Runtime\r\nprotobuf.Message          = require(21);\r\nprotobuf.wrappers         = require(41);\r\n\r\n// Utility\r\nprotobuf.types            = require(36);\r\nprotobuf.util             = require(37);\r\n\r\n// Set up possibly cyclic reflection dependencies\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n\r\n},{\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"18\":18,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"29\":29,\"33\":33,\"35\":35,\"36\":36,\"37\":37,\"40\":40,\"41\":41}],18:[function(require,module,exports){\r\n\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(42);\r\nprotobuf.BufferWriter = require(43);\r\nprotobuf.Reader       = require(27);\r\nprotobuf.BufferReader = require(28);\r\n\r\n// Utility\r\nprotobuf.util         = require(39);\r\nprotobuf.rpc          = require(31);\r\nprotobuf.roots        = require(30);\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.util._configure();\r\n    protobuf.Writer._configure(protobuf.BufferWriter);\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nconfigure();\r\n\r\n},{\"27\":27,\"28\":28,\"30\":30,\"31\":31,\"39\":39,\"42\":42,\"43\":43}],19:[function(require,module,exports){\r\n\"use strict\";\r\nvar protobuf = module.exports = require(17);\r\n\r\nprotobuf.build = \"full\";\r\n\r\n// Parser\r\nprotobuf.tokenize         = require(34);\r\nprotobuf.parse            = require(26);\r\nprotobuf.common           = require(11);\r\n\r\n// Configure parser\r\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\r\n\r\n},{\"11\":11,\"17\":17,\"26\":26,\"34\":34}],20:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = require(16);\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = require(36),\r\n    util    = require(37);\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n\r\n},{\"16\":16,\"36\":36,\"37\":37}],21:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Message;\r\n\r\nvar util = require(39);\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object = object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/\r\n},{\"39\":39}],22:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(24);\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = require(37);\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n},{\"24\":24,\"37\":37}],23:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(24);\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Field    = require(16),\r\n    util     = require(37);\r\n\r\nvar Type,    // cyclic\r\n    Service,\r\n    Enum;\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\r\n */\r\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nNamespace._configure = function(Type_, Service_, Enum_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n    Enum    = Enum_;\r\n};\r\n\r\n},{\"16\":16,\"24\":24,\"37\":37}],24:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = require(37);\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Parsed Options.\r\n     * @type {Array.<Object.<string,*>>|undefined}\r\n     */\r\n    this.parsedOptions = null;\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets a parsed option.\r\n * @param {string} name parsed Option name\r\n * @param {*} value Option value\r\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\r\n    if (!this.parsedOptions) {\r\n        this.parsedOptions = [];\r\n    }\r\n    var parsedOptions = this.parsedOptions;\r\n    if (propName) {\r\n        // If setting a sub property of an option then try to merge it\r\n        // with an existing option\r\n        var opt = parsedOptions.find(function (opt) {\r\n            return Object.prototype.hasOwnProperty.call(opt, name);\r\n        });\r\n        if (opt) {\r\n            // If we found an existing option - just merge the property value\r\n            var newValue = opt[name];\r\n            util.setProperty(newValue, propName, value);\r\n        } else {\r\n            // otherwise, create a new option, set it's property and add it to the list\r\n            opt = {};\r\n            opt[name] = util.setProperty({}, propName, value);\r\n            parsedOptions.push(opt);\r\n        }\r\n    } else {\r\n        // Always create a new option when setting the value of the option itself\r\n        var newOpt = {};\r\n        newOpt[name] = value;\r\n        parsedOptions.push(newOpt);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n\r\n},{\"37\":37}],25:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(24);\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = require(16),\r\n    util  = require(37);\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n\r\n},{\"16\":16,\"24\":24,\"37\":37}],26:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = parse;\r\n\r\nparse.filename = null;\r\nparse.defaults = { keepCase: false };\r\n\r\nvar tokenize  = require(34),\r\n    Root      = require(29),\r\n    Type      = require(35),\r\n    Field     = require(16),\r\n    MapField  = require(20),\r\n    OneOf     = require(25),\r\n    Enum      = require(15),\r\n    Service   = require(33),\r\n    Method    = require(22),\r\n    types     = require(36),\r\n    util      = require(37);\r\n\r\nvar base10Re    = /^[1-9][0-9]*$/,\r\n    base10NegRe = /^-?[1-9][0-9]*$/,\r\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\r\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\r\n    base8Re     = /^0[0-7]+$/,\r\n    base8NegRe  = /^-?0[0-7]+$/,\r\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\r\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\r\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\r\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\r\n\r\n/**\r\n * Result object returned from {@link parse}.\r\n * @interface IParserResult\r\n * @property {string|undefined} package Package name, if declared\r\n * @property {string[]|undefined} imports Imports, if any\r\n * @property {string[]|undefined} weakImports Weak imports, if any\r\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\r\n * @property {Root} root Populated root instance\r\n */\r\n\r\n/**\r\n * Options modifying the behavior of {@link parse}.\r\n * @interface IParseOptions\r\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\r\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\r\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\r\n */\r\n\r\n/**\r\n * Options modifying the behavior of JSON serialization.\r\n * @interface IToJSONOptions\r\n * @property {boolean} [keepComments=false] Serializes comments.\r\n */\r\n\r\n/**\r\n * Parses the given .proto source and returns an object with the parsed contents.\r\n * @param {string} source Source contents\r\n * @param {Root} root Root to populate\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {IParserResult} Parser result\r\n * @property {string} filename=null Currently processing file name for error reporting, if known\r\n * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n */\r\nfunction parse(source, root, options) {\r\n    /* eslint-disable callback-return */\r\n    if (!(root instanceof Root)) {\r\n        options = root;\r\n        root = new Root();\r\n    }\r\n    if (!options)\r\n        options = parse.defaults;\r\n\r\n    var preferTrailingComment = options.preferTrailingComment || false;\r\n    var tn = tokenize(source, options.alternateCommentMode || false),\r\n        next = tn.next,\r\n        push = tn.push,\r\n        peek = tn.peek,\r\n        skip = tn.skip,\r\n        cmnt = tn.cmnt;\r\n\r\n    var head = true,\r\n        pkg,\r\n        imports,\r\n        weakImports,\r\n        syntax,\r\n        isProto3 = false;\r\n\r\n    var ptr = root;\r\n\r\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\r\n\r\n    /* istanbul ignore next */\r\n    function illegal(token, name, insideTryCatch) {\r\n        var filename = parse.filename;\r\n        if (!insideTryCatch)\r\n            parse.filename = null;\r\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\r\n    }\r\n\r\n    function readString() {\r\n        var values = [],\r\n            token;\r\n        do {\r\n            /* istanbul ignore if */\r\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\r\n                throw illegal(token);\r\n\r\n            values.push(next());\r\n            skip(token);\r\n            token = peek();\r\n        } while (token === \"\\\"\" || token === \"'\");\r\n        return values.join(\"\");\r\n    }\r\n\r\n    function readValue(acceptTypeRef) {\r\n        var token = next();\r\n        switch (token) {\r\n            case \"'\":\r\n            case \"\\\"\":\r\n                push(token);\r\n                return readString();\r\n            case \"true\": case \"TRUE\":\r\n                return true;\r\n            case \"false\": case \"FALSE\":\r\n                return false;\r\n        }\r\n        try {\r\n            return parseNumber(token, /* insideTryCatch */ true);\r\n        } catch (e) {\r\n\r\n            /* istanbul ignore else */\r\n            if (acceptTypeRef && typeRefRe.test(token))\r\n                return token;\r\n\r\n            /* istanbul ignore next */\r\n            throw illegal(token, \"value\");\r\n        }\r\n    }\r\n\r\n    function readRanges(target, acceptStrings) {\r\n        var token, start;\r\n        do {\r\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\r\n                target.push(readString());\r\n            else\r\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\r\n        } while (skip(\",\", true));\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseNumber(token, insideTryCatch) {\r\n        var sign = 1;\r\n        if (token.charAt(0) === \"-\") {\r\n            sign = -1;\r\n            token = token.substring(1);\r\n        }\r\n        switch (token) {\r\n            case \"inf\": case \"INF\": case \"Inf\":\r\n                return sign * Infinity;\r\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\r\n                return NaN;\r\n            case \"0\":\r\n                return 0;\r\n        }\r\n        if (base10Re.test(token))\r\n            return sign * parseInt(token, 10);\r\n        if (base16Re.test(token))\r\n            return sign * parseInt(token, 16);\r\n        if (base8Re.test(token))\r\n            return sign * parseInt(token, 8);\r\n\r\n        /* istanbul ignore else */\r\n        if (numberRe.test(token))\r\n            return sign * parseFloat(token);\r\n\r\n        /* istanbul ignore next */\r\n        throw illegal(token, \"number\", insideTryCatch);\r\n    }\r\n\r\n    function parseId(token, acceptNegative) {\r\n        switch (token) {\r\n            case \"max\": case \"MAX\": case \"Max\":\r\n                return 536870911;\r\n            case \"0\":\r\n                return 0;\r\n        }\r\n\r\n        /* istanbul ignore if */\r\n        if (!acceptNegative && token.charAt(0) === \"-\")\r\n            throw illegal(token, \"id\");\r\n\r\n        if (base10NegRe.test(token))\r\n            return parseInt(token, 10);\r\n        if (base16NegRe.test(token))\r\n            return parseInt(token, 16);\r\n\r\n        /* istanbul ignore else */\r\n        if (base8NegRe.test(token))\r\n            return parseInt(token, 8);\r\n\r\n        /* istanbul ignore next */\r\n        throw illegal(token, \"id\");\r\n    }\r\n\r\n    function parsePackage() {\r\n\r\n        /* istanbul ignore if */\r\n        if (pkg !== undefined)\r\n            throw illegal(\"package\");\r\n\r\n        pkg = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(pkg))\r\n            throw illegal(pkg, \"name\");\r\n\r\n        ptr = ptr.define(pkg);\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseImport() {\r\n        var token = peek();\r\n        var whichImports;\r\n        switch (token) {\r\n            case \"weak\":\r\n                whichImports = weakImports || (weakImports = []);\r\n                next();\r\n                break;\r\n            case \"public\":\r\n                next();\r\n                // eslint-disable-line no-fallthrough\r\n            default:\r\n                whichImports = imports || (imports = []);\r\n                break;\r\n        }\r\n        token = readString();\r\n        skip(\";\");\r\n        whichImports.push(token);\r\n    }\r\n\r\n    function parseSyntax() {\r\n        skip(\"=\");\r\n        syntax = readString();\r\n        isProto3 = syntax === \"proto3\";\r\n\r\n        /* istanbul ignore if */\r\n        if (!isProto3 && syntax !== \"proto2\")\r\n            throw illegal(syntax, \"syntax\");\r\n\r\n        skip(\";\");\r\n    }\r\n\r\n    function parseCommon(parent, token) {\r\n        switch (token) {\r\n\r\n            case \"option\":\r\n                parseOption(parent, token);\r\n                skip(\";\");\r\n                return true;\r\n\r\n            case \"message\":\r\n                parseType(parent, token);\r\n                return true;\r\n\r\n            case \"enum\":\r\n                parseEnum(parent, token);\r\n                return true;\r\n\r\n            case \"service\":\r\n                parseService(parent, token);\r\n                return true;\r\n\r\n            case \"extend\":\r\n                parseExtension(parent, token);\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function ifBlock(obj, fnIf, fnElse) {\r\n        var trailingLine = tn.line;\r\n        if (obj) {\r\n            if(typeof obj.comment !== \"string\") {\r\n              obj.comment = cmnt(); // try block-type comment\r\n            }\r\n            obj.filename = parse.filename;\r\n        }\r\n        if (skip(\"{\", true)) {\r\n            var token;\r\n            while ((token = next()) !== \"}\")\r\n                fnIf(token);\r\n            skip(\";\", true);\r\n        } else {\r\n            if (fnElse)\r\n                fnElse();\r\n            skip(\";\");\r\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\r\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\r\n        }\r\n    }\r\n\r\n    function parseType(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"type name\");\r\n\r\n        var type = new Type(token);\r\n        ifBlock(type, function parseType_block(token) {\r\n            if (parseCommon(type, token))\r\n                return;\r\n\r\n            switch (token) {\r\n\r\n                case \"map\":\r\n                    parseMapField(type, token);\r\n                    break;\r\n\r\n                case \"required\":\r\n                case \"optional\":\r\n                case \"repeated\":\r\n                    parseField(type, token);\r\n                    break;\r\n\r\n                case \"oneof\":\r\n                    parseOneOf(type, token);\r\n                    break;\r\n\r\n                case \"extensions\":\r\n                    readRanges(type.extensions || (type.extensions = []));\r\n                    break;\r\n\r\n                case \"reserved\":\r\n                    readRanges(type.reserved || (type.reserved = []), true);\r\n                    break;\r\n\r\n                default:\r\n                    /* istanbul ignore if */\r\n                    if (!isProto3 || !typeRefRe.test(token))\r\n                        throw illegal(token);\r\n\r\n                    push(token);\r\n                    parseField(type, \"optional\");\r\n                    break;\r\n            }\r\n        });\r\n        parent.add(type);\r\n    }\r\n\r\n    function parseField(parent, rule, extend) {\r\n        var type = next();\r\n        if (type === \"group\") {\r\n            parseGroup(parent, rule);\r\n            return;\r\n        }\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(type))\r\n            throw illegal(type, \"type\");\r\n\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        name = applyCase(name);\r\n        skip(\"=\");\r\n\r\n        var field = new Field(name, parseId(next()), type, rule, extend);\r\n        ifBlock(field, function parseField_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(field, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseField_line() {\r\n            parseInlineOptions(field);\r\n        });\r\n        parent.add(field);\r\n\r\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\r\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\r\n        // all known packable types and anything that could be an enum (= is not a basic type).\r\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\r\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\r\n    }\r\n\r\n    function parseGroup(parent, rule) {\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        var fieldName = util.lcFirst(name);\r\n        if (name === fieldName)\r\n            name = util.ucFirst(name);\r\n        skip(\"=\");\r\n        var id = parseId(next());\r\n        var type = new Type(name);\r\n        type.group = true;\r\n        var field = new Field(fieldName, id, name, rule);\r\n        field.filename = parse.filename;\r\n        ifBlock(type, function parseGroup_block(token) {\r\n            switch (token) {\r\n\r\n                case \"option\":\r\n                    parseOption(type, token);\r\n                    skip(\";\");\r\n                    break;\r\n\r\n                case \"required\":\r\n                case \"optional\":\r\n                case \"repeated\":\r\n                    parseField(type, token);\r\n                    break;\r\n\r\n                /* istanbul ignore next */\r\n                default:\r\n                    throw illegal(token); // there are no groups with proto3 semantics\r\n            }\r\n        });\r\n        parent.add(type)\r\n              .add(field);\r\n    }\r\n\r\n    function parseMapField(parent) {\r\n        skip(\"<\");\r\n        var keyType = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (types.mapKey[keyType] === undefined)\r\n            throw illegal(keyType, \"type\");\r\n\r\n        skip(\",\");\r\n        var valueType = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(valueType))\r\n            throw illegal(valueType, \"type\");\r\n\r\n        skip(\">\");\r\n        var name = next();\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(name))\r\n            throw illegal(name, \"name\");\r\n\r\n        skip(\"=\");\r\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\r\n        ifBlock(field, function parseMapField_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(field, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseMapField_line() {\r\n            parseInlineOptions(field);\r\n        });\r\n        parent.add(field);\r\n    }\r\n\r\n    function parseOneOf(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var oneof = new OneOf(applyCase(token));\r\n        ifBlock(oneof, function parseOneOf_block(token) {\r\n            if (token === \"option\") {\r\n                parseOption(oneof, token);\r\n                skip(\";\");\r\n            } else {\r\n                push(token);\r\n                parseField(oneof, \"optional\");\r\n            }\r\n        });\r\n        parent.add(oneof);\r\n    }\r\n\r\n    function parseEnum(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var enm = new Enum(token);\r\n        ifBlock(enm, function parseEnum_block(token) {\r\n          switch(token) {\r\n            case \"option\":\r\n              parseOption(enm, token);\r\n              skip(\";\");\r\n              break;\r\n\r\n            case \"reserved\":\r\n              readRanges(enm.reserved || (enm.reserved = []), true);\r\n              break;\r\n\r\n            default:\r\n              parseEnumValue(enm, token);\r\n          }\r\n        });\r\n        parent.add(enm);\r\n    }\r\n\r\n    function parseEnumValue(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token))\r\n            throw illegal(token, \"name\");\r\n\r\n        skip(\"=\");\r\n        var value = parseId(next(), true),\r\n            dummy = {};\r\n        ifBlock(dummy, function parseEnumValue_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(dummy, token); // skip\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        }, function parseEnumValue_line() {\r\n            parseInlineOptions(dummy); // skip\r\n        });\r\n        parent.add(token, value, dummy.comment);\r\n    }\r\n\r\n    function parseOption(parent, token) {\r\n        var isCustom = skip(\"(\", true);\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var name = token;\r\n        var option = name;\r\n        var propName;\r\n\r\n        if (isCustom) {\r\n            skip(\")\");\r\n            name = \"(\" + name + \")\";\r\n            option = name;\r\n            token = peek();\r\n            if (fqTypeRefRe.test(token)) {\r\n                propName = token.substr(1); //remove '.' before property name\r\n                name += token;\r\n                next();\r\n            }\r\n        }\r\n        skip(\"=\");\r\n        var optionValue = parseOptionValue(parent, name);\r\n        setParsedOption(parent, option, optionValue, propName);\r\n    }\r\n\r\n    function parseOptionValue(parent, name) {\r\n        if (skip(\"{\", true)) { // { a: \"foo\" b { c: \"bar\" } }\r\n            var result = {};\r\n            while (!skip(\"}\", true)) {\r\n                /* istanbul ignore if */\r\n                if (!nameRe.test(token = next()))\r\n                    throw illegal(token, \"name\");\r\n\r\n                var value;\r\n                var propName = token;\r\n                if (peek() === \"{\")\r\n                    value = parseOptionValue(parent, name + \".\" + token);\r\n                else {\r\n                    skip(\":\");\r\n                    if (peek() === \"{\")\r\n                        value = parseOptionValue(parent, name + \".\" + token);\r\n                    else {\r\n                        value = readValue(true);\r\n                        setOption(parent, name + \".\" + token, value);\r\n                    }\r\n                }\r\n                var prevValue = result[propName];\r\n                if (prevValue)\r\n                    value = [].concat(prevValue).concat(value);\r\n                result[propName] = value;\r\n                skip(\",\", true);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        var simpleValue = readValue(true);\r\n        setOption(parent, name, simpleValue);\r\n        return simpleValue;\r\n        // Does not enforce a delimiter to be universal\r\n    }\r\n\r\n    function setOption(parent, name, value) {\r\n        if (parent.setOption)\r\n            parent.setOption(name, value);\r\n    }\r\n\r\n    function setParsedOption(parent, name, value, propName) {\r\n        if (parent.setParsedOption)\r\n            parent.setParsedOption(name, value, propName);\r\n    }\r\n\r\n    function parseInlineOptions(parent) {\r\n        if (skip(\"[\", true)) {\r\n            do {\r\n                parseOption(parent, \"option\");\r\n            } while (skip(\",\", true));\r\n            skip(\"]\");\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function parseService(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"service name\");\r\n\r\n        var service = new Service(token);\r\n        ifBlock(service, function parseService_block(token) {\r\n            if (parseCommon(service, token))\r\n                return;\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"rpc\")\r\n                parseMethod(service, token);\r\n            else\r\n                throw illegal(token);\r\n        });\r\n        parent.add(service);\r\n    }\r\n\r\n    function parseMethod(parent, token) {\r\n        // Get the comment of the preceding line now (if one exists) in case the\r\n        // method is defined across multiple lines.\r\n        var commentText = cmnt();\r\n\r\n        var type = token;\r\n\r\n        /* istanbul ignore if */\r\n        if (!nameRe.test(token = next()))\r\n            throw illegal(token, \"name\");\r\n\r\n        var name = token,\r\n            requestType, requestStream,\r\n            responseType, responseStream;\r\n\r\n        skip(\"(\");\r\n        if (skip(\"stream\", true))\r\n            requestStream = true;\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token);\r\n\r\n        requestType = token;\r\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\r\n        if (skip(\"stream\", true))\r\n            responseStream = true;\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token);\r\n\r\n        responseType = token;\r\n        skip(\")\");\r\n\r\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\r\n        method.comment = commentText;\r\n        ifBlock(method, function parseMethod_block(token) {\r\n\r\n            /* istanbul ignore else */\r\n            if (token === \"option\") {\r\n                parseOption(method, token);\r\n                skip(\";\");\r\n            } else\r\n                throw illegal(token);\r\n\r\n        });\r\n        parent.add(method);\r\n    }\r\n\r\n    function parseExtension(parent, token) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!typeRefRe.test(token = next()))\r\n            throw illegal(token, \"reference\");\r\n\r\n        var reference = token;\r\n        ifBlock(null, function parseExtension_block(token) {\r\n            switch (token) {\r\n\r\n                case \"required\":\r\n                case \"repeated\":\r\n                case \"optional\":\r\n                    parseField(parent, token, reference);\r\n                    break;\r\n\r\n                default:\r\n                    /* istanbul ignore if */\r\n                    if (!isProto3 || !typeRefRe.test(token))\r\n                        throw illegal(token);\r\n                    push(token);\r\n                    parseField(parent, \"optional\", reference);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    var token;\r\n    while ((token = next()) !== null) {\r\n        switch (token) {\r\n\r\n            case \"package\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parsePackage();\r\n                break;\r\n\r\n            case \"import\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parseImport();\r\n                break;\r\n\r\n            case \"syntax\":\r\n\r\n                /* istanbul ignore if */\r\n                if (!head)\r\n                    throw illegal(token);\r\n\r\n                parseSyntax();\r\n                break;\r\n\r\n            case \"option\":\r\n\r\n                parseOption(ptr, token);\r\n                skip(\";\");\r\n                break;\r\n\r\n            default:\r\n\r\n                /* istanbul ignore else */\r\n                if (parseCommon(ptr, token)) {\r\n                    head = false;\r\n                    continue;\r\n                }\r\n\r\n                /* istanbul ignore next */\r\n                throw illegal(token);\r\n        }\r\n    }\r\n\r\n    parse.filename = null;\r\n    return {\r\n        \"package\"     : pkg,\r\n        \"imports\"     : imports,\r\n         weakImports  : weakImports,\r\n         syntax       : syntax,\r\n         root         : root\r\n    };\r\n}\r\n\r\n/**\r\n * Parses the given .proto source and returns an object with the parsed contents.\r\n * @name parse\r\n * @function\r\n * @param {string} source Source contents\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {IParserResult} Parser result\r\n * @property {string} filename=null Currently processing file name for error reporting, if known\r\n * @property {IParseOptions} defaults Default {@link IParseOptions}\r\n * @variation 2\r\n */\r\n\r\n},{\"15\":15,\"16\":16,\"20\":20,\"22\":22,\"25\":25,\"29\":29,\"33\":33,\"34\":34,\"35\":35,\"36\":36,\"37\":37}],27:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(39);\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\nvar create = function create() {\r\n    return util.Buffer\r\n        ? function create_buffer_setup(buffer) {\r\n            return (Reader.create = function create_buffer(buffer) {\r\n                return util.Buffer.isBuffer(buffer)\r\n                    ? new BufferReader(buffer)\r\n                    /* istanbul ignore next */\r\n                    : create_array(buffer);\r\n            })(buffer);\r\n        }\r\n        /* istanbul ignore next */\r\n        : create_array;\r\n};\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = create();\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n    Reader.create = create();\r\n    BufferReader._configure();\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n\r\n},{\"39\":39}],28:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(27);\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(39);\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\nBufferReader._configure = function () {\r\n    /* istanbul ignore else */\r\n    if (util.Buffer)\r\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice\r\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\r\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\r\nBufferReader._configure();\r\n\r\n},{\"27\":27,\"39\":39}],29:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = require(23);\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = require(16),\r\n    Enum    = require(15),\r\n    OneOf   = require(25),\r\n    util    = require(37);\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n/**\r\n * Fetch content from file path or url\r\n * This method exists so you can override it with your own logic.\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.fetch = util.fetch;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        var cb = callback;\r\n        callback = null;\r\n        if (sync)\r\n            throw err;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Bundled definition existence checking\r\n    function getBundledFileName(filename) {\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common) return altname;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            self.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\n// Sets up cyclic dependencies (called in index-light)\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type   = Type_;\r\n    parse  = parse_;\r\n    common = common_;\r\n};\r\n\r\n},{\"15\":15,\"16\":16,\"23\":23,\"25\":25,\"37\":37}],30:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n\r\n},{}],31:[function(require,module,exports){\r\n\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(32);\r\n\r\n},{\"32\":32}],32:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(39);\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n\r\n},{\"39\":39}],33:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = require(23);\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = require(22),\r\n    util   = require(37),\r\n    rpc    = require(31);\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n\r\n},{\"22\":22,\"23\":23,\"31\":31,\"37\":37}],34:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = tokenize;\r\n\r\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\r\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\r\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\r\n\r\nvar setCommentRe = /^ *[*/]+ */,\r\n    setCommentAltRe = /^\\s*\\*?\\/*/,\r\n    setCommentSplitRe = /\\n/g,\r\n    whitespaceRe = /\\s/,\r\n    unescapeRe = /\\\\(.?)/g;\r\n\r\nvar unescapeMap = {\r\n    \"0\": \"\\0\",\r\n    \"r\": \"\\r\",\r\n    \"n\": \"\\n\",\r\n    \"t\": \"\\t\"\r\n};\r\n\r\n/**\r\n * Unescapes a string.\r\n * @param {string} str String to unescape\r\n * @returns {string} Unescaped string\r\n * @property {Object.<string,string>} map Special characters map\r\n * @memberof tokenize\r\n */\r\nfunction unescape(str) {\r\n    return str.replace(unescapeRe, function($0, $1) {\r\n        switch ($1) {\r\n            case \"\\\\\":\r\n            case \"\":\r\n                return $1;\r\n            default:\r\n                return unescapeMap[$1] || \"\";\r\n        }\r\n    });\r\n}\r\n\r\ntokenize.unescape = unescape;\r\n\r\n/**\r\n * Gets the next token and advances.\r\n * @typedef TokenizerHandleNext\r\n * @type {function}\r\n * @returns {string|null} Next token or `null` on eof\r\n */\r\n\r\n/**\r\n * Peeks for the next token.\r\n * @typedef TokenizerHandlePeek\r\n * @type {function}\r\n * @returns {string|null} Next token or `null` on eof\r\n */\r\n\r\n/**\r\n * Pushes a token back to the stack.\r\n * @typedef TokenizerHandlePush\r\n * @type {function}\r\n * @param {string} token Token\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Skips the next token.\r\n * @typedef TokenizerHandleSkip\r\n * @type {function}\r\n * @param {string} expected Expected token\r\n * @param {boolean} [optional=false] If optional\r\n * @returns {boolean} Whether the token matched\r\n * @throws {Error} If the token didn't match and is not optional\r\n */\r\n\r\n/**\r\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\r\n * @typedef TokenizerHandleCmnt\r\n * @type {function}\r\n * @param {number} [line] Line number\r\n * @returns {string|null} Comment text or `null` if none\r\n */\r\n\r\n/**\r\n * Handle object returned from {@link tokenize}.\r\n * @interface ITokenizerHandle\r\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\r\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\r\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\r\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\r\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\r\n * @property {number} line Current line number\r\n */\r\n\r\n/**\r\n * Tokenizes the given .proto source and returns an object with useful utility functions.\r\n * @param {string} source Source contents\r\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\r\n * @returns {ITokenizerHandle} Tokenizer handle\r\n */\r\nfunction tokenize(source, alternateCommentMode) {\r\n    /* eslint-disable callback-return */\r\n    source = source.toString();\r\n\r\n    var offset = 0,\r\n        length = source.length,\r\n        line = 1,\r\n        commentType = null,\r\n        commentText = null,\r\n        commentLine = 0,\r\n        commentLineEmpty = false,\r\n        commentIsLeading = false;\r\n\r\n    var stack = [];\r\n\r\n    var stringDelim = null;\r\n\r\n    /* istanbul ignore next */\r\n    /**\r\n     * Creates an error for illegal syntax.\r\n     * @param {string} subject Subject\r\n     * @returns {Error} Error created\r\n     * @inner\r\n     */\r\n    function illegal(subject) {\r\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\r\n    }\r\n\r\n    /**\r\n     * Reads a string till its end.\r\n     * @returns {string} String read\r\n     * @inner\r\n     */\r\n    function readString() {\r\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\r\n        re.lastIndex = offset - 1;\r\n        var match = re.exec(source);\r\n        if (!match)\r\n            throw illegal(\"string\");\r\n        offset = re.lastIndex;\r\n        push(stringDelim);\r\n        stringDelim = null;\r\n        return unescape(match[1]);\r\n    }\r\n\r\n    /**\r\n     * Gets the character at `pos` within the source.\r\n     * @param {number} pos Position\r\n     * @returns {string} Character\r\n     * @inner\r\n     */\r\n    function charAt(pos) {\r\n        return source.charAt(pos);\r\n    }\r\n\r\n    /**\r\n     * Sets the current comment text.\r\n     * @param {number} start Start offset\r\n     * @param {number} end End offset\r\n     * @param {boolean} isLeading set if a leading comment\r\n     * @returns {undefined}\r\n     * @inner\r\n     */\r\n    function setComment(start, end, isLeading) {\r\n        commentType = source.charAt(start++);\r\n        commentLine = line;\r\n        commentLineEmpty = false;\r\n        commentIsLeading = isLeading;\r\n        var lookback;\r\n        if (alternateCommentMode) {\r\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\r\n        } else {\r\n            lookback = 3;  // \"///\" or \"/**\"\r\n        }\r\n        var commentOffset = start - lookback,\r\n            c;\r\n        do {\r\n            if (--commentOffset < 0 ||\r\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\r\n                commentLineEmpty = true;\r\n                break;\r\n            }\r\n        } while (c === \" \" || c === \"\\t\");\r\n        var lines = source\r\n            .substring(start, end)\r\n            .split(setCommentSplitRe);\r\n        for (var i = 0; i < lines.length; ++i)\r\n            lines[i] = lines[i]\r\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\r\n                .trim();\r\n        commentText = lines\r\n            .join(\"\\n\")\r\n            .trim();\r\n    }\r\n\r\n    function isDoubleSlashCommentLine(startOffset) {\r\n        var endOffset = findEndOfLine(startOffset);\r\n\r\n        // see if remaining line matches comment pattern\r\n        var lineText = source.substring(startOffset, endOffset);\r\n        // look for 1 or 2 slashes since startOffset would already point past\r\n        // the first slash that started the comment.\r\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\r\n        return isComment;\r\n    }\r\n\r\n    function findEndOfLine(cursor) {\r\n        // find end of cursor's line\r\n        var endOffset = cursor;\r\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\r\n            endOffset++;\r\n        }\r\n        return endOffset;\r\n    }\r\n\r\n    /**\r\n     * Obtains the next token.\r\n     * @returns {string|null} Next token or `null` on eof\r\n     * @inner\r\n     */\r\n    function next() {\r\n        if (stack.length > 0)\r\n            return stack.shift();\r\n        if (stringDelim)\r\n            return readString();\r\n        var repeat,\r\n            prev,\r\n            curr,\r\n            start,\r\n            isDoc,\r\n            isLeadingComment = offset === 0;\r\n        do {\r\n            if (offset === length)\r\n                return null;\r\n            repeat = false;\r\n            while (whitespaceRe.test(curr = charAt(offset))) {\r\n                if (curr === \"\\n\") {\r\n                    isLeadingComment = true;\r\n                    ++line;\r\n                }\r\n                if (++offset === length)\r\n                    return null;\r\n            }\r\n\r\n            if (charAt(offset) === \"/\") {\r\n                if (++offset === length) {\r\n                    throw illegal(\"comment\");\r\n                }\r\n                if (charAt(offset) === \"/\") { // Line\r\n                    if (!alternateCommentMode) {\r\n                        // check for triple-slash comment\r\n                        isDoc = charAt(start = offset + 1) === \"/\";\r\n\r\n                        while (charAt(++offset) !== \"\\n\") {\r\n                            if (offset === length) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        ++offset;\r\n                        if (isDoc) {\r\n                            setComment(start, offset - 1, isLeadingComment);\r\n                        }\r\n                        ++line;\r\n                        repeat = true;\r\n                    } else {\r\n                        // check for double-slash comments, consolidating consecutive lines\r\n                        start = offset;\r\n                        isDoc = false;\r\n                        if (isDoubleSlashCommentLine(offset)) {\r\n                            isDoc = true;\r\n                            do {\r\n                                offset = findEndOfLine(offset);\r\n                                if (offset === length) {\r\n                                    break;\r\n                                }\r\n                                offset++;\r\n                            } while (isDoubleSlashCommentLine(offset));\r\n                        } else {\r\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\r\n                        }\r\n                        if (isDoc) {\r\n                            setComment(start, offset, isLeadingComment);\r\n                        }\r\n                        line++;\r\n                        repeat = true;\r\n                    }\r\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\r\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\r\n                    start = offset + 1;\r\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\r\n                    do {\r\n                        if (curr === \"\\n\") {\r\n                            ++line;\r\n                        }\r\n                        if (++offset === length) {\r\n                            throw illegal(\"comment\");\r\n                        }\r\n                        prev = curr;\r\n                        curr = charAt(offset);\r\n                    } while (prev !== \"*\" || curr !== \"/\");\r\n                    ++offset;\r\n                    if (isDoc) {\r\n                        setComment(start, offset - 2, isLeadingComment);\r\n                    }\r\n                    repeat = true;\r\n                } else {\r\n                    return \"/\";\r\n                }\r\n            }\r\n        } while (repeat);\r\n\r\n        // offset !== length if we got here\r\n\r\n        var end = offset;\r\n        delimRe.lastIndex = 0;\r\n        var delim = delimRe.test(charAt(end++));\r\n        if (!delim)\r\n            while (end < length && !delimRe.test(charAt(end)))\r\n                ++end;\r\n        var token = source.substring(offset, offset = end);\r\n        if (token === \"\\\"\" || token === \"'\")\r\n            stringDelim = token;\r\n        return token;\r\n    }\r\n\r\n    /**\r\n     * Pushes a token back to the stack.\r\n     * @param {string} token Token\r\n     * @returns {undefined}\r\n     * @inner\r\n     */\r\n    function push(token) {\r\n        stack.push(token);\r\n    }\r\n\r\n    /**\r\n     * Peeks for the next token.\r\n     * @returns {string|null} Token or `null` on eof\r\n     * @inner\r\n     */\r\n    function peek() {\r\n        if (!stack.length) {\r\n            var token = next();\r\n            if (token === null)\r\n                return null;\r\n            push(token);\r\n        }\r\n        return stack[0];\r\n    }\r\n\r\n    /**\r\n     * Skips a token.\r\n     * @param {string} expected Expected token\r\n     * @param {boolean} [optional=false] Whether the token is optional\r\n     * @returns {boolean} `true` when skipped, `false` if not\r\n     * @throws {Error} When a required token is not present\r\n     * @inner\r\n     */\r\n    function skip(expected, optional) {\r\n        var actual = peek(),\r\n            equals = actual === expected;\r\n        if (equals) {\r\n            next();\r\n            return true;\r\n        }\r\n        if (!optional)\r\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets a comment.\r\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\r\n     * @returns {string|null} Comment text\r\n     * @inner\r\n     */\r\n    function cmnt(trailingLine) {\r\n        var ret = null;\r\n        if (trailingLine === undefined) {\r\n            if (commentLine === line - 1 && (alternateCommentMode || commentType === \"*\" || commentLineEmpty)) {\r\n                ret = commentIsLeading ? commentText : null;\r\n            }\r\n        } else {\r\n            /* istanbul ignore else */\r\n            if (commentLine < trailingLine) {\r\n                peek();\r\n            }\r\n            if (commentLine === trailingLine && !commentLineEmpty && (alternateCommentMode || commentType === \"/\")) {\r\n                ret = commentIsLeading ? null : commentText;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    return Object.defineProperty({\r\n        next: next,\r\n        peek: peek,\r\n        push: push,\r\n        skip: skip,\r\n        cmnt: cmnt\r\n    }, \"line\", {\r\n        get: function() { return line; }\r\n    });\r\n    /* eslint-enable callback-return */\r\n}\r\n\r\n},{}],35:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = require(23);\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = require(15),\r\n    OneOf     = require(25),\r\n    Field     = require(16),\r\n    MapField  = require(20),\r\n    Service   = require(33),\r\n    Message   = require(21),\r\n    Reader    = require(27),\r\n    Writer    = require(42),\r\n    util      = require(37),\r\n    encoder   = require(14),\r\n    decoder   = require(13),\r\n    verifier  = require(40),\r\n    converter = require(12),\r\n    wrappers  = require(41);\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n\r\n},{\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"20\":20,\"21\":21,\"23\":23,\"25\":25,\"27\":27,\"33\":33,\"37\":37,\"40\":40,\"41\":41,\"42\":42}],36:[function(require,module,exports){\r\n\"use strict\";\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = require(37);\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n\r\n},{\"37\":37}],37:[function(require,module,exports){\r\n\"use strict\";\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = require(39);\r\n\r\nvar roots = require(30);\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = require(3);\r\nutil.fetch   = require(5);\r\nutil.path    = require(8);\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = require(35);\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = require(15);\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n\r\n/**\r\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {string} path dot '.' delimited path of the property to set\r\n * @param {Object} value the value to set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nutil.setProperty = function setProperty(dst, path, value) {\r\n    function setProp(dst, path, value) {\r\n        var part = path.shift();\r\n        if (path.length > 0) {\r\n            dst[part] = setProp(dst[part] || {}, path, value);\r\n        } else {\r\n            var prevValue = dst[part];\r\n            if (prevValue)\r\n                value = [].concat(prevValue).concat(value);\r\n            dst[part] = value;\r\n        }\r\n        return dst;\r\n    }\r\n\r\n    if (typeof dst !== \"object\")\r\n        throw TypeError(\"dst must be an object\");\r\n    if (!path)\r\n        throw TypeError(\"path must be specified\");\r\n\r\n    path = path.split(\".\");\r\n    return setProp(dst, path, value);\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(29))());\r\n    }\r\n});\r\n\r\n},{\"15\":15,\"29\":29,\"3\":3,\"30\":30,\"35\":35,\"39\":39,\"5\":5,\"8\":8}],38:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(39);\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n\r\n},{\"39\":39}],39:[function(require,module,exports){\r\n\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(1);\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(2);\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(4);\r\n\r\n// float handling accross browsers\r\nutil.float = require(6);\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(7);\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(10);\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(9);\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(38);\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n */\r\nutil.isNode = Boolean(typeof global !== \"undefined\"\r\n                   && global\r\n                   && global.process\r\n                   && global.process.versions\r\n                   && global.process.versions.node);\r\n\r\n/**\r\n * Global object reference.\r\n * @memberof util\r\n * @type {Object}\r\n */\r\nutil.global = util.isNode && global\r\n           || typeof window !== \"undefined\" && window\r\n           || typeof self   !== \"undefined\" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n\r\n},{\"1\":1,\"10\":10,\"2\":2,\"38\":38,\"4\":4,\"6\":6,\"7\":7,\"9\":9}],40:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = require(15),\r\n    util      = require(37);\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n},{\"15\":15,\"37\":37}],41:[function(require,module,exports){\r\n\"use strict\";\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = require(21);\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n             // Only use fully qualified type name after the last '/'\r\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].substr(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                if (type_url.indexOf(\"/\") === -1) {\r\n                    type_url = \"/\" + type_url;\r\n                }\r\n                return this.create({\r\n                    type_url: type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // Default prefix\r\n        var googleApi = \"type.googleapis.com/\";\r\n        var prefix = \"\";\r\n        var name = \"\";\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            // Separate the prefix used\r\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            var messageName = message.$type.fullName[0] === \".\" ?\r\n                message.$type.fullName.substr(1) : message.$type.fullName;\r\n            // Default to type.googleapis.com prefix if no prefix is used\r\n            if (prefix === \"\") {\r\n                prefix = googleApi;\r\n            }\r\n            name = prefix + messageName;\r\n            object[\"@type\"] = name;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n\r\n},{\"21\":21}],42:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(39);\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\nvar create = function create() {\r\n    return util.Buffer\r\n        ? function create_buffer_setup() {\r\n            return (Writer.create = function create_buffer() {\r\n                return new BufferWriter();\r\n            })();\r\n        }\r\n        /* istanbul ignore next */\r\n        : function create_array() {\r\n            return new Writer();\r\n        };\r\n};\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = create();\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n    Writer.create = create();\r\n    BufferWriter._configure();\r\n};\r\n\r\n},{\"39\":39}],43:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(42);\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(39);\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\nBufferWriter._configure = function () {\r\n    /**\r\n     * Allocates a buffer of the specified size.\r\n     * @function\r\n     * @param {number} size Buffer size\r\n     * @returns {Buffer} Buffer\r\n     */\r\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\r\n\r\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\r\n        ? function writeBytesBuffer_set(val, buf, pos) {\r\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n          // also works for plain array values\r\n        }\r\n        /* istanbul ignore next */\r\n        : function writeBytesBuffer_copy(val, buf, pos) {\r\n          if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n          else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n        };\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(BufferWriter.writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else if (buf.utf8Write)\r\n        buf.utf8Write(val, pos);\r\n    else\r\n        buf.write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = util.Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\r\nBufferWriter._configure();\r\n\r\n},{\"39\":39,\"42\":42}]},{},[19])\r\n\r\n})();\r\n//# sourceMappingURL=protobuf.js.map\r\n"],"file":"index.js"}